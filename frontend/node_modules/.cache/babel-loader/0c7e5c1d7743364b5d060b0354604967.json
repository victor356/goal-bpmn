{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    isAny = require('bpmn-js/lib/features/modeling/util/ModelingUtil').isAny,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar filter = require('lodash/filter');\n\nvar extensionElementsHelper = require('../../../helper/ExtensionElementsHelper'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    elementHelper = require('../../../helper/ElementHelper'),\n    eventDefinitionHelper = require('../../../helper/EventDefinitionHelper');\n\nvar extensionElementsEntry = require('./implementation/ExtensionElements');\n\nvar entryFactory = require('../../../factory/EntryFactory');\n\nvar inOutTypeOptions = [{\n  name: 'Source',\n  value: 'source'\n}, {\n  name: 'Source Expression',\n  value: 'sourceExpression'\n}, {\n  name: 'All',\n  value: 'variables'\n}];\n/**\n  * return depend on parameter 'type' camunda:in or camunda:out extension elements\n  */\n\nfunction getCamundaInOutMappings(element, type) {\n  var bo = getBusinessObject(element);\n  var signalEventDefinition = eventDefinitionHelper.getSignalEventDefinition(bo);\n  return extensionElementsHelper.getExtensionElements(signalEventDefinition || bo, type) || [];\n}\n/**\n  * return depend on parameter 'type' camunda:in or camunda:out extension elements\n  * with source or sourceExpression attribute\n  */\n\n\nfunction getVariableMappings(element, type) {\n  var camundaMappings = getCamundaInOutMappings(element, type);\n  return filter(camundaMappings, function (mapping) {\n    return !mapping.businessKey;\n  });\n}\n\nfunction getInOutType(mapping) {\n  var inOutType = 'source';\n\n  if (mapping.variables === 'all') {\n    inOutType = 'variables';\n  } else if (typeof mapping.source !== 'undefined') {\n    inOutType = 'source';\n  } else if (typeof mapping.sourceExpression !== 'undefined') {\n    inOutType = 'sourceExpression';\n  }\n\n  return inOutType;\n}\n\nvar CAMUNDA_IN_EXTENSION_ELEMENT = 'camunda:In',\n    CAMUNDA_OUT_EXTENSION_ELEMENT = 'camunda:Out';\nvar WHITESPACE_REGEX = /\\s/;\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  var signalEventDefinition = eventDefinitionHelper.getSignalEventDefinition(element);\n\n  if (!is(element, 'camunda:CallActivity') && !signalEventDefinition) {\n    return;\n  }\n\n  if (signalEventDefinition && !isAny(element, ['bpmn:IntermediateThrowEvent', 'bpmn:EndEvent'])) {\n    return;\n  }\n\n  var isSelected = function (element, node) {\n    return !!getSelected(element, node);\n  };\n\n  var getSelected = function (element, node) {\n    var parentNode = node.parentNode;\n    var selection = inEntry.getSelected(element, parentNode);\n    var parameter = getVariableMappings(element, CAMUNDA_IN_EXTENSION_ELEMENT)[selection.idx];\n\n    if (!parameter && outEntry) {\n      selection = outEntry.getSelected(element, parentNode);\n      parameter = getVariableMappings(element, CAMUNDA_OUT_EXTENSION_ELEMENT)[selection.idx];\n    }\n\n    return parameter;\n  };\n\n  var setOptionLabelValue = function (type) {\n    return function (element, node, option, property, value, idx) {\n      var label = idx + ' : ';\n      var variableMappings = getVariableMappings(element, type);\n      var mappingValue = variableMappings[idx];\n      var mappingType = getInOutType(mappingValue);\n\n      if (mappingType === 'variables') {\n        label = label + 'all';\n      } else if (mappingType === 'source') {\n        label = label + (mappingValue.source || '<empty>');\n      } else if (mappingType === 'sourceExpression') {\n        label = label + (mappingValue.sourceExpression || '<empty>');\n      } else {\n        label = label + '<empty>';\n      }\n\n      option.text = label;\n    };\n  };\n\n  var newElement = function (type) {\n    return function (element, extensionElements, value) {\n      var newElem = elementHelper.createElement(type, {\n        source: ''\n      }, extensionElements, bpmnFactory);\n      return cmdHelper.addElementsTolist(element, extensionElements, 'values', [newElem]);\n    };\n  };\n\n  var removeElement = function (type) {\n    return function (element, extensionElements, value, idx) {\n      var variablesMappings = getVariableMappings(element, type);\n      var mapping = variablesMappings[idx];\n\n      if (mapping) {\n        return extensionElementsHelper.removeEntry(signalEventDefinition || getBusinessObject(element), element, mapping);\n      }\n    };\n  }; // in mapping for source and sourceExpression ///////////////////////////////////////////////////////////////\n\n\n  var inEntry = extensionElementsEntry(element, bpmnFactory, {\n    id: 'variableMapping-in',\n    label: translate('In Mapping'),\n    modelProperty: 'source',\n    prefix: 'In',\n    idGeneration: false,\n    resizable: true,\n    businessObject: signalEventDefinition || getBusinessObject(element),\n    createExtensionElement: newElement(CAMUNDA_IN_EXTENSION_ELEMENT),\n    removeExtensionElement: removeElement(CAMUNDA_IN_EXTENSION_ELEMENT),\n    getExtensionElements: function (element) {\n      return getVariableMappings(element, CAMUNDA_IN_EXTENSION_ELEMENT);\n    },\n    onSelectionChange: function (element, node, event, scope) {\n      outEntry && outEntry.deselect(element, node.parentNode);\n    },\n    setOptionLabelValue: setOptionLabelValue(CAMUNDA_IN_EXTENSION_ELEMENT)\n  });\n  group.entries.push(inEntry); // out mapping for source and sourceExpression ///////////////////////////////////////////////////////\n\n  if (!signalEventDefinition) {\n    var outEntry = extensionElementsEntry(element, bpmnFactory, {\n      id: 'variableMapping-out',\n      label: translate('Out Mapping'),\n      modelProperty: 'source',\n      prefix: 'Out',\n      idGeneration: false,\n      resizable: true,\n      createExtensionElement: newElement(CAMUNDA_OUT_EXTENSION_ELEMENT),\n      removeExtensionElement: removeElement(CAMUNDA_OUT_EXTENSION_ELEMENT),\n      getExtensionElements: function (element) {\n        return getVariableMappings(element, CAMUNDA_OUT_EXTENSION_ELEMENT);\n      },\n      onSelectionChange: function (element, node, event, scope) {\n        inEntry.deselect(element, node.parentNode);\n      },\n      setOptionLabelValue: setOptionLabelValue(CAMUNDA_OUT_EXTENSION_ELEMENT)\n    });\n    group.entries.push(outEntry);\n  } // label for selected mapping ///////////////////////////////////////////////////////\n\n\n  group.entries.push(entryFactory.label({\n    id: 'variableMapping-typeLabel',\n    get: function (element, node) {\n      var mapping = getSelected(element, node);\n      var value = '';\n\n      if (is(mapping, CAMUNDA_IN_EXTENSION_ELEMENT)) {\n        value = translate('In Mapping');\n      } else if (is(mapping, CAMUNDA_OUT_EXTENSION_ELEMENT)) {\n        value = translate('Out Mapping');\n      }\n\n      return {\n        label: value\n      };\n    },\n    showLabel: function (element, node) {\n      return isSelected(element, node);\n    }\n  }));\n  group.entries.push(entryFactory.selectBox({\n    id: 'variableMapping-inOutType',\n    label: translate('Type'),\n    selectOptions: inOutTypeOptions,\n    modelProperty: 'inOutType',\n    get: function (element, node) {\n      var mapping = getSelected(element, node) || {};\n      return {\n        inOutType: getInOutType(mapping)\n      };\n    },\n    set: function (element, values, node) {\n      var inOutType = values.inOutType;\n      var props = {\n        'source': undefined,\n        'sourceExpression': undefined,\n        'variables': undefined\n      };\n\n      if (inOutType === 'source') {\n        props.source = '';\n      } else if (inOutType === 'sourceExpression') {\n        props.sourceExpression = '';\n      } else if (inOutType === 'variables') {\n        props.variables = 'all';\n        props.target = undefined;\n      }\n\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, props);\n    },\n    hidden: function (element, node) {\n      return !isSelected(element, node);\n    }\n  }));\n  group.entries.push(entryFactory.textField({\n    id: 'variableMapping-source',\n    dataValueLabel: 'sourceLabel',\n    modelProperty: 'source',\n    get: function (element, node) {\n      var mapping = getSelected(element, node) || {};\n      var label = '';\n      var inOutType = getInOutType(mapping);\n\n      if (inOutType === 'source') {\n        label = 'Source';\n      } else if (inOutType === 'sourceExpression') {\n        label = 'Source Expression';\n      }\n\n      return {\n        source: mapping[inOutType],\n        sourceLabel: label\n      };\n    },\n    set: function (element, values, node) {\n      values.source = values.source || undefined;\n      var mapping = getSelected(element, node);\n      var inOutType = getInOutType(mapping);\n      var props = {};\n      props[inOutType] = values.source || '';\n      return cmdHelper.updateBusinessObject(element, mapping, props);\n    },\n    // one of both (source or sourceExpression) must have a value to make\n    // the configuration easier and more understandable\n    // it is not engine conform\n    validate: function (element, values, node) {\n      var mapping = getSelected(element, node);\n      var validation = {};\n\n      if (mapping) {\n        if (!values.source) {\n          validation.source = 'Mapping must have a ' + (values.sourceLabel.toLowerCase() || 'value');\n        }\n\n        var inOutType = getInOutType(mapping);\n\n        if (WHITESPACE_REGEX.test(values.source) && inOutType !== 'sourceExpression') {\n          validation.source = values.sourceLabel + ' must not contain whitespace';\n        }\n      }\n\n      return validation;\n    },\n    hidden: function (element, node) {\n      var selectedMapping = getSelected(element, node);\n      return !selectedMapping || selectedMapping && selectedMapping.variables;\n    }\n  }));\n  group.entries.push(entryFactory.textField({\n    id: 'variableMapping-target',\n    label: translate('Target'),\n    modelProperty: 'target',\n    get: function (element, node) {\n      return {\n        target: (getSelected(element, node) || {}).target\n      };\n    },\n    set: function (element, values, node) {\n      values.target = values.target || undefined;\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, values);\n    },\n    validate: function (element, values, node) {\n      var mapping = getSelected(element, node);\n      var validation = {};\n\n      if (mapping) {\n        var mappingType = getInOutType(mapping);\n\n        if (!values.target && mappingType !== 'variables') {\n          validation.target = 'Mapping must have a target';\n        }\n\n        if (values.target && WHITESPACE_REGEX.test(values.target) && mappingType !== 'variables') {\n          validation.target = 'Target must not contain whitespace';\n        }\n      }\n\n      return validation;\n    },\n    hidden: function (element, node) {\n      var selectedMapping = getSelected(element, node);\n      return !selectedMapping || selectedMapping && selectedMapping.variables;\n    }\n  }));\n  group.entries.push(entryFactory.checkbox({\n    id: 'variableMapping-local',\n    label: translate('Local'),\n    modelProperty: 'local',\n    get: function (element, node) {\n      return {\n        local: (getSelected(element, node) || {}).local\n      };\n    },\n    set: function (element, values, node) {\n      values.local = values.local || false;\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, values);\n    },\n    hidden: function (element, node) {\n      return !isSelected(element, node);\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/VariableMappingProps.js"],"names":["is","require","isAny","getBusinessObject","filter","extensionElementsHelper","cmdHelper","elementHelper","eventDefinitionHelper","extensionElementsEntry","entryFactory","inOutTypeOptions","name","value","getCamundaInOutMappings","element","type","bo","signalEventDefinition","getSignalEventDefinition","getExtensionElements","getVariableMappings","camundaMappings","mapping","businessKey","getInOutType","inOutType","variables","source","sourceExpression","CAMUNDA_IN_EXTENSION_ELEMENT","CAMUNDA_OUT_EXTENSION_ELEMENT","WHITESPACE_REGEX","module","exports","group","bpmnFactory","translate","isSelected","node","getSelected","parentNode","selection","inEntry","parameter","idx","outEntry","setOptionLabelValue","option","property","label","variableMappings","mappingValue","mappingType","text","newElement","extensionElements","newElem","createElement","addElementsTolist","removeElement","variablesMappings","removeEntry","id","modelProperty","prefix","idGeneration","resizable","businessObject","createExtensionElement","removeExtensionElement","onSelectionChange","event","scope","deselect","entries","push","get","showLabel","selectBox","selectOptions","set","values","props","undefined","target","updateBusinessObject","hidden","textField","dataValueLabel","sourceLabel","validate","validation","toLowerCase","test","selectedMapping","checkbox","local"],"mappings":"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","sourcesContent":["'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    isAny = require('bpmn-js/lib/features/modeling/util/ModelingUtil').isAny,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar filter = require('lodash/filter');\n\nvar extensionElementsHelper = require('../../../helper/ExtensionElementsHelper'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    elementHelper = require('../../../helper/ElementHelper'),\n    eventDefinitionHelper = require('../../../helper/EventDefinitionHelper');\n\nvar extensionElementsEntry = require('./implementation/ExtensionElements');\n\nvar entryFactory = require('../../../factory/EntryFactory');\n\n\nvar inOutTypeOptions = [\n  {\n    name: 'Source',\n    value: 'source'\n  },\n  {\n    name: 'Source Expression',\n    value: 'sourceExpression'\n  },\n  {\n    name: 'All',\n    value: 'variables'\n  }\n];\n\n/**\n  * return depend on parameter 'type' camunda:in or camunda:out extension elements\n  */\nfunction getCamundaInOutMappings(element, type) {\n  var bo = getBusinessObject(element);\n\n  var signalEventDefinition = eventDefinitionHelper.getSignalEventDefinition(bo);\n\n  return extensionElementsHelper.getExtensionElements(signalEventDefinition || bo, type) || [];\n}\n\n/**\n  * return depend on parameter 'type' camunda:in or camunda:out extension elements\n  * with source or sourceExpression attribute\n  */\nfunction getVariableMappings(element, type) {\n  var camundaMappings = getCamundaInOutMappings(element, type);\n\n  return filter(camundaMappings, function(mapping) {\n    return !mapping.businessKey;\n  });\n}\n\nfunction getInOutType(mapping) {\n  var inOutType = 'source';\n\n  if (mapping.variables === 'all') {\n    inOutType = 'variables';\n  }\n  else if (typeof mapping.source !== 'undefined') {\n    inOutType = 'source';\n  }\n  else if (typeof mapping.sourceExpression !== 'undefined') {\n    inOutType = 'sourceExpression';\n  }\n\n  return inOutType;\n}\n\nvar CAMUNDA_IN_EXTENSION_ELEMENT = 'camunda:In',\n    CAMUNDA_OUT_EXTENSION_ELEMENT = 'camunda:Out';\n\nvar WHITESPACE_REGEX = /\\s/;\n\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n  var signalEventDefinition = eventDefinitionHelper.getSignalEventDefinition(element);\n\n  if (!is(element, 'camunda:CallActivity') && !signalEventDefinition) {\n    return;\n  }\n\n  if (signalEventDefinition && !(isAny(element, [\n    'bpmn:IntermediateThrowEvent',\n    'bpmn:EndEvent'\n  ]))) {\n    return;\n  }\n\n  var isSelected = function(element, node) {\n    return !!getSelected(element, node);\n  };\n\n  var getSelected = function(element, node) {\n    var parentNode = node.parentNode;\n    var selection = inEntry.getSelected(element, parentNode);\n\n    var parameter = getVariableMappings(element, CAMUNDA_IN_EXTENSION_ELEMENT)[selection.idx];\n\n    if (!parameter && outEntry) {\n      selection = outEntry.getSelected(element, parentNode);\n      parameter = getVariableMappings(element, CAMUNDA_OUT_EXTENSION_ELEMENT)[selection.idx];\n    }\n\n    return parameter;\n  };\n\n  var setOptionLabelValue = function(type) {\n    return function(element, node, option, property, value, idx) {\n      var label = idx + ' : ';\n\n      var variableMappings = getVariableMappings(element, type);\n      var mappingValue = variableMappings[idx];\n      var mappingType = getInOutType(mappingValue);\n\n      if (mappingType === 'variables') {\n        label = label + 'all';\n      }\n      else if (mappingType === 'source') {\n        label = label + (mappingValue.source || '<empty>');\n      }\n      else if (mappingType === 'sourceExpression') {\n        label = label + (mappingValue.sourceExpression || '<empty>');\n      } else {\n        label = label + '<empty>';\n      }\n\n      option.text = label;\n    };\n  };\n\n  var newElement = function(type) {\n    return function(element, extensionElements, value) {\n      var newElem = elementHelper.createElement(type, { source: '' }, extensionElements, bpmnFactory);\n\n      return cmdHelper.addElementsTolist(element, extensionElements, 'values', [ newElem ]);\n    };\n  };\n\n  var removeElement = function(type) {\n    return function(element, extensionElements, value, idx) {\n      var variablesMappings= getVariableMappings(element, type);\n      var mapping = variablesMappings[idx];\n\n      if (mapping) {\n        return extensionElementsHelper\n          .removeEntry(signalEventDefinition || getBusinessObject(element), element, mapping);\n      }\n    };\n  };\n\n  // in mapping for source and sourceExpression ///////////////////////////////////////////////////////////////\n\n  var inEntry = extensionElementsEntry(element, bpmnFactory, {\n    id: 'variableMapping-in',\n    label: translate('In Mapping'),\n    modelProperty: 'source',\n    prefix: 'In',\n    idGeneration: false,\n    resizable: true,\n    businessObject: signalEventDefinition || getBusinessObject(element),\n\n    createExtensionElement: newElement(CAMUNDA_IN_EXTENSION_ELEMENT),\n    removeExtensionElement: removeElement(CAMUNDA_IN_EXTENSION_ELEMENT),\n\n    getExtensionElements: function(element) {\n      return getVariableMappings(element, CAMUNDA_IN_EXTENSION_ELEMENT);\n    },\n\n    onSelectionChange: function(element, node, event, scope) {\n      outEntry && outEntry.deselect(element, node.parentNode);\n    },\n\n    setOptionLabelValue: setOptionLabelValue(CAMUNDA_IN_EXTENSION_ELEMENT)\n  });\n  group.entries.push(inEntry);\n\n  // out mapping for source and sourceExpression ///////////////////////////////////////////////////////\n\n  if (!signalEventDefinition) {\n    var outEntry = extensionElementsEntry(element, bpmnFactory, {\n      id: 'variableMapping-out',\n      label: translate('Out Mapping'),\n      modelProperty: 'source',\n      prefix: 'Out',\n      idGeneration: false,\n      resizable: true,\n\n      createExtensionElement: newElement(CAMUNDA_OUT_EXTENSION_ELEMENT),\n      removeExtensionElement: removeElement(CAMUNDA_OUT_EXTENSION_ELEMENT),\n\n      getExtensionElements: function(element) {\n        return getVariableMappings(element, CAMUNDA_OUT_EXTENSION_ELEMENT);\n      },\n\n      onSelectionChange: function(element, node, event, scope) {\n        inEntry.deselect(element, node.parentNode);\n      },\n\n      setOptionLabelValue: setOptionLabelValue(CAMUNDA_OUT_EXTENSION_ELEMENT)\n    });\n    group.entries.push(outEntry);\n  }\n\n  // label for selected mapping ///////////////////////////////////////////////////////\n\n  group.entries.push(entryFactory.label({\n    id: 'variableMapping-typeLabel',\n    get: function(element, node) {\n      var mapping = getSelected(element, node);\n\n      var value = '';\n      if (is(mapping, CAMUNDA_IN_EXTENSION_ELEMENT)) {\n        value = translate('In Mapping');\n      }\n      else if (is(mapping, CAMUNDA_OUT_EXTENSION_ELEMENT)) {\n        value = translate('Out Mapping');\n      }\n\n      return {\n        label: value\n      };\n    },\n\n    showLabel: function(element, node) {\n      return isSelected(element, node);\n    }\n  }));\n\n\n  group.entries.push(entryFactory.selectBox({\n    id: 'variableMapping-inOutType',\n    label: translate('Type'),\n    selectOptions: inOutTypeOptions,\n    modelProperty: 'inOutType',\n    get: function(element, node) {\n      var mapping = getSelected(element, node) || {};\n      return {\n        inOutType: getInOutType(mapping)\n      };\n    },\n    set: function(element, values, node) {\n      var inOutType = values.inOutType;\n\n      var props = {\n        'source' : undefined,\n        'sourceExpression' : undefined,\n        'variables' : undefined\n      };\n\n      if (inOutType === 'source') {\n        props.source = '';\n      }\n      else if (inOutType === 'sourceExpression') {\n        props.sourceExpression = '';\n      }\n      else if (inOutType === 'variables') {\n        props.variables = 'all';\n        props.target = undefined;\n      }\n\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, props);\n    },\n    hidden: function(element, node) {\n      return !isSelected(element, node);\n    }\n\n  }));\n\n\n  group.entries.push(entryFactory.textField({\n    id: 'variableMapping-source',\n    dataValueLabel: 'sourceLabel',\n    modelProperty: 'source',\n    get: function(element, node) {\n      var mapping = getSelected(element, node) || {};\n\n      var label = '';\n      var inOutType = getInOutType(mapping);\n      if (inOutType === 'source') {\n        label = 'Source';\n      }\n      else if (inOutType === 'sourceExpression') {\n        label = 'Source Expression';\n      }\n\n      return {\n        source: mapping[inOutType],\n        sourceLabel: label\n      };\n    },\n    set: function(element, values, node) {\n      values.source = values.source || undefined;\n\n      var mapping = getSelected(element, node);\n      var inOutType = getInOutType(mapping);\n\n      var props = {};\n      props[inOutType] = values.source || '';\n\n      return cmdHelper.updateBusinessObject(element, mapping, props);\n    },\n    // one of both (source or sourceExpression) must have a value to make\n    // the configuration easier and more understandable\n    // it is not engine conform\n    validate: function(element, values, node) {\n      var mapping = getSelected(element, node);\n\n      var validation = {};\n      if (mapping) {\n        if (!values.source) {\n          validation.source =\n            'Mapping must have a ' + (values.sourceLabel.toLowerCase() || 'value');\n        }\n\n        var inOutType = getInOutType(mapping);\n\n        if (WHITESPACE_REGEX.test(values.source) && inOutType !== 'sourceExpression') {\n          validation.source = values.sourceLabel + ' must not contain whitespace';\n        }\n      }\n\n      return validation;\n    },\n    hidden: function(element, node) {\n      var selectedMapping = getSelected(element, node);\n      return !selectedMapping || (selectedMapping && selectedMapping.variables);\n    }\n  }));\n\n\n  group.entries.push(entryFactory.textField({\n    id: 'variableMapping-target',\n    label: translate('Target'),\n    modelProperty: 'target',\n    get: function(element, node) {\n      return {\n        target: (getSelected(element, node) || {}).target\n      };\n    },\n    set: function(element, values, node) {\n      values.target = values.target || undefined;\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, values);\n    },\n    validate: function(element, values, node) {\n      var mapping = getSelected(element, node);\n\n      var validation = {};\n      if (mapping) {\n        var mappingType = getInOutType(mapping);\n\n        if (!values.target && mappingType !== 'variables') {\n          validation.target = 'Mapping must have a target';\n        }\n\n        if (values.target\n          && WHITESPACE_REGEX.test(values.target)\n          && mappingType !== 'variables') {\n          validation.target = 'Target must not contain whitespace';\n        }\n      }\n\n      return validation;\n    },\n    hidden: function(element, node) {\n      var selectedMapping = getSelected(element, node);\n      return !selectedMapping || (selectedMapping && selectedMapping.variables);\n    }\n  }));\n\n\n  group.entries.push(entryFactory.checkbox({\n    id: 'variableMapping-local',\n    label: translate('Local'),\n    modelProperty: 'local',\n    get: function(element, node) {\n      return {\n        local: (getSelected(element, node) || {}).local\n      };\n    },\n    set: function(element, values, node) {\n      values.local = values.local || false;\n      var mapping = getSelected(element, node);\n      return cmdHelper.updateBusinessObject(element, mapping, values);\n    },\n    hidden: function(element, node) {\n      return !isSelected(element, node);\n    }\n  }));\n\n};\n"]},"metadata":{},"sourceType":"script"}