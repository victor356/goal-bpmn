{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar candidateStarter = require('./implementation/CandidateStarter');\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'camunda:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    group.entries = group.entries.concat(candidateStarter(element, bpmnFactory, {\n      getBusinessObject: function (element) {\n        var bo = getBusinessObject(element);\n\n        if (!is(bo, 'bpmn:Participant')) {\n          return bo;\n        }\n\n        return bo.get('processRef');\n      }\n    }, translate));\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/CandidateStarterProps.js"],"names":["is","require","getBusinessObject","candidateStarter","module","exports","group","element","bpmnFactory","translate","businessObject","get","entries","concat","bo"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCD,EAA/C;AAAA,IACIE,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCC,iBAD9D;;AAGA,IAAIC,gBAAgB,GAAGF,OAAO,CAAC,mCAAD,CAA9B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiD;AAChE,MAAIC,cAAc,GAAGR,iBAAiB,CAACK,OAAD,CAAtC;;AAEA,MAAIP,EAAE,CAACO,OAAD,EAAU,iBAAV,CAAF,IACAP,EAAE,CAACO,OAAD,EAAU,kBAAV,CAAF,IAAmCG,cAAc,CAACC,GAAf,CAAmB,YAAnB,CADvC,EACyE;AAEvEL,IAAAA,KAAK,CAACM,OAAN,GAAgBN,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBV,gBAAgB,CAACI,OAAD,EAAUC,WAAV,EAAuB;AAC1EN,MAAAA,iBAAiB,EAAE,UAASK,OAAT,EAAkB;AACnC,YAAIO,EAAE,GAAGZ,iBAAiB,CAACK,OAAD,CAA1B;;AAEA,YAAI,CAACP,EAAE,CAACc,EAAD,EAAK,kBAAL,CAAP,EAAiC;AAC/B,iBAAOA,EAAP;AACD;;AAED,eAAOA,EAAE,CAACH,GAAH,CAAO,YAAP,CAAP;AACD;AATyE,KAAvB,EAUlDF,SAVkD,CAArC,CAAhB;AAYD;AACF,CAnBD","sourcesContent":["'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar candidateStarter = require('./implementation/CandidateStarter');\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'camunda:Process') ||\n      is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n\n    group.entries = group.entries.concat(candidateStarter(element, bpmnFactory, {\n      getBusinessObject: function(element) {\n        var bo = getBusinessObject(element);\n\n        if (!is(bo, 'bpmn:Participant')) {\n          return bo;\n        }\n\n        return bo.get('processRef');\n      }\n    }, translate));\n\n  }\n};\n"]},"metadata":{},"sourceType":"script"}