{"ast":null,"code":"import { forEach, filter } from 'min-dash';\nimport inherits from 'inherits';\nvar LOW_PRIORITY = 250,\n    HIGH_PRIORITY = 1400;\nimport { add as collectionAdd, indexOf as collectionIdx } from '../../util/Collections';\nimport { saveClear } from '../../util/Removal';\nimport CommandInterceptor from '../../command/CommandInterceptor';\n/**\n * A handler that makes sure labels are properly moved with\n * their label targets.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\n\nexport default function LabelSupport(injector, eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  var movePreview = injector.get('movePreview', false); // remove labels from the collection that are being\n  // moved with other elements anyway\n\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function (e) {\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n    context.shapes = removeLabels(shapes);\n    context.validatedShapes = removeLabels(validatedShapes);\n  }); // add labels to visual's group\n\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function (e) {\n    var context = e.context,\n        shapes = context.shapes;\n    var labels = [];\n    forEach(shapes, function (element) {\n      forEach(element.labels, function (label) {\n        if (!label.hidden && context.shapes.indexOf(label) === -1) {\n          labels.push(label);\n        }\n\n        if (element.labelTarget) {\n          labels.push(element);\n        }\n      });\n    });\n    forEach(labels, function (label) {\n      movePreview.makeDraggable(context, label, true);\n    });\n  }); // add all labels to move closure\n\n  this.preExecuted('elements.move', HIGH_PRIORITY, function (e) {\n    var context = e.context,\n        closure = context.closure,\n        enclosedElements = closure.enclosedElements;\n    var enclosedLabels = []; // find labels that are not part of\n    // move closure yet and add them\n\n    forEach(enclosedElements, function (element) {\n      forEach(element.labels, function (label) {\n        if (!enclosedElements[label.id]) {\n          enclosedLabels.push(label);\n        }\n      });\n    });\n    closure.addAll(enclosedLabels);\n  });\n  this.preExecute(['connection.delete', 'shape.delete'], function (e) {\n    var context = e.context,\n        element = context.connection || context.shape;\n    saveClear(element.labels, function (label) {\n      modeling.removeShape(label, {\n        nested: true\n      });\n    });\n  });\n  this.execute('shape.delete', function (e) {\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = shape.labelTarget; // unset labelTarget\n\n    if (labelTarget) {\n      context.labelTargetIndex = collectionIdx(labelTarget.labels, shape);\n      context.labelTarget = labelTarget;\n      shape.labelTarget = null;\n    }\n  });\n  this.revert('shape.delete', function (e) {\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = context.labelTarget,\n        labelTargetIndex = context.labelTargetIndex; // restore labelTarget\n\n    if (labelTarget) {\n      collectionAdd(labelTarget.labels, shape, labelTargetIndex);\n      shape.labelTarget = labelTarget;\n    }\n  });\n}\ninherits(LabelSupport, CommandInterceptor);\nLabelSupport.$inject = ['injector', 'eventBus', 'modeling'];\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\n\nfunction removeLabels(elements) {\n  return filter(elements, function (element) {\n    // filter out labels that are move together\n    // with their label targets\n    return elements.indexOf(element.labelTarget) === -1;\n  });\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/node_modules/diagram-js/lib/features/label-support/LabelSupport.js"],"names":["forEach","filter","inherits","LOW_PRIORITY","HIGH_PRIORITY","add","collectionAdd","indexOf","collectionIdx","saveClear","CommandInterceptor","LabelSupport","injector","eventBus","modeling","call","movePreview","get","on","e","context","shapes","validatedShapes","removeLabels","labels","element","label","hidden","push","labelTarget","makeDraggable","preExecuted","closure","enclosedElements","enclosedLabels","id","addAll","preExecute","connection","shape","removeShape","nested","execute","labelTargetIndex","revert","$inject","elements"],"mappings":"AAAA,SACEA,OADF,EAEEC,MAFF,QAGO,UAHP;AAKA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAIC,YAAY,GAAG,GAAnB;AAAA,IACIC,aAAa,GAAG,IADpB;AAGA,SACEC,GAAG,IAAIC,aADT,EAEEC,OAAO,IAAIC,aAFb,QAGO,wBAHP;AAKA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAEjEJ,EAAAA,kBAAkB,CAACK,IAAnB,CAAwB,IAAxB,EAA8BF,QAA9B;AAEA,MAAIG,WAAW,GAAGJ,QAAQ,CAACK,GAAT,CAAa,aAAb,EAA4B,KAA5B,CAAlB,CAJiE,CAMjE;AACA;;AACAJ,EAAAA,QAAQ,CAACK,EAAT,CAAY,kBAAZ,EAAgCd,aAAhC,EAA+C,UAASe,CAAT,EAAY;AAEzD,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACIC,MAAM,GAAGD,OAAO,CAACC,MADrB;AAAA,QAEIC,eAAe,GAAGF,OAAO,CAACE,eAF9B;AAIAF,IAAAA,OAAO,CAACC,MAAR,GAAiBE,YAAY,CAACF,MAAD,CAA7B;AACAD,IAAAA,OAAO,CAACE,eAAR,GAA0BC,YAAY,CAACD,eAAD,CAAtC;AACD,GARD,EARiE,CAkBjE;;AACAN,EAAAA,WAAW,IAAIH,QAAQ,CAACK,EAAT,CAAY,kBAAZ,EAAgCf,YAAhC,EAA8C,UAASgB,CAAT,EAAY;AAEvE,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACIC,MAAM,GAAGD,OAAO,CAACC,MADrB;AAGA,QAAIG,MAAM,GAAG,EAAb;AAEAxB,IAAAA,OAAO,CAACqB,MAAD,EAAS,UAASI,OAAT,EAAkB;AAEhCzB,MAAAA,OAAO,CAACyB,OAAO,CAACD,MAAT,EAAiB,UAASE,KAAT,EAAgB;AAEtC,YAAI,CAACA,KAAK,CAACC,MAAP,IAAiBP,OAAO,CAACC,MAAR,CAAed,OAAf,CAAuBmB,KAAvB,MAAkC,CAAC,CAAxD,EAA2D;AACzDF,UAAAA,MAAM,CAACI,IAAP,CAAYF,KAAZ;AACD;;AAED,YAAID,OAAO,CAACI,WAAZ,EAAyB;AACvBL,UAAAA,MAAM,CAACI,IAAP,CAAYH,OAAZ;AACD;AACF,OATM,CAAP;AAUD,KAZM,CAAP;AAcAzB,IAAAA,OAAO,CAACwB,MAAD,EAAS,UAASE,KAAT,EAAgB;AAC9BV,MAAAA,WAAW,CAACc,aAAZ,CAA0BV,OAA1B,EAAmCM,KAAnC,EAA0C,IAA1C;AACD,KAFM,CAAP;AAID,GAzBc,CAAf,CAnBiE,CA8CjE;;AACA,OAAKK,WAAL,CAAiB,eAAjB,EAAkC3B,aAAlC,EAAiD,UAASe,CAAT,EAAY;AAC3D,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACIY,OAAO,GAAGZ,OAAO,CAACY,OADtB;AAAA,QAEIC,gBAAgB,GAAGD,OAAO,CAACC,gBAF/B;AAIA,QAAIC,cAAc,GAAG,EAArB,CAL2D,CAO3D;AACA;;AACAlC,IAAAA,OAAO,CAACiC,gBAAD,EAAmB,UAASR,OAAT,EAAkB;AAC1CzB,MAAAA,OAAO,CAACyB,OAAO,CAACD,MAAT,EAAiB,UAASE,KAAT,EAAgB;AAEtC,YAAI,CAACO,gBAAgB,CAACP,KAAK,CAACS,EAAP,CAArB,EAAiC;AAC/BD,UAAAA,cAAc,CAACN,IAAf,CAAoBF,KAApB;AACD;AACF,OALM,CAAP;AAMD,KAPM,CAAP;AASAM,IAAAA,OAAO,CAACI,MAAR,CAAeF,cAAf;AACD,GAnBD;AAsBA,OAAKG,UAAL,CAAgB,CACd,mBADc,EAEd,cAFc,CAAhB,EAGG,UAASlB,CAAT,EAAY;AAEb,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACIK,OAAO,GAAGL,OAAO,CAACkB,UAAR,IAAsBlB,OAAO,CAACmB,KAD5C;AAGA9B,IAAAA,SAAS,CAACgB,OAAO,CAACD,MAAT,EAAiB,UAASE,KAAT,EAAgB;AACxCZ,MAAAA,QAAQ,CAAC0B,WAAT,CAAqBd,KAArB,EAA4B;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAA5B;AACD,KAFQ,CAAT;AAGD,GAXD;AAcA,OAAKC,OAAL,CAAa,cAAb,EAA6B,UAASvB,CAAT,EAAY;AAEvC,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACImB,KAAK,GAAGnB,OAAO,CAACmB,KADpB;AAAA,QAEIV,WAAW,GAAGU,KAAK,CAACV,WAFxB,CAFuC,CAMvC;;AACA,QAAIA,WAAJ,EAAiB;AACfT,MAAAA,OAAO,CAACuB,gBAAR,GAA2BnC,aAAa,CAACqB,WAAW,CAACL,MAAb,EAAqBe,KAArB,CAAxC;AACAnB,MAAAA,OAAO,CAACS,WAAR,GAAsBA,WAAtB;AAEAU,MAAAA,KAAK,CAACV,WAAN,GAAoB,IAApB;AACD;AACF,GAbD;AAeA,OAAKe,MAAL,CAAY,cAAZ,EAA4B,UAASzB,CAAT,EAAY;AAEtC,QAAIC,OAAO,GAAGD,CAAC,CAACC,OAAhB;AAAA,QACImB,KAAK,GAAGnB,OAAO,CAACmB,KADpB;AAAA,QAEIV,WAAW,GAAGT,OAAO,CAACS,WAF1B;AAAA,QAGIc,gBAAgB,GAAGvB,OAAO,CAACuB,gBAH/B,CAFsC,CAOtC;;AACA,QAAId,WAAJ,EAAiB;AACfvB,MAAAA,aAAa,CAACuB,WAAW,CAACL,MAAb,EAAqBe,KAArB,EAA4BI,gBAA5B,CAAb;AAEAJ,MAAAA,KAAK,CAACV,WAAN,GAAoBA,WAApB;AACD;AACF,GAbD;AAeD;AAED3B,QAAQ,CAACS,YAAD,EAAeD,kBAAf,CAAR;AAEAC,YAAY,CAACkC,OAAb,GAAuB,CACrB,UADqB,EAErB,UAFqB,EAGrB,UAHqB,CAAvB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAStB,YAAT,CAAsBuB,QAAtB,EAAgC;AAE9B,SAAO7C,MAAM,CAAC6C,QAAD,EAAW,UAASrB,OAAT,EAAkB;AAExC;AACA;AACA,WAAOqB,QAAQ,CAACvC,OAAT,CAAiBkB,OAAO,CAACI,WAAzB,MAA0C,CAAC,CAAlD;AACD,GALY,CAAb;AAMD","sourcesContent":["import {\n  forEach,\n  filter\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nvar LOW_PRIORITY = 250,\n    HIGH_PRIORITY = 1400;\n\nimport {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../util/Collections';\n\nimport { saveClear } from '../../util/Removal';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * A handler that makes sure labels are properly moved with\n * their label targets.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function LabelSupport(injector, eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var movePreview = injector.get('movePreview', false);\n\n  // remove labels from the collection that are being\n  // moved with other elements anyway\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n\n    context.shapes = removeLabels(shapes);\n    context.validatedShapes = removeLabels(validatedShapes);\n  });\n\n  // add labels to visual's group\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes;\n\n    var labels = [];\n\n    forEach(shapes, function(element) {\n\n      forEach(element.labels, function(label) {\n\n        if (!label.hidden && context.shapes.indexOf(label) === -1) {\n          labels.push(label);\n        }\n\n        if (element.labelTarget) {\n          labels.push(element);\n        }\n      });\n    });\n\n    forEach(labels, function(label) {\n      movePreview.makeDraggable(context, label, true);\n    });\n\n  });\n\n  // add all labels to move closure\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\n    var context = e.context,\n        closure = context.closure,\n        enclosedElements = closure.enclosedElements;\n\n    var enclosedLabels = [];\n\n    // find labels that are not part of\n    // move closure yet and add them\n    forEach(enclosedElements, function(element) {\n      forEach(element.labels, function(label) {\n\n        if (!enclosedElements[label.id]) {\n          enclosedLabels.push(label);\n        }\n      });\n    });\n\n    closure.addAll(enclosedLabels);\n  });\n\n\n  this.preExecute([\n    'connection.delete',\n    'shape.delete'\n  ], function(e) {\n\n    var context = e.context,\n        element = context.connection || context.shape;\n\n    saveClear(element.labels, function(label) {\n      modeling.removeShape(label, { nested: true });\n    });\n  });\n\n\n  this.execute('shape.delete', function(e) {\n\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = shape.labelTarget;\n\n    // unset labelTarget\n    if (labelTarget) {\n      context.labelTargetIndex = collectionIdx(labelTarget.labels, shape);\n      context.labelTarget = labelTarget;\n\n      shape.labelTarget = null;\n    }\n  });\n\n  this.revert('shape.delete', function(e) {\n\n    var context = e.context,\n        shape = context.shape,\n        labelTarget = context.labelTarget,\n        labelTargetIndex = context.labelTargetIndex;\n\n    // restore labelTarget\n    if (labelTarget) {\n      collectionAdd(labelTarget.labels, shape, labelTargetIndex);\n\n      shape.labelTarget = labelTarget;\n    }\n  });\n\n}\n\ninherits(LabelSupport, CommandInterceptor);\n\nLabelSupport.$inject = [\n  'injector',\n  'eventBus',\n  'modeling'\n];\n\n\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeLabels(elements) {\n\n  return filter(elements, function(element) {\n\n    // filter out labels that are move together\n    // with their label targets\n    return elements.indexOf(element.labelTarget) === -1;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}