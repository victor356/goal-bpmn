{"ast":null,"code":"'use strict';\n\nvar cmdHelper = require('../helper/CmdHelper');\n\nvar domQuery = require('min-dom').query,\n    domAttr = require('min-dom').attr,\n    domClosest = require('min-dom').closest;\n\nvar filter = require('lodash/filter'),\n    forEach = require('lodash/forEach'),\n    keys = require('lodash/keys');\n\nvar domify = require('min-dom').domify;\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\nvar updateSelection = require('selection-update');\n\nvar TABLE_ROW_DIV_SNIPPET = '<div class=\"bpp-field-wrapper bpp-table-row\">';\nvar DELETE_ROW_BUTTON_SNIPPET = '<button class=\"clear\" data-action=\"deleteElement\">' + '<span>X</span>' + '</button>';\n\nfunction createInputRowTemplate(properties, canRemove) {\n  var template = TABLE_ROW_DIV_SNIPPET;\n  template += createInputTemplate(properties, canRemove);\n  template += canRemove ? DELETE_ROW_BUTTON_SNIPPET : '';\n  template += '</div>';\n  return template;\n}\n\nfunction createInputTemplate(properties, canRemove) {\n  var columns = properties.length;\n  var template = '';\n  forEach(properties, function (prop) {\n    template += '<input class=\"bpp-table-row-columns-' + columns + ' ' + (canRemove ? 'bpp-table-row-removable' : '') + '\" ' + 'id=\"camunda-table-row-cell-input-value\" ' + 'type=\"text\" ' + 'name=\"' + prop + '\" />';\n  });\n  return template;\n}\n\nfunction createLabelRowTemplate(labels) {\n  var template = TABLE_ROW_DIV_SNIPPET;\n  template += createLabelTemplate(labels);\n  template += '</div>';\n  return template;\n}\n\nfunction createLabelTemplate(labels) {\n  var columns = labels.length;\n  var template = '';\n  forEach(labels, function (label) {\n    template += '<label class=\"bpp-table-row-columns-' + columns + '\">' + label + '</label>';\n  });\n  return template;\n}\n\nfunction pick(elements, properties) {\n  return (elements || []).map(function (elem) {\n    var newElement = {};\n    forEach(properties, function (prop) {\n      newElement[prop] = elem[prop] || '';\n    });\n    return newElement;\n  });\n}\n\nfunction diff(element, node, values, oldValues, editable) {\n  return filter(values, function (value, idx) {\n    return !valueEqual(element, node, value, oldValues[idx], editable, idx);\n  });\n}\n\nfunction valueEqual(element, node, value, oldValue, editable, idx) {\n  if (value && !oldValue) {\n    return false;\n  }\n\n  var allKeys = keys(value).concat(keys(oldValue));\n  return allKeys.every(function (key) {\n    var n = value[key] || undefined;\n    var o = oldValue[key] || undefined;\n    return !editable(element, node, key, idx) || n === o;\n  });\n}\n\nfunction getEntryNode(node) {\n  return domClosest(node, '[data-entry]', true);\n}\n\nfunction getContainer(node) {\n  return domQuery('div[data-list-entry-container]', node);\n}\n\nfunction getSelection(node) {\n  return {\n    start: node.selectionStart,\n    end: node.selectionEnd\n  };\n}\n\nfunction setSelection(node, selection) {\n  node.selectionStart = selection.start;\n  node.selectionEnd = selection.end;\n}\n/**\n * @param  {Object} options\n * @param  {string} options.id\n * @param  {string} options.description\n * @param  {Array<string>} options.modelProperties\n * @param  {Array<string>} options.labels\n * @param  {Function} options.getElements - this callback function must return a list of business object items\n * @param  {Function} options.removeElement\n * @param  {Function} options.addElement\n * @param  {Function} options.updateElement\n * @param  {Function} options.editable\n * @param  {Function} options.setControlValue\n * @param  {Function} options.show\n *\n * @return {Object}\n */\n\n\nmodule.exports = function (options) {\n  var id = options.id,\n      modelProperties = options.modelProperties,\n      labels = options.labels,\n      description = options.description;\n  var labelRow = createLabelRowTemplate(labels);\n  var getElements = options.getElements;\n  var removeElement = options.removeElement,\n      canRemove = typeof removeElement === 'function';\n  var addElement = options.addElement,\n      canAdd = typeof addElement === 'function',\n      addLabel = options.addLabel || 'Add Value';\n  var updateElement = options.updateElement,\n      canUpdate = typeof updateElement === 'function';\n\n  var editable = options.editable || function () {\n    return true;\n  },\n      setControlValue = options.setControlValue;\n\n  var show = options.show,\n      canBeShown = typeof show === 'function';\n\n  var elements = function (element, node) {\n    return pick(getElements(element, node), modelProperties);\n  };\n\n  var factory = {\n    id: id,\n    html: (canAdd ? '<div class=\"bpp-table-add-row\" ' + (canBeShown ? 'data-show=\"show\"' : '') + '>' + '<label>' + addLabel + '</label>' + '<button class=\"add\" data-action=\"addElement\"><span>+</span></button>' + '</div>' : '') + '<div class=\"bpp-table\" data-show=\"showTable\">' + '<div class=\"bpp-field-wrapper bpp-table-row\">' + labelRow + '</div>' + '<div data-list-entry-container>' + '</div>' + '</div>' + ( // add description below table entry field\n    description ? entryFieldDescription(description) : ''),\n    get: function (element, node) {\n      var boElements = elements(element, node, this.__invalidValues);\n      var invalidValues = this.__invalidValues;\n      delete this.__invalidValues;\n      forEach(invalidValues, function (value, idx) {\n        var element = boElements[idx];\n        forEach(modelProperties, function (prop) {\n          element[prop] = value[prop];\n        });\n      });\n      return boElements;\n    },\n    set: function (element, values, node) {\n      var action = this.__action || {};\n      delete this.__action;\n\n      if (action.id === 'delete-element') {\n        return removeElement(element, node, action.idx);\n      } else if (action.id === 'add-element') {\n        return addElement(element, node);\n      } else if (canUpdate) {\n        var commands = [],\n            valuesToValidate = values;\n\n        if (typeof options.validate !== 'function') {\n          valuesToValidate = diff(element, node, values, elements(element, node), editable);\n        }\n\n        var self = this;\n        forEach(valuesToValidate, function (value) {\n          var validationError,\n              idx = values.indexOf(value);\n\n          if (typeof options.validate === 'function') {\n            validationError = options.validate(element, value, node, idx);\n          }\n\n          if (!validationError) {\n            var cmd = updateElement(element, value, node, idx);\n\n            if (cmd) {\n              commands.push(cmd);\n            }\n          } else {\n            // cache invalid value in an object by index as key\n            self.__invalidValues = self.__invalidValues || {};\n            self.__invalidValues[idx] = value; // execute a command, which does not do anything\n\n            commands.push(cmdHelper.updateProperties(element, {}));\n          }\n        });\n        return commands;\n      }\n    },\n    createListEntryTemplate: function (value, index, selectBox) {\n      return createInputRowTemplate(modelProperties, canRemove);\n    },\n    addElement: function (element, node, event, scopeNode) {\n      var template = domify(createInputRowTemplate(modelProperties, canRemove));\n      var container = getContainer(node);\n      container.appendChild(template);\n      this.__action = {\n        id: 'add-element'\n      };\n      return true;\n    },\n    deleteElement: function (element, node, event, scopeNode) {\n      var container = getContainer(node);\n      var rowToDelete = event.delegateTarget.parentNode;\n      var idx = parseInt(domAttr(rowToDelete, 'data-index'), 10);\n      container.removeChild(rowToDelete);\n      this.__action = {\n        id: 'delete-element',\n        idx: idx\n      };\n      return true;\n    },\n    editable: function (element, rowNode, input, prop, value, idx) {\n      var entryNode = domClosest(rowNode, '[data-entry]');\n      return editable(element, entryNode, prop, idx);\n    },\n    show: function (element, entryNode, node, scopeNode) {\n      entryNode = getEntryNode(entryNode);\n      return show(element, entryNode, node, scopeNode);\n    },\n    showTable: function (element, entryNode, node, scopeNode) {\n      entryNode = getEntryNode(entryNode);\n      var elems = elements(element, entryNode);\n      return elems && elems.length && (!canBeShown || show(element, entryNode, node, scopeNode));\n    },\n    validateListItem: function (element, value, node, idx) {\n      if (typeof options.validate === 'function') {\n        return options.validate(element, value, node, idx);\n      }\n    }\n  }; // Update/set the selection on the correct position.\n  // It's the same code like for an input value in the PropertiesPanel.js.\n\n  if (setControlValue) {\n    factory.setControlValue = function (element, rowNode, input, prop, value, idx) {\n      var entryNode = getEntryNode(rowNode);\n      var isReadOnly = domAttr(input, 'readonly');\n      var oldValue = input.value;\n      var selection; // prevents input fields from having the value 'undefined'\n\n      if (value === undefined) {\n        value = '';\n      } // when the attribute 'readonly' exists, ignore the comparison\n      // with 'oldValue' and 'value'\n\n\n      if (!!isReadOnly && oldValue === value) {\n        return;\n      } // update selection on undo/redo\n\n\n      if (document.activeElement === input) {\n        selection = updateSelection(getSelection(input), oldValue, value);\n      }\n\n      setControlValue(element, entryNode, input, prop, value, idx);\n\n      if (selection) {\n        setSelection(input, selection);\n      }\n    };\n  }\n\n  return factory;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/factory/TableEntryFactory.js"],"names":["cmdHelper","require","domQuery","query","domAttr","attr","domClosest","closest","filter","forEach","keys","domify","entryFieldDescription","updateSelection","TABLE_ROW_DIV_SNIPPET","DELETE_ROW_BUTTON_SNIPPET","createInputRowTemplate","properties","canRemove","template","createInputTemplate","columns","length","prop","createLabelRowTemplate","labels","createLabelTemplate","label","pick","elements","map","elem","newElement","diff","element","node","values","oldValues","editable","value","idx","valueEqual","oldValue","allKeys","concat","every","key","n","undefined","o","getEntryNode","getContainer","getSelection","start","selectionStart","end","selectionEnd","setSelection","selection","module","exports","options","id","modelProperties","description","labelRow","getElements","removeElement","addElement","canAdd","addLabel","updateElement","canUpdate","setControlValue","show","canBeShown","factory","html","get","boElements","__invalidValues","invalidValues","set","action","__action","commands","valuesToValidate","validate","self","validationError","indexOf","cmd","push","updateProperties","createListEntryTemplate","index","selectBox","event","scopeNode","container","appendChild","deleteElement","rowToDelete","delegateTarget","parentNode","parseInt","removeChild","rowNode","input","entryNode","showTable","elems","validateListItem","isReadOnly","document","activeElement"],"mappings":"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","sourcesContent":["'use strict';\n\nvar cmdHelper = require('../helper/CmdHelper');\n\nvar domQuery = require('min-dom').query,\n    domAttr = require('min-dom').attr,\n    domClosest = require('min-dom').closest;\n\nvar filter = require('lodash/filter'),\n    forEach = require('lodash/forEach'),\n    keys = require('lodash/keys');\n\nvar domify = require('min-dom').domify;\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\nvar updateSelection = require('selection-update');\n\nvar TABLE_ROW_DIV_SNIPPET = '<div class=\"bpp-field-wrapper bpp-table-row\">';\nvar DELETE_ROW_BUTTON_SNIPPET = '<button class=\"clear\" data-action=\"deleteElement\">' +\n                                  '<span>X</span>' +\n                                '</button>';\n\nfunction createInputRowTemplate(properties, canRemove) {\n  var template = TABLE_ROW_DIV_SNIPPET;\n  template += createInputTemplate(properties, canRemove);\n  template += canRemove ? DELETE_ROW_BUTTON_SNIPPET : '';\n  template += '</div>';\n\n  return template;\n}\n\nfunction createInputTemplate(properties, canRemove) {\n  var columns = properties.length;\n  var template = '';\n  forEach(properties, function(prop) {\n    template += '<input class=\"bpp-table-row-columns-' + columns + ' ' +\n                               (canRemove ? 'bpp-table-row-removable' : '') + '\" ' +\n                       'id=\"camunda-table-row-cell-input-value\" ' +\n                       'type=\"text\" ' +\n                       'name=\"' + prop + '\" />';\n  });\n  return template;\n}\n\nfunction createLabelRowTemplate(labels) {\n  var template = TABLE_ROW_DIV_SNIPPET;\n  template += createLabelTemplate(labels);\n  template += '</div>';\n\n  return template;\n}\n\nfunction createLabelTemplate(labels) {\n  var columns = labels.length;\n  var template = '';\n  forEach(labels, function(label) {\n    template += '<label class=\"bpp-table-row-columns-' + columns + '\">' + label + '</label>';\n  });\n  return template;\n}\n\nfunction pick(elements, properties) {\n  return (elements || []).map(function(elem) {\n    var newElement = {};\n    forEach(properties, function(prop) {\n      newElement[prop] = elem[prop] || '';\n    });\n    return newElement;\n  });\n}\n\nfunction diff(element, node, values, oldValues, editable) {\n  return filter(values, function(value, idx) {\n    return !valueEqual(element, node, value, oldValues[idx], editable, idx);\n  });\n}\n\nfunction valueEqual(element, node, value, oldValue, editable, idx) {\n  if (value && !oldValue) {\n    return false;\n  }\n  var allKeys = keys(value).concat(keys(oldValue));\n\n  return allKeys.every(function(key) {\n    var n = value[key] || undefined;\n    var o = oldValue[key] || undefined;\n    return !editable(element, node, key, idx) || n === o;\n  });\n}\n\nfunction getEntryNode(node) {\n  return domClosest(node, '[data-entry]', true);\n}\n\nfunction getContainer(node) {\n  return domQuery('div[data-list-entry-container]', node);\n}\n\nfunction getSelection(node) {\n  return {\n    start: node.selectionStart,\n    end: node.selectionEnd\n  };\n}\n\nfunction setSelection(node, selection) {\n  node.selectionStart = selection.start;\n  node.selectionEnd = selection.end;\n}\n\n/**\n * @param  {Object} options\n * @param  {string} options.id\n * @param  {string} options.description\n * @param  {Array<string>} options.modelProperties\n * @param  {Array<string>} options.labels\n * @param  {Function} options.getElements - this callback function must return a list of business object items\n * @param  {Function} options.removeElement\n * @param  {Function} options.addElement\n * @param  {Function} options.updateElement\n * @param  {Function} options.editable\n * @param  {Function} options.setControlValue\n * @param  {Function} options.show\n *\n * @return {Object}\n */\nmodule.exports = function(options) {\n\n  var id = options.id,\n      modelProperties = options.modelProperties,\n      labels = options.labels,\n      description = options.description;\n\n  var labelRow = createLabelRowTemplate(labels);\n\n  var getElements = options.getElements;\n\n  var removeElement = options.removeElement,\n      canRemove = typeof removeElement === 'function';\n\n  var addElement = options.addElement,\n      canAdd = typeof addElement === 'function',\n      addLabel = options.addLabel || 'Add Value';\n\n  var updateElement = options.updateElement,\n      canUpdate = typeof updateElement === 'function';\n\n  var editable = options.editable || function() { return true; },\n      setControlValue = options.setControlValue;\n\n  var show = options.show,\n      canBeShown = typeof show === 'function';\n\n  var elements = function(element, node) {\n    return pick(getElements(element, node), modelProperties);\n  };\n\n  var factory = {\n    id: id,\n    html: (canAdd ?\n      '<div class=\"bpp-table-add-row\" ' + (canBeShown ? 'data-show=\"show\"' : '') + '>' +\n            '<label>' + addLabel + '</label>' +\n            '<button class=\"add\" data-action=\"addElement\"><span>+</span></button>' +\n          '</div>' : '') +\n          '<div class=\"bpp-table\" data-show=\"showTable\">' +\n            '<div class=\"bpp-field-wrapper bpp-table-row\">' +\n               labelRow +\n            '</div>' +\n            '<div data-list-entry-container>' +\n            '</div>' +\n          '</div>' +\n\n          // add description below table entry field\n          (description ? entryFieldDescription(description) : ''),\n\n    get: function(element, node) {\n      var boElements = elements(element, node, this.__invalidValues);\n\n      var invalidValues = this.__invalidValues;\n\n      delete this.__invalidValues;\n\n      forEach(invalidValues, function(value, idx) {\n        var element = boElements[idx];\n\n        forEach(modelProperties, function(prop) {\n          element[prop] = value[prop];\n        });\n      });\n\n      return boElements;\n    },\n\n    set: function(element, values, node) {\n      var action = this.__action || {};\n      delete this.__action;\n\n      if (action.id === 'delete-element') {\n        return removeElement(element, node, action.idx);\n      }\n      else if (action.id === 'add-element') {\n        return addElement(element, node);\n      }\n      else if (canUpdate) {\n        var commands = [],\n            valuesToValidate = values;\n\n        if (typeof options.validate !== 'function') {\n          valuesToValidate = diff(element, node, values, elements(element, node), editable);\n        }\n\n        var self = this;\n\n        forEach(valuesToValidate, function(value) {\n          var validationError,\n              idx = values.indexOf(value);\n\n          if (typeof options.validate === 'function') {\n            validationError = options.validate(element, value, node, idx);\n          }\n\n          if (!validationError) {\n            var cmd = updateElement(element, value, node, idx);\n\n            if (cmd) {\n              commands.push(cmd);\n            }\n          } else {\n            // cache invalid value in an object by index as key\n            self.__invalidValues = self.__invalidValues || {};\n            self.__invalidValues[idx] = value;\n\n            // execute a command, which does not do anything\n            commands.push(cmdHelper.updateProperties(element, {}));\n          }\n        });\n\n        return commands;\n      }\n    },\n    createListEntryTemplate: function(value, index, selectBox) {\n      return createInputRowTemplate(modelProperties, canRemove);\n    },\n\n    addElement: function(element, node, event, scopeNode) {\n      var template = domify(createInputRowTemplate(modelProperties, canRemove));\n\n      var container = getContainer(node);\n      container.appendChild(template);\n\n      this.__action = {\n        id: 'add-element'\n      };\n\n      return true;\n    },\n\n    deleteElement: function(element, node, event, scopeNode) {\n      var container = getContainer(node);\n      var rowToDelete = event.delegateTarget.parentNode;\n      var idx = parseInt(domAttr(rowToDelete, 'data-index'), 10);\n\n      container.removeChild(rowToDelete);\n\n      this.__action = {\n        id: 'delete-element',\n        idx: idx\n      };\n\n      return true;\n    },\n\n    editable: function(element, rowNode, input, prop, value, idx) {\n      var entryNode = domClosest(rowNode, '[data-entry]');\n      return editable(element, entryNode, prop, idx);\n    },\n\n    show: function(element, entryNode, node, scopeNode) {\n      entryNode = getEntryNode(entryNode);\n      return show(element, entryNode, node, scopeNode);\n    },\n\n    showTable: function(element, entryNode, node, scopeNode) {\n      entryNode = getEntryNode(entryNode);\n      var elems = elements(element, entryNode);\n      return elems && elems.length && (!canBeShown || show(element, entryNode, node, scopeNode));\n    },\n\n    validateListItem: function(element, value, node, idx) {\n      if (typeof options.validate === 'function') {\n        return options.validate(element, value, node, idx);\n      }\n    }\n\n  };\n\n  // Update/set the selection on the correct position.\n  // It's the same code like for an input value in the PropertiesPanel.js.\n  if (setControlValue) {\n    factory.setControlValue = function(element, rowNode, input, prop, value, idx) {\n      var entryNode = getEntryNode(rowNode);\n\n      var isReadOnly = domAttr(input, 'readonly');\n      var oldValue = input.value;\n\n      var selection;\n\n      // prevents input fields from having the value 'undefined'\n      if (value === undefined) {\n        value = '';\n      }\n\n      // when the attribute 'readonly' exists, ignore the comparison\n      // with 'oldValue' and 'value'\n      if (!!isReadOnly && oldValue === value) {\n        return;\n      }\n\n      // update selection on undo/redo\n      if (document.activeElement === input) {\n        selection = updateSelection(getSelection(input), oldValue, value);\n      }\n\n      setControlValue(element, entryNode, input, prop, value, idx);\n\n      if (selection) {\n        setSelection(input, selection);\n      }\n\n    };\n  }\n\n  return factory;\n\n};\n"]},"metadata":{},"sourceType":"script"}