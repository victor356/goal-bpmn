{"ast":null,"code":"import { forEach, bind } from 'min-dash';\nimport Base from './base';\n/**\n * A model element factory.\n *\n * @param {Moddle} model\n * @param {Properties} properties\n */\n\nexport default function Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\nFactory.prototype.createType = function (descriptor) {\n  var model = this.model;\n  var props = this.properties,\n      prototype = Object.create(Base.prototype); // initialize default values\n\n  forEach(descriptor.properties, function (p) {\n    if (!p.isMany && p.default !== undefined) {\n      prototype[p.name] = p.default;\n    }\n  });\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n  var name = descriptor.ns.name;\n  /**\n   * The new type constructor\n   */\n\n  function ModdleElement(attrs) {\n    props.define(this, '$type', {\n      value: name,\n      enumerable: true\n    });\n    props.define(this, '$attrs', {\n      value: {}\n    });\n    props.define(this, '$parent', {\n      writable: true\n    });\n    forEach(attrs, bind(function (val, key) {\n      this.set(key, val);\n    }, this));\n  }\n\n  ModdleElement.prototype = prototype;\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType; // static links\n\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n  return ModdleElement;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/moddle/lib/factory.js"],"names":["forEach","bind","Base","Factory","model","properties","prototype","createType","descriptor","props","Object","create","p","isMany","default","undefined","name","defineModel","defineDescriptor","ns","ModdleElement","attrs","define","value","enumerable","writable","val","key","set","hasType","$instanceOf"],"mappings":"AAAA,SACEA,OADF,EAEEC,IAFF,QAGO,UAHP;AAKA,OAAOC,IAAP,MAAiB,QAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,UAAxB,EAAoC;AACjD,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAGDF,OAAO,CAACG,SAAR,CAAkBC,UAAlB,GAA+B,UAASC,UAAT,EAAqB;AAElD,MAAIJ,KAAK,GAAG,KAAKA,KAAjB;AAEA,MAAIK,KAAK,GAAG,KAAKJ,UAAjB;AAAA,MACIC,SAAS,GAAGI,MAAM,CAACC,MAAP,CAAcT,IAAI,CAACI,SAAnB,CADhB,CAJkD,CAOlD;;AACAN,EAAAA,OAAO,CAACQ,UAAU,CAACH,UAAZ,EAAwB,UAASO,CAAT,EAAY;AACzC,QAAI,CAACA,CAAC,CAACC,MAAH,IAAaD,CAAC,CAACE,OAAF,KAAcC,SAA/B,EAA0C;AACxCT,MAAAA,SAAS,CAACM,CAAC,CAACI,IAAH,CAAT,GAAoBJ,CAAC,CAACE,OAAtB;AACD;AACF,GAJM,CAAP;AAMAL,EAAAA,KAAK,CAACQ,WAAN,CAAkBX,SAAlB,EAA6BF,KAA7B;AACAK,EAAAA,KAAK,CAACS,gBAAN,CAAuBZ,SAAvB,EAAkCE,UAAlC;AAEA,MAAIQ,IAAI,GAAGR,UAAU,CAACW,EAAX,CAAcH,IAAzB;AAEA;AACF;AACA;;AACE,WAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BZ,IAAAA,KAAK,CAACa,MAAN,CAAa,IAAb,EAAmB,OAAnB,EAA4B;AAAEC,MAAAA,KAAK,EAAEP,IAAT;AAAeQ,MAAAA,UAAU,EAAE;AAA3B,KAA5B;AACAf,IAAAA,KAAK,CAACa,MAAN,CAAa,IAAb,EAAmB,QAAnB,EAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B;AACAd,IAAAA,KAAK,CAACa,MAAN,CAAa,IAAb,EAAmB,SAAnB,EAA8B;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAA9B;AAEAzB,IAAAA,OAAO,CAACqB,KAAD,EAAQpB,IAAI,CAAC,UAASyB,GAAT,EAAcC,GAAd,EAAmB;AACrC,WAAKC,GAAL,CAASD,GAAT,EAAcD,GAAd;AACD,KAFkB,EAEhB,IAFgB,CAAZ,CAAP;AAGD;;AAEDN,EAAAA,aAAa,CAACd,SAAd,GAA0BA,SAA1B;AAEAc,EAAAA,aAAa,CAACS,OAAd,GAAwBvB,SAAS,CAACwB,WAAV,GAAwB,KAAK1B,KAAL,CAAWyB,OAA3D,CAlCkD,CAoClD;;AACApB,EAAAA,KAAK,CAACQ,WAAN,CAAkBG,aAAlB,EAAiChB,KAAjC;AACAK,EAAAA,KAAK,CAACS,gBAAN,CAAuBE,aAAvB,EAAsCZ,UAAtC;AAEA,SAAOY,aAAP;AACD,CAzCD","sourcesContent":["import {\n  forEach,\n  bind\n} from 'min-dash';\n\nimport Base from './base';\n\n/**\n * A model element factory.\n *\n * @param {Moddle} model\n * @param {Properties} properties\n */\nexport default function Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\n\nFactory.prototype.createType = function(descriptor) {\n\n  var model = this.model;\n\n  var props = this.properties,\n      prototype = Object.create(Base.prototype);\n\n  // initialize default values\n  forEach(descriptor.properties, function(p) {\n    if (!p.isMany && p.default !== undefined) {\n      prototype[p.name] = p.default;\n    }\n  });\n\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n\n  var name = descriptor.ns.name;\n\n  /**\n   * The new type constructor\n   */\n  function ModdleElement(attrs) {\n    props.define(this, '$type', { value: name, enumerable: true });\n    props.define(this, '$attrs', { value: {} });\n    props.define(this, '$parent', { writable: true });\n\n    forEach(attrs, bind(function(val, key) {\n      this.set(key, val);\n    }, this));\n  }\n\n  ModdleElement.prototype = prototype;\n\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType;\n\n  // static links\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n\n  return ModdleElement;\n};"]},"metadata":{},"sourceType":"module"}