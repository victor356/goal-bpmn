{"ast":null,"code":"/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n/**\n * Converters for built in types from string representations\n */\n\nvar TYPE_CONVERTERS = {\n  String: function (s) {\n    return s;\n  },\n  Boolean: function (s) {\n    return s === 'true';\n  },\n  Integer: function (s) {\n    return parseInt(s, 10);\n  },\n  Real: function (s) {\n    return parseFloat(s, 10);\n  }\n};\n/**\n * Convert a type to its real representation\n */\n\nexport function coerceType(type, value) {\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n}\n/**\n * Return whether the given type is built-in\n */\n\nexport function isBuiltIn(type) {\n  return !!BUILTINS[type];\n}\n/**\n * Return whether the given type is simple\n */\n\nexport function isSimple(type) {\n  return !!TYPE_CONVERTERS[type];\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/moddle/lib/types.js"],"names":["BUILTINS","String","Boolean","Integer","Real","Element","TYPE_CONVERTERS","s","parseInt","parseFloat","coerceType","type","value","converter","isBuiltIn","isSimple"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,IADK;AAEbC,EAAAA,OAAO,EAAE,IAFI;AAGbC,EAAAA,OAAO,EAAE,IAHI;AAIbC,EAAAA,IAAI,EAAE,IAJO;AAKbC,EAAAA,OAAO,EAAE;AALI,CAAf;AAQA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG;AACpBL,EAAAA,MAAM,EAAE,UAASM,CAAT,EAAY;AAAE,WAAOA,CAAP;AAAW,GADb;AAEpBL,EAAAA,OAAO,EAAE,UAASK,CAAT,EAAY;AAAE,WAAOA,CAAC,KAAK,MAAb;AAAsB,GAFzB;AAGpBJ,EAAAA,OAAO,EAAE,UAASI,CAAT,EAAY;AAAE,WAAOC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAf;AAAyB,GAH5B;AAIpBH,EAAAA,IAAI,EAAE,UAASG,CAAT,EAAY;AAAE,WAAOE,UAAU,CAACF,CAAD,EAAI,EAAJ,CAAjB;AAA2B;AAJ3B,CAAtB;AAOA;AACA;AACA;;AACA,OAAO,SAASG,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAEtC,MAAIC,SAAS,GAAGP,eAAe,CAACK,IAAD,CAA/B;;AAEA,MAAIE,SAAJ,EAAe;AACb,WAAOA,SAAS,CAACD,KAAD,CAAhB;AACD,GAFD,MAEO;AACL,WAAOA,KAAP;AACD;AACF;AAED;AACA;AACA;;AACA,OAAO,SAASE,SAAT,CAAmBH,IAAnB,EAAyB;AAC9B,SAAO,CAAC,CAACX,QAAQ,CAACW,IAAD,CAAjB;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASI,QAAT,CAAkBJ,IAAlB,EAAwB;AAC7B,SAAO,CAAC,CAACL,eAAe,CAACK,IAAD,CAAxB;AACD","sourcesContent":["/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n\n/**\n * Converters for built in types from string representations\n */\nvar TYPE_CONVERTERS = {\n  String: function(s) { return s; },\n  Boolean: function(s) { return s === 'true'; },\n  Integer: function(s) { return parseInt(s, 10); },\n  Real: function(s) { return parseFloat(s, 10); }\n};\n\n/**\n * Convert a type to its real representation\n */\nexport function coerceType(type, value) {\n\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n}\n\n/**\n * Return whether the given type is built-in\n */\nexport function isBuiltIn(type) {\n  return !!BUILTINS[type];\n}\n\n/**\n * Return whether the given type is simple\n */\nexport function isSimple(type) {\n  return !!TYPE_CONVERTERS[type];\n}"]},"metadata":{},"sourceType":"module"}