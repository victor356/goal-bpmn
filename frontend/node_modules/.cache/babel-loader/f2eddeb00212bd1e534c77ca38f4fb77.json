{"ast":null,"code":"import inherits from 'inherits';\nimport { forEach } from 'min-dash';\nimport { is } from '../../../util/ModelUtil';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nexport default function CopyPasteBehavior(eventBus, modeling, canvas) {\n  CommandInterceptor.call(this, eventBus);\n  this.preExecute('elements.paste', 1500, function (context) {\n    var topParent = context.topParent; // always grab the latest root\n\n    if (!topParent.parent) {\n      context.topParent = canvas.getRootElement();\n    }\n\n    if (is(topParent, 'bpmn:Lane')) {\n      do {\n        // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\n        topParent = context.topParent = topParent.parent;\n      } while (is(topParent, 'bpmn:Lane') || !is(topParent, 'bpmn:Participant'));\n    }\n  }, true);\n  this.postExecute('elements.paste', function (context) {\n    var tree = context.tree,\n        createdElements = tree.createdElements;\n    forEach(createdElements, function (data) {\n      var element = data.element,\n          businessObject = element.businessObject,\n          descriptor = data.descriptor,\n          defaultFlow;\n\n      if ((is(businessObject, 'bpmn:ExclusiveGateway') || is(businessObject, 'bpmn:InclusiveGateway') || is(businessObject, 'bpmn:Activity')) && descriptor.default) {\n        defaultFlow = createdElements[descriptor.default]; // if the default flow wasn't created, means that it wasn't copied\n\n        if (defaultFlow) {\n          defaultFlow = defaultFlow.element;\n        } else {\n          defaultFlow = undefined;\n        }\n\n        delete element.default;\n        modeling.updateProperties(element, {\n          default: defaultFlow\n        });\n      }\n    });\n  }, true);\n}\nCopyPasteBehavior.$inject = ['eventBus', 'modeling', 'canvas'];\ninherits(CopyPasteBehavior, CommandInterceptor);","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js/lib/features/modeling/behavior/CopyPasteBehavior.js"],"names":["inherits","forEach","is","CommandInterceptor","CopyPasteBehavior","eventBus","modeling","canvas","call","preExecute","context","topParent","parent","getRootElement","postExecute","tree","createdElements","data","element","businessObject","descriptor","defaultFlow","default","undefined","updateProperties","$inject"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,SACEC,OADF,QAEO,UAFP;AAIA,SAASC,EAAT,QAAmB,yBAAnB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAGA,eAAe,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,MAA/C,EAAuD;AAEpEJ,EAAAA,kBAAkB,CAACK,IAAnB,CAAwB,IAAxB,EAA8BH,QAA9B;AAEA,OAAKI,UAAL,CAAgB,gBAAhB,EAAkC,IAAlC,EAAwC,UAASC,OAAT,EAAkB;AACxD,QAAIC,SAAS,GAAGD,OAAO,CAACC,SAAxB,CADwD,CAGxD;;AACA,QAAI,CAACA,SAAS,CAACC,MAAf,EAAuB;AACrBF,MAAAA,OAAO,CAACC,SAAR,GAAoBJ,MAAM,CAACM,cAAP,EAApB;AACD;;AAED,QAAIX,EAAE,CAACS,SAAD,EAAY,WAAZ,CAAN,EAAgC;AAC9B,SAAG;AACD;AACAA,QAAAA,SAAS,GAAGD,OAAO,CAACC,SAAR,GAAoBA,SAAS,CAACC,MAA1C;AAED,OAJD,QAISV,EAAE,CAACS,SAAD,EAAY,WAAZ,CAAF,IAA8B,CAACT,EAAE,CAACS,SAAD,EAAY,kBAAZ,CAJ1C;AAKD;AACF,GAfD,EAeG,IAfH;AAiBA,OAAKG,WAAL,CAAiB,gBAAjB,EAAmC,UAASJ,OAAT,EAAkB;AAEnD,QAAIK,IAAI,GAAGL,OAAO,CAACK,IAAnB;AAAA,QACIC,eAAe,GAAGD,IAAI,CAACC,eAD3B;AAGAf,IAAAA,OAAO,CAACe,eAAD,EAAkB,UAASC,IAAT,EAAe;AACtC,UAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,UACIC,cAAc,GAAGD,OAAO,CAACC,cAD7B;AAAA,UAEIC,UAAU,GAAGH,IAAI,CAACG,UAFtB;AAAA,UAGIC,WAHJ;;AAKA,UAAI,CAACnB,EAAE,CAACiB,cAAD,EAAiB,uBAAjB,CAAF,IAA+CjB,EAAE,CAACiB,cAAD,EAAiB,uBAAjB,CAAjD,IACAjB,EAAE,CAACiB,cAAD,EAAiB,eAAjB,CADH,KACyCC,UAAU,CAACE,OADxD,EACiE;AAE/DD,QAAAA,WAAW,GAAGL,eAAe,CAACI,UAAU,CAACE,OAAZ,CAA7B,CAF+D,CAI/D;;AACA,YAAID,WAAJ,EAAiB;AACfA,UAAAA,WAAW,GAAGA,WAAW,CAACH,OAA1B;AACD,SAFD,MAEO;AACLG,UAAAA,WAAW,GAAGE,SAAd;AACD;;AAED,eAAOL,OAAO,CAACI,OAAf;AAEAhB,QAAAA,QAAQ,CAACkB,gBAAT,CAA0BN,OAA1B,EAAmC;AAAEI,UAAAA,OAAO,EAAED;AAAX,SAAnC;AACD;AACF,KAtBM,CAAP;AAuBD,GA5BD,EA4BG,IA5BH;AA6BD;AAGDjB,iBAAiB,CAACqB,OAAlB,GAA4B,CAC1B,UAD0B,EAE1B,UAF0B,EAG1B,QAH0B,CAA5B;AAMAzB,QAAQ,CAACI,iBAAD,EAAoBD,kBAApB,CAAR","sourcesContent":["import inherits from 'inherits';\n\nimport {\n  forEach\n} from 'min-dash';\n\nimport { is } from '../../../util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\nexport default function CopyPasteBehavior(eventBus, modeling, canvas) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.preExecute('elements.paste', 1500, function(context) {\n    var topParent = context.topParent;\n\n    // always grab the latest root\n    if (!topParent.parent) {\n      context.topParent = canvas.getRootElement();\n    }\n\n    if (is(topParent, 'bpmn:Lane')) {\n      do {\n        // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\n        topParent = context.topParent = topParent.parent;\n\n      } while (is(topParent, 'bpmn:Lane') || !is(topParent, 'bpmn:Participant'));\n    }\n  }, true);\n\n  this.postExecute('elements.paste', function(context) {\n\n    var tree = context.tree,\n        createdElements = tree.createdElements;\n\n    forEach(createdElements, function(data) {\n      var element = data.element,\n          businessObject = element.businessObject,\n          descriptor = data.descriptor,\n          defaultFlow;\n\n      if ((is(businessObject, 'bpmn:ExclusiveGateway') || is(businessObject, 'bpmn:InclusiveGateway') ||\n           is(businessObject, 'bpmn:Activity')) && descriptor.default) {\n\n        defaultFlow = createdElements[descriptor.default];\n\n        // if the default flow wasn't created, means that it wasn't copied\n        if (defaultFlow) {\n          defaultFlow = defaultFlow.element;\n        } else {\n          defaultFlow = undefined;\n        }\n\n        delete element.default;\n\n        modeling.updateProperties(element, { default: defaultFlow });\n      }\n    });\n  }, true);\n}\n\n\nCopyPasteBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'canvas'\n];\n\ninherits(CopyPasteBehavior, CommandInterceptor);"]},"metadata":{},"sourceType":"module"}