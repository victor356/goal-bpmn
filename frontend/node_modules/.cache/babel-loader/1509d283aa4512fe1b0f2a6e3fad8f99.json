{"ast":null,"code":"const request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem('accessToken')) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem('accessToken'));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function getCurrentUser() {\n  if (!localStorage.getItem('accessToken')) {\n    return console.log(\"No access token set.\");\n  }\n\n  return request({\n    url: \"http://localhost:8081\" + \"/user/me\",\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/src/components/util/APIUtils.js"],"names":["request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getCurrentUser","console","log","method"],"mappings":"AACA,MAAMA,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAH,EAAwC;AACpCH,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAA5C;AACH;;AAED,QAAME,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACNW,IADM,CACDC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFG,CAAP;AASH,CArBD;;AAuBA,OAAO,SAASI,cAAT,GAA0B;AAC7B,MAAG,CAACd,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACrC,WAAOc,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAP;AACH;;AAED,SAAOpB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,0BAA0B,UADpB;AAEXU,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH","sourcesContent":["\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem('accessToken')) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem('accessToken'))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\n\r\nexport function getCurrentUser() {\r\n    if(!localStorage.getItem('accessToken')) {\r\n        return console.log(\"No access token set.\");\r\n    }\r\n\r\n    return request({\r\n        url: \"http://localhost:8081\" + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}