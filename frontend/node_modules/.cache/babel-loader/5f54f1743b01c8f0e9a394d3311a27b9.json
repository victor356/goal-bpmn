{"ast":null,"code":"'use strict';\n\nvar cmdHelper = require('../../../../helper/CmdHelper'),\n    entryFactory = require('../../../../factory/EntryFactory'),\n    elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper');\n\nvar resultVariable = require('./ResultVariable');\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar forEach = require('lodash/forEach');\n\nvar attributeInfo = {\n  bpmn: {\n    element: 'calledElement',\n    binding: 'camunda:calledElementBinding',\n    version: 'camunda:calledElementVersion',\n    versionTag: 'camunda:calledElementVersionTag',\n    tenantId: 'camunda:calledElementTenantId'\n  },\n  cmmn: {\n    element: 'camunda:caseRef',\n    binding: 'camunda:caseBinding',\n    version: 'camunda:caseVersion',\n    tenantId: 'camunda:caseTenantId'\n  },\n  dmn: {\n    element: 'camunda:decisionRef',\n    binding: 'camunda:decisionRefBinding',\n    version: 'camunda:decisionRefVersion',\n    versionTag: 'camunda:decisionRefVersionTag',\n    tenantId: 'camunda:decisionRefTenantId'\n  }\n};\nvar bindingOptions = [{\n  name: 'latest',\n  value: 'latest'\n}, {\n  name: 'deployment',\n  value: 'deployment'\n}, {\n  name: 'version',\n  value: 'version'\n}, {\n  name: 'versionTag',\n  value: 'versionTag'\n}];\nvar mapDecisionResultOptions = [{\n  name: 'singleEntry',\n  value: 'singleEntry'\n}, {\n  name: 'singleResult',\n  value: 'singleResult'\n}, {\n  name: 'collectEntries',\n  value: 'collectEntries'\n}, {\n  name: 'resultList',\n  value: 'resultList'\n}];\nvar delegateVariableMappingOptions = [{\n  name: 'variableMappingClass',\n  value: 'variableMappingClass'\n}, {\n  name: 'variableMappingDelegateExpression',\n  value: 'variableMappingDelegateExpression'\n}];\n\nfunction getCamundaInWithBusinessKey(element) {\n  var camundaIn = [],\n      bo = getBusinessObject(element);\n  var camundaInParams = extensionElementsHelper.getExtensionElements(bo, 'camunda:In');\n\n  if (camundaInParams) {\n    forEach(camundaInParams, function (param) {\n      if (param.businessKey !== undefined) {\n        camundaIn.push(param);\n      }\n    });\n  }\n\n  return camundaIn;\n}\n\nfunction setBusinessKey(element, text, bpmnFactory) {\n  var commands = [];\n  var camundaInWithBusinessKey = getCamundaInWithBusinessKey(element);\n\n  if (camundaInWithBusinessKey.length) {\n    commands.push(cmdHelper.updateBusinessObject(element, camundaInWithBusinessKey[0], {\n      businessKey: text\n    }));\n  } else {\n    var bo = getBusinessObject(element),\n        extensionElements = bo.extensionElements;\n\n    if (!extensionElements) {\n      extensionElements = elementHelper.createElement('bpmn:ExtensionElements', {\n        values: []\n      }, bo, bpmnFactory);\n      commands.push(cmdHelper.updateProperties(element, {\n        extensionElements: extensionElements\n      }));\n    }\n\n    var camundaIn = elementHelper.createElement('camunda:In', {\n      'businessKey': text\n    }, extensionElements, bpmnFactory);\n    commands.push(cmdHelper.addAndRemoveElementsFromList(element, extensionElements, 'values', 'extensionElements', [camundaIn], []));\n  }\n\n  return commands;\n}\n\nfunction deleteBusinessKey(element) {\n  var camundaInExtensions = getCamundaInWithBusinessKey(element);\n  var commands = [];\n  forEach(camundaInExtensions, function (elem) {\n    commands.push(extensionElementsHelper.removeEntry(getBusinessObject(element), element, elem));\n  });\n  return commands;\n}\n\nfunction isSupportedCallableType(type) {\n  return ['bpmn', 'cmmn', 'dmn'].indexOf(type) !== -1;\n}\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getCallableType = options.getCallableType;\n  var entries = [];\n\n  function getAttribute(element, prop) {\n    var type = getCallableType(element);\n    return (attributeInfo[type] || {})[prop];\n  }\n\n  function getCallActivityBindingValue(element) {\n    var type = getCallableType(element);\n    var bo = getBusinessObject(element);\n    var attr = (attributeInfo[type] || {}).binding;\n    return bo.get(attr);\n  }\n\n  function getDelegateVariableMappingType(element) {\n    var bo = getBusinessObject(element);\n    var boVariableMappingClass = bo.get('camunda:variableMappingClass'),\n        boVariableMappingDelegateExpression = bo.get('camunda:variableMappingDelegateExpression');\n    var delegateVariableMappingType = '';\n\n    if (typeof boVariableMappingClass !== 'undefined') {\n      delegateVariableMappingType = 'variableMappingClass';\n    } else if (typeof boVariableMappingDelegateExpression !== 'undefined') {\n      delegateVariableMappingType = 'variableMappingDelegateExpression';\n    }\n\n    return delegateVariableMappingType;\n  }\n\n  entries.push(entryFactory.textField({\n    id: 'callable-element-ref',\n    dataValueLabel: 'callableElementLabel',\n    modelProperty: 'callableElementRef',\n    get: function (element, node) {\n      var callableElementRef;\n      var attr = getAttribute(element, 'element');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableElementRef = bo.get(attr);\n      }\n\n      var label = '';\n      var type = getCallableType(element);\n\n      if (type === 'bpmn') {\n        label = translate('Called Element');\n      } else if (type === 'cmmn') {\n        label = translate('Case Ref');\n      } else if (type === 'dmn') {\n        label = translate('Decision Ref');\n      }\n\n      return {\n        callableElementRef: callableElementRef,\n        callableElementLabel: label\n      };\n    },\n    set: function (element, values, node) {\n      var newCallableElementRef = values.callableElementRef;\n      var attr = getAttribute(element, 'element');\n      var props = {};\n      props[attr] = newCallableElementRef || '';\n      return cmdHelper.updateProperties(element, props);\n    },\n    validate: function (element, values, node) {\n      var elementRef = values.callableElementRef;\n      var type = getCallableType(element);\n      return isSupportedCallableType(type) && !elementRef ? {\n        callableElementRef: 'Must provide a value.'\n      } : {};\n    },\n    hidden: function (element, node) {\n      return !isSupportedCallableType(getCallableType(element));\n    }\n  }));\n  entries.push(entryFactory.selectBox({\n    id: 'callable-binding',\n    label: translate('Binding'),\n    selectOptions: function (element) {\n      var type = getCallableType(element);\n\n      if (type === 'cmmn') {\n        return bindingOptions.filter(function (bindingOption) {\n          return bindingOption.value !== 'versionTag';\n        });\n      } else {\n        return bindingOptions;\n      }\n    },\n    modelProperty: 'callableBinding',\n    get: function (element, node) {\n      var callableBinding;\n      var attr = getAttribute(element, 'binding');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableBinding = bo.get(attr) || 'latest';\n      }\n\n      return {\n        callableBinding: callableBinding\n      };\n    },\n    set: function (element, values, node) {\n      var binding = values.callableBinding;\n      var attr = getAttribute(element, 'binding'),\n          attrVer = getAttribute(element, 'version'),\n          attrVerTag = getAttribute(element, 'versionTag');\n      var props = {};\n      props[attr] = binding; // set version and versionTag values always to undefined to delete the existing value\n\n      props[attrVer] = undefined;\n      props[attrVerTag] = undefined;\n      return cmdHelper.updateProperties(element, props);\n    },\n    hidden: function (element, node) {\n      return !isSupportedCallableType(getCallableType(element));\n    }\n  }));\n  entries.push(entryFactory.textField({\n    id: 'callable-version',\n    label: translate('Version'),\n    modelProperty: 'callableVersion',\n    get: function (element, node) {\n      var callableVersion;\n      var attr = getAttribute(element, 'version');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableVersion = bo.get(attr);\n      }\n\n      return {\n        callableVersion: callableVersion\n      };\n    },\n    set: function (element, values, node) {\n      var version = values.callableVersion;\n      var attr = getAttribute(element, 'version');\n      var props = {};\n      props[attr] = version || undefined;\n      return cmdHelper.updateProperties(element, props);\n    },\n    validate: function (element, values, node) {\n      var version = values.callableVersion;\n      var type = getCallableType(element);\n      return isSupportedCallableType(type) && getCallActivityBindingValue(element) === 'version' && (!version ? {\n        callableVersion: translate('Must provide a value.')\n      } : {});\n    },\n    hidden: function (element, node) {\n      var type = getCallableType(element);\n      return !isSupportedCallableType(type) || getCallActivityBindingValue(element) !== 'version';\n    }\n  }));\n  entries.push(entryFactory.textField({\n    id: 'callable-version-tag',\n    label: translate('Version Tag'),\n    modelProperty: 'versionTag',\n    get: function (element, node) {\n      var versionTag;\n      var attr = getAttribute(element, 'versionTag');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n        versionTag = bo.get(attr);\n      }\n\n      return {\n        versionTag: versionTag\n      };\n    },\n    set: function (element, values, node) {\n      var versionTag = values.versionTag;\n      var attr = getAttribute(element, 'versionTag');\n      var props = {};\n      props[attr] = versionTag || undefined;\n      return cmdHelper.updateProperties(element, props);\n    },\n    validate: function (element, values, node) {\n      var versionTag = values.versionTag;\n      var type = getCallableType(element);\n      return isSupportedCallableType(type) && getCallActivityBindingValue(element) === 'versionTag' && (!versionTag ? {\n        versionTag: translate('Must provide a value.')\n      } : {});\n    },\n    hidden: function (element, node) {\n      var type = getCallableType(element);\n      return !isSupportedCallableType(type) || getCallActivityBindingValue(element) !== 'versionTag';\n    }\n  }));\n  entries.push(entryFactory.textField({\n    id: 'tenant-id',\n    label: translate('Tenant Id'),\n    modelProperty: 'tenantId',\n    get: function (element, node) {\n      var tenantId;\n      var attr = getAttribute(element, 'tenantId');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n        tenantId = bo.get(attr);\n      }\n\n      return {\n        tenantId: tenantId\n      };\n    },\n    set: function (element, values, node) {\n      var tenantId = values.tenantId;\n      var attr = getAttribute(element, 'tenantId');\n      var props = {};\n      props[attr] = tenantId || undefined;\n      return cmdHelper.updateProperties(element, props);\n    },\n    hidden: function (element, node) {\n      var type = getCallableType(element);\n      return !isSupportedCallableType(type);\n    }\n  }));\n\n  if (is(getBusinessObject(element), 'bpmn:CallActivity')) {\n    entries.push(entryFactory.checkbox({\n      id: 'callable-business-key',\n      label: translate('Business Key'),\n      modelProperty: 'callableBusinessKey',\n      get: function (element, node) {\n        var camundaIn = getCamundaInWithBusinessKey(element);\n        return {\n          callableBusinessKey: !!(camundaIn && camundaIn.length > 0)\n        };\n      },\n      set: function (element, values, node) {\n        if (values.callableBusinessKey) {\n          return setBusinessKey(element, '#{execution.processBusinessKey}', bpmnFactory);\n        } else {\n          return deleteBusinessKey(element);\n        }\n      }\n    }));\n  }\n\n  entries.push(entryFactory.textField({\n    id: 'business-key-expression',\n    label: translate('Business Key Expression'),\n    modelProperty: 'businessKey',\n    get: function (element, node) {\n      var camundaInWithBusinessKey = getCamundaInWithBusinessKey(element);\n      return {\n        businessKey: camundaInWithBusinessKey.length ? camundaInWithBusinessKey[0].get('camunda:businessKey') : undefined\n      };\n    },\n    set: function (element, values, node) {\n      var businessKey = values.businessKey;\n      return setBusinessKey(element, businessKey, bpmnFactory);\n    },\n    validate: function (element, values, node) {\n      var businessKey = values.businessKey;\n      return businessKey === '' ? {\n        businessKey: 'Must provide a value.'\n      } : {};\n    },\n    hidden: function (element, node) {\n      return !getCamundaInWithBusinessKey(element).length;\n    }\n  }));\n  entries = entries.concat(resultVariable(element, bpmnFactory, {\n    id: 'dmn-resultVariable',\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getCallableType,\n    hideResultVariable: function (element, node) {\n      return getCallableType(element) !== 'dmn';\n    }\n  }, translate));\n  entries.push(entryFactory.selectBox({\n    id: 'dmn-map-decision-result',\n    label: translate('Map Decision Result'),\n    selectOptions: mapDecisionResultOptions,\n    modelProperty: 'mapDecisionResult',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        mapDecisionResult: bo.get('camunda:mapDecisionResult') || 'resultList'\n      };\n    },\n    set: function (element, values, node) {\n      return cmdHelper.updateProperties(element, {\n        'camunda:mapDecisionResult': values.mapDecisionResult || 'resultList'\n      });\n    },\n    hidden: function (element, node) {\n      var bo = getBusinessObject(element);\n      var resultVariable = bo.get('camunda:resultVariable');\n      return !(getCallableType(element) === 'dmn' && typeof resultVariable !== 'undefined');\n    }\n  }));\n  entries.push(entryFactory.selectBox({\n    id: 'delegateVariableMappingType',\n    label: translate('Delegate Variable Mapping'),\n    selectOptions: delegateVariableMappingOptions,\n    emptyParameter: true,\n    modelProperty: 'delegateVariableMappingType',\n    get: function (element, node) {\n      return {\n        delegateVariableMappingType: getDelegateVariableMappingType(element)\n      };\n    },\n    set: function (element, values, node) {\n      var delegateVariableMappingType = values.delegateVariableMappingType;\n      var props = {\n        'camunda:variableMappingClass': undefined,\n        'camunda:variableMappingDelegateExpression': undefined\n      };\n\n      if (delegateVariableMappingType === 'variableMappingClass') {\n        props['camunda:variableMappingClass'] = '';\n      } else if (delegateVariableMappingType === 'variableMappingDelegateExpression') {\n        props['camunda:variableMappingDelegateExpression'] = '';\n      }\n\n      return cmdHelper.updateProperties(element, props);\n    },\n    hidden: function (element, node) {\n      return getCallableType(element) !== 'bpmn';\n    }\n  }));\n  entries.push(entryFactory.textField({\n    id: 'delegateVariableMapping',\n    dataValueLabel: 'delegateVariableMappingLabel',\n    modelProperty: 'delegateVariableMapping',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      var label = '';\n      var delegateVariableMapping = undefined;\n      var type = getDelegateVariableMappingType(element);\n\n      if (type === 'variableMappingClass') {\n        label = translate('Class');\n        delegateVariableMapping = bo.get('camunda:variableMappingClass');\n      } else if (type === 'variableMappingDelegateExpression') {\n        label = translate('Delegate Expression');\n        delegateVariableMapping = bo.get('camunda:variableMappingDelegateExpression');\n      }\n\n      return {\n        delegateVariableMapping: delegateVariableMapping,\n        delegateVariableMappingLabel: label\n      };\n    },\n    set: function (element, values, node) {\n      var delegateVariableMapping = values.delegateVariableMapping;\n      var attr = 'camunda:' + getDelegateVariableMappingType(element);\n      var props = {};\n      props[attr] = delegateVariableMapping || undefined;\n      return cmdHelper.updateProperties(element, props);\n    },\n    validate: function (element, values, node) {\n      var delegateVariableMapping = values.delegateVariableMapping;\n      return getCallableType(element) === 'bpmn' && (!delegateVariableMapping ? {\n        delegateVariableMapping: translate('Must provide a value.')\n      } : {});\n    },\n    hidden: function (element, node) {\n      return !(getCallableType(element) === 'bpmn' && getDelegateVariableMappingType(element) !== '');\n    }\n  }));\n  return entries;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/Callable.js"],"names":["cmdHelper","require","entryFactory","elementHelper","extensionElementsHelper","resultVariable","getBusinessObject","is","forEach","attributeInfo","bpmn","element","binding","version","versionTag","tenantId","cmmn","dmn","bindingOptions","name","value","mapDecisionResultOptions","delegateVariableMappingOptions","getCamundaInWithBusinessKey","camundaIn","bo","camundaInParams","getExtensionElements","param","businessKey","undefined","push","setBusinessKey","text","bpmnFactory","commands","camundaInWithBusinessKey","length","updateBusinessObject","extensionElements","createElement","values","updateProperties","addAndRemoveElementsFromList","deleteBusinessKey","camundaInExtensions","elem","removeEntry","isSupportedCallableType","type","indexOf","module","exports","options","translate","getCallableType","entries","getAttribute","prop","getCallActivityBindingValue","attr","get","getDelegateVariableMappingType","boVariableMappingClass","boVariableMappingDelegateExpression","delegateVariableMappingType","textField","id","dataValueLabel","modelProperty","node","callableElementRef","label","callableElementLabel","set","newCallableElementRef","props","validate","elementRef","hidden","selectBox","selectOptions","filter","bindingOption","callableBinding","attrVer","attrVerTag","callableVersion","checkbox","callableBusinessKey","concat","getImplementationType","hideResultVariable","mapDecisionResult","emptyParameter","delegateVariableMapping","delegateVariableMappingLabel"],"mappings":"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","sourcesContent":["'use strict';\n\nvar cmdHelper = require('../../../../helper/CmdHelper'),\n    entryFactory = require('../../../../factory/EntryFactory'),\n    elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper');\n\n\nvar resultVariable = require('./ResultVariable');\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\nvar is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar forEach = require('lodash/forEach');\n\nvar attributeInfo = {\n  bpmn: {\n    element: 'calledElement',\n    binding: 'camunda:calledElementBinding',\n    version: 'camunda:calledElementVersion',\n    versionTag: 'camunda:calledElementVersionTag',\n    tenantId: 'camunda:calledElementTenantId'\n  },\n\n  cmmn: {\n    element: 'camunda:caseRef',\n    binding: 'camunda:caseBinding',\n    version: 'camunda:caseVersion',\n    tenantId: 'camunda:caseTenantId'\n  },\n\n  dmn: {\n    element: 'camunda:decisionRef',\n    binding: 'camunda:decisionRefBinding',\n    version: 'camunda:decisionRefVersion',\n    versionTag: 'camunda:decisionRefVersionTag',\n    tenantId: 'camunda:decisionRefTenantId'\n  }\n};\n\nvar bindingOptions = [\n  {\n    name: 'latest',\n    value: 'latest'\n  },\n  {\n    name: 'deployment',\n    value: 'deployment'\n  },\n  {\n    name: 'version',\n    value: 'version'\n  },\n  {\n    name: 'versionTag',\n    value: 'versionTag'\n  }\n];\n\nvar mapDecisionResultOptions = [\n  {\n    name: 'singleEntry',\n    value: 'singleEntry'\n  },\n  {\n    name:'singleResult',\n    value:'singleResult'\n  },\n  {\n    name:'collectEntries',\n    value:'collectEntries'\n  },\n  {\n    name:'resultList',\n    value:'resultList'\n  }\n];\n\nvar delegateVariableMappingOptions = [\n  {\n    name: 'variableMappingClass',\n    value: 'variableMappingClass'\n  },\n  {\n    name: 'variableMappingDelegateExpression',\n    value: 'variableMappingDelegateExpression'\n  }\n];\n\nfunction getCamundaInWithBusinessKey(element) {\n  var camundaIn = [],\n      bo = getBusinessObject(element);\n\n  var camundaInParams = extensionElementsHelper.getExtensionElements(bo, 'camunda:In');\n  if (camundaInParams) {\n    forEach(camundaInParams, function(param) {\n      if (param.businessKey !== undefined) {\n        camundaIn.push(param);\n      }\n    });\n  }\n  return camundaIn;\n}\n\nfunction setBusinessKey(element, text, bpmnFactory) {\n  var commands = [];\n\n  var camundaInWithBusinessKey = getCamundaInWithBusinessKey(element);\n\n  if (camundaInWithBusinessKey.length) {\n    commands.push(cmdHelper.updateBusinessObject(element, camundaInWithBusinessKey[0], {\n      businessKey: text\n    }));\n  } else {\n    var bo = getBusinessObject(element),\n        extensionElements = bo.extensionElements;\n\n    if (!extensionElements) {\n      extensionElements = elementHelper.createElement('bpmn:ExtensionElements', { values: [] }, bo, bpmnFactory);\n      commands.push(cmdHelper.updateProperties(element, { extensionElements: extensionElements }));\n    }\n\n    var camundaIn = elementHelper.createElement(\n      'camunda:In',\n      { 'businessKey': text },\n      extensionElements,\n      bpmnFactory\n    );\n\n    commands.push(cmdHelper.addAndRemoveElementsFromList(\n      element,\n      extensionElements,\n      'values',\n      'extensionElements',\n      [ camundaIn ],[]\n    ));\n  }\n\n  return commands;\n}\n\nfunction deleteBusinessKey(element) {\n  var camundaInExtensions = getCamundaInWithBusinessKey(element);\n  var commands = [];\n  forEach(camundaInExtensions, function(elem) {\n    commands.push(extensionElementsHelper.removeEntry(getBusinessObject(element), element, elem));\n  });\n  return commands;\n}\n\nfunction isSupportedCallableType(type) {\n  return [ 'bpmn', 'cmmn', 'dmn' ].indexOf(type) !== -1;\n}\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getCallableType = options.getCallableType;\n\n  var entries = [];\n\n  function getAttribute(element, prop) {\n    var type = getCallableType(element);\n    return (attributeInfo[type] || {})[prop];\n  }\n\n  function getCallActivityBindingValue(element) {\n    var type = getCallableType(element);\n    var bo = getBusinessObject(element);\n    var attr = (attributeInfo[type] || {}).binding;\n    return bo.get(attr);\n  }\n\n  function getDelegateVariableMappingType(element) {\n    var bo = getBusinessObject(element);\n\n    var boVariableMappingClass = bo.get('camunda:variableMappingClass'),\n        boVariableMappingDelegateExpression = bo.get('camunda:variableMappingDelegateExpression');\n\n    var delegateVariableMappingType = '';\n    if (typeof boVariableMappingClass !== 'undefined') {\n      delegateVariableMappingType = 'variableMappingClass';\n    } else\n\n    if (typeof boVariableMappingDelegateExpression !== 'undefined') {\n      delegateVariableMappingType = 'variableMappingDelegateExpression';\n    }\n\n    return delegateVariableMappingType;\n  }\n\n\n  entries.push(entryFactory.textField({\n    id: 'callable-element-ref',\n    dataValueLabel: 'callableElementLabel',\n    modelProperty: 'callableElementRef',\n\n    get: function(element, node) {\n      var callableElementRef;\n\n      var attr = getAttribute(element, 'element');\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableElementRef = bo.get(attr);\n      }\n\n      var label = '';\n      var type = getCallableType(element);\n      if (type === 'bpmn') {\n        label = translate('Called Element');\n      }\n      else if (type === 'cmmn') {\n        label = translate('Case Ref');\n      }\n      else if (type === 'dmn') {\n        label = translate('Decision Ref');\n      }\n\n      return {\n        callableElementRef: callableElementRef,\n        callableElementLabel: label\n      };\n    },\n\n    set: function(element, values, node) {\n      var newCallableElementRef = values.callableElementRef;\n      var attr = getAttribute(element, 'element');\n\n      var props = {};\n      props[attr] = newCallableElementRef || '';\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    validate: function(element, values, node) {\n      var elementRef = values.callableElementRef;\n      var type = getCallableType(element);\n      return isSupportedCallableType(type) && !elementRef ? { callableElementRef: 'Must provide a value.' } : {};\n    },\n\n    hidden: function(element, node) {\n      return !isSupportedCallableType(getCallableType(element));\n    }\n\n  }));\n\n  entries.push(entryFactory.selectBox({\n    id: 'callable-binding',\n    label: translate('Binding'),\n    selectOptions: function(element) {\n      var type = getCallableType(element);\n\n      if (type === 'cmmn') {\n        return bindingOptions.filter(function(bindingOption) {\n          return bindingOption.value !== 'versionTag';\n        });\n      } else {\n        return bindingOptions;\n      }\n    },\n    modelProperty: 'callableBinding',\n\n    get: function(element, node) {\n      var callableBinding;\n\n      var attr = getAttribute(element, 'binding');\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableBinding = bo.get(attr) || 'latest';\n      }\n\n      return {\n        callableBinding: callableBinding\n      };\n    },\n\n    set: function(element, values, node) {\n      var binding = values.callableBinding;\n      var attr = getAttribute(element, 'binding'),\n          attrVer = getAttribute(element, 'version'),\n          attrVerTag = getAttribute(element, 'versionTag');\n\n      var props = {};\n      props[attr] = binding;\n\n      // set version and versionTag values always to undefined to delete the existing value\n      props[attrVer] = undefined;\n      props[attrVerTag] = undefined;\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    hidden: function(element, node) {\n      return !isSupportedCallableType(getCallableType(element));\n    }\n\n  }));\n\n  entries.push(entryFactory.textField({\n    id: 'callable-version',\n    label: translate('Version'),\n    modelProperty: 'callableVersion',\n\n    get: function(element, node) {\n      var callableVersion;\n\n      var attr = getAttribute(element, 'version');\n      if (attr) {\n        var bo = getBusinessObject(element);\n        callableVersion = bo.get(attr);\n      }\n\n      return {\n        callableVersion: callableVersion\n      };\n    },\n\n    set: function(element, values, node) {\n      var version = values.callableVersion;\n      var attr = getAttribute(element, 'version');\n\n      var props = {};\n      props[attr] = version || undefined;\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    validate: function(element, values, node) {\n      var version = values.callableVersion;\n\n      var type = getCallableType(element);\n      return (\n        isSupportedCallableType(type) &&\n        getCallActivityBindingValue(element) === 'version' && (\n          !version ? { callableVersion: translate('Must provide a value.') } : {}\n        )\n      );\n    },\n\n    hidden: function(element, node) {\n      var type = getCallableType(element);\n      return !isSupportedCallableType(type) || getCallActivityBindingValue(element) !== 'version';\n    }\n\n  }));\n\n  entries.push(entryFactory.textField({\n    id: 'callable-version-tag',\n    label: translate('Version Tag'),\n    modelProperty: 'versionTag',\n\n    get: function(element, node) {\n      var versionTag;\n\n      var attr = getAttribute(element, 'versionTag');\n\n      if (attr) {\n        var bo = getBusinessObject(element);\n\n        versionTag = bo.get(attr);\n      }\n\n      return {\n        versionTag: versionTag\n      };\n    },\n\n    set: function(element, values, node) {\n      var versionTag = values.versionTag;\n\n      var attr = getAttribute(element, 'versionTag');\n\n      var props = {};\n\n      props[attr] = versionTag || undefined;\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    validate: function(element, values, node) {\n      var versionTag = values.versionTag;\n\n      var type = getCallableType(element);\n\n      return (\n        isSupportedCallableType(type) &&\n        getCallActivityBindingValue(element) === 'versionTag' && (\n          !versionTag ? { versionTag: translate('Must provide a value.') } : {}\n        )\n      );\n    },\n\n    hidden: function(element, node) {\n      var type = getCallableType(element);\n\n      return !isSupportedCallableType(type) || getCallActivityBindingValue(element) !== 'versionTag';\n    }\n\n  }));\n\n  entries.push(entryFactory.textField({\n    id: 'tenant-id',\n    label: translate('Tenant Id'),\n    modelProperty: 'tenantId',\n\n    get: function(element, node) {\n      var tenantId;\n\n      var attr = getAttribute(element, 'tenantId');\n      if (attr) {\n        var bo = getBusinessObject(element);\n        tenantId = bo.get(attr);\n      }\n\n      return {\n        tenantId: tenantId\n      };\n    },\n\n    set: function(element, values, node) {\n      var tenantId = values.tenantId;\n      var attr = getAttribute(element, 'tenantId');\n\n      var props = {};\n      props[attr] = tenantId || undefined;\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    hidden: function(element, node) {\n      var type = getCallableType(element);\n      return !isSupportedCallableType(type);\n    }\n\n  }));\n\n  if (is(getBusinessObject(element), 'bpmn:CallActivity')) {\n    entries.push(entryFactory.checkbox({\n      id: 'callable-business-key',\n      label: translate('Business Key'),\n      modelProperty: 'callableBusinessKey',\n\n      get: function(element, node) {\n        var camundaIn = getCamundaInWithBusinessKey(element);\n\n        return {\n          callableBusinessKey: !!(camundaIn && camundaIn.length > 0)\n        };\n      },\n\n      set: function(element, values, node) {\n        if (values.callableBusinessKey) {\n          return setBusinessKey(element, '#{execution.processBusinessKey}', bpmnFactory);\n        } else {\n          return deleteBusinessKey(element);\n        }\n      }\n    }));\n  }\n\n  entries.push(entryFactory.textField({\n    id: 'business-key-expression',\n    label: translate('Business Key Expression'),\n    modelProperty: 'businessKey',\n\n    get: function(element, node) {\n      var camundaInWithBusinessKey = getCamundaInWithBusinessKey(element);\n\n      return {\n        businessKey: (\n          camundaInWithBusinessKey.length ?\n            camundaInWithBusinessKey[0].get('camunda:businessKey') :\n            undefined\n        )\n      };\n    },\n\n    set: function(element, values, node) {\n      var businessKey = values.businessKey;\n\n      return setBusinessKey(element, businessKey, bpmnFactory);\n    },\n\n    validate: function(element, values, node) {\n      var businessKey = values.businessKey;\n\n      return businessKey === '' ? { businessKey: 'Must provide a value.' } : {};\n    },\n\n    hidden: function(element, node) {\n      return !getCamundaInWithBusinessKey(element).length;\n    }\n\n  }));\n\n  entries = entries.concat(resultVariable(element, bpmnFactory, {\n    id: 'dmn-resultVariable',\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getCallableType,\n    hideResultVariable: function(element, node) {\n      return getCallableType(element) !== 'dmn';\n    }\n  }, translate));\n\n  entries.push(entryFactory.selectBox({\n    id: 'dmn-map-decision-result',\n    label: translate('Map Decision Result'),\n    selectOptions: mapDecisionResultOptions,\n    modelProperty: 'mapDecisionResult',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        mapDecisionResult: bo.get('camunda:mapDecisionResult') || 'resultList'\n      };\n    },\n\n    set: function(element, values, node) {\n      return cmdHelper.updateProperties(element, {\n        'camunda:mapDecisionResult': values.mapDecisionResult || 'resultList'\n      });\n    },\n\n    hidden: function(element, node) {\n      var bo = getBusinessObject(element);\n      var resultVariable = bo.get('camunda:resultVariable');\n      return !(getCallableType(element) === 'dmn' && typeof resultVariable !== 'undefined');\n    }\n\n  }));\n\n\n  entries.push(entryFactory.selectBox({\n    id: 'delegateVariableMappingType',\n    label: translate('Delegate Variable Mapping'),\n    selectOptions: delegateVariableMappingOptions,\n    emptyParameter: true,\n    modelProperty: 'delegateVariableMappingType',\n\n    get: function(element, node) {\n      return {\n        delegateVariableMappingType : getDelegateVariableMappingType(element)\n      };\n    },\n\n    set: function(element, values, node) {\n      var delegateVariableMappingType = values.delegateVariableMappingType;\n\n      var props = {\n        'camunda:variableMappingClass' : undefined,\n        'camunda:variableMappingDelegateExpression' : undefined\n      };\n\n      if (delegateVariableMappingType === 'variableMappingClass') {\n        props['camunda:variableMappingClass'] = '';\n      }\n      else if (delegateVariableMappingType === 'variableMappingDelegateExpression') {\n        props['camunda:variableMappingDelegateExpression'] = '';\n      }\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    hidden: function(element, node) {\n      return (getCallableType(element) !== 'bpmn');\n    }\n\n  }));\n\n  entries.push(entryFactory.textField({\n    id: 'delegateVariableMapping',\n    dataValueLabel: 'delegateVariableMappingLabel',\n    modelProperty: 'delegateVariableMapping',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n\n      var label = '';\n      var delegateVariableMapping = undefined;\n      var type = getDelegateVariableMappingType(element);\n\n      if (type === 'variableMappingClass') {\n        label = translate('Class');\n        delegateVariableMapping = bo.get('camunda:variableMappingClass');\n      }\n      else if (type === 'variableMappingDelegateExpression') {\n        label = translate('Delegate Expression');\n        delegateVariableMapping = bo.get('camunda:variableMappingDelegateExpression');\n      }\n\n      return {\n        delegateVariableMapping: delegateVariableMapping,\n        delegateVariableMappingLabel: label\n      };\n    },\n\n    set: function(element, values, node) {\n      var delegateVariableMapping = values.delegateVariableMapping;\n\n      var attr = 'camunda:' + getDelegateVariableMappingType(element);\n\n      var props = {};\n      props[attr] = delegateVariableMapping || undefined;\n\n      return cmdHelper.updateProperties(element, props);\n    },\n\n    validate: function(element, values, node) {\n      var delegateVariableMapping = values.delegateVariableMapping;\n      return (\n        getCallableType(element) === 'bpmn' && (\n          !delegateVariableMapping ? { delegateVariableMapping: translate('Must provide a value.') } : {}\n        )\n      );\n    },\n\n    hidden: function(element, node) {\n      return !(getCallableType(element) === 'bpmn' && getDelegateVariableMappingType(element) !== '');\n    }\n\n  }));\n\n  return entries;\n};\n"]},"metadata":{},"sourceType":"script"}