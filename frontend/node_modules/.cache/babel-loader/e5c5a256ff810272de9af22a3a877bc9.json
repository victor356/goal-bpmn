{"ast":null,"code":"'use strict';\n\nvar ImplementationTypeHelper = require('../../../helper/ImplementationTypeHelper');\n\nvar fieldInjection = require('./implementation/FieldInjection');\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  var bo = ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n\n  if (!bo) {\n    return;\n  }\n\n  var fieldInjectionEntry = fieldInjection(element, bpmnFactory, translate, {\n    businessObject: bo\n  });\n\n  if (fieldInjectionEntry && fieldInjectionEntry.length > 0) {\n    group.entries = group.entries.concat(fieldInjectionEntry);\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/FieldInjectionProps.js"],"names":["ImplementationTypeHelper","require","fieldInjection","module","exports","group","element","bpmnFactory","translate","bo","getServiceTaskLikeBusinessObject","fieldInjectionEntry","businessObject","length","entries","concat"],"mappings":"AAAA;;AAEA,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,0CAAD,CAAtC;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,iCAAD,CAA5B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiD;AAEhE,MAAIC,EAAE,GAAGT,wBAAwB,CAACU,gCAAzB,CAA0DJ,OAA1D,CAAT;;AAEA,MAAI,CAACG,EAAL,EAAS;AACP;AACD;;AAED,MAAIE,mBAAmB,GAAGT,cAAc,CAACI,OAAD,EAAUC,WAAV,EAAuBC,SAAvB,EAAkC;AAAEI,IAAAA,cAAc,EAAEH;AAAlB,GAAlC,CAAxC;;AAEA,MAAIE,mBAAmB,IAAIA,mBAAmB,CAACE,MAApB,GAA6B,CAAxD,EAA2D;AACzDR,IAAAA,KAAK,CAACS,OAAN,GAAgBT,KAAK,CAACS,OAAN,CAAcC,MAAd,CAAqBJ,mBAArB,CAAhB;AACD;AAEF,CAdD","sourcesContent":["'use strict';\n\nvar ImplementationTypeHelper = require('../../../helper/ImplementationTypeHelper');\n\nvar fieldInjection = require('./implementation/FieldInjection');\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n\n  var bo = ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n\n  if (!bo) {\n    return;\n  }\n\n  var fieldInjectionEntry = fieldInjection(element, bpmnFactory, translate, { businessObject: bo });\n\n  if (fieldInjectionEntry && fieldInjectionEntry.length > 0) {\n    group.entries = group.entries.concat(fieldInjectionEntry);\n  }\n\n};\n"]},"metadata":{},"sourceType":"script"}