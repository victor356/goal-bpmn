{"ast":null,"code":"import { assign, forEach, isArray } from 'min-dash';\nimport { is } from '../../util/ModelUtil';\nimport { isExpanded, isEventSubProcess } from '../../util/DiUtil';\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { getChildLanes } from '../modeling/util/LaneUtil';\nimport { hasPrimaryModifier } from 'diagram-js/lib/util/Mouse';\n/**\n * A provider for BPMN 2.0 elements context pad\n */\n\nexport default function ContextPadProvider(config, injector, eventBus, contextPad, modeling, elementFactory, connect, create, popupMenu, canvas, rules, translate) {\n  config = config || {};\n  contextPad.registerProvider(this);\n  this._contextPad = contextPad;\n  this._modeling = modeling;\n  this._elementFactory = elementFactory;\n  this._connect = connect;\n  this._create = create;\n  this._popupMenu = popupMenu;\n  this._canvas = canvas;\n  this._rules = rules;\n  this._translate = translate;\n\n  if (config.autoPlace !== false) {\n    this._autoPlace = injector.get('autoPlace', false);\n  }\n\n  eventBus.on('create.end', 250, function (event) {\n    var shape = event.context.shape;\n\n    if (!hasPrimaryModifier(event)) {\n      return;\n    }\n\n    var entries = contextPad.getEntries(shape);\n\n    if (entries.replace) {\n      entries.replace.action.click(event, shape);\n    }\n  });\n}\nContextPadProvider.$inject = ['config.contextPad', 'injector', 'eventBus', 'contextPad', 'modeling', 'elementFactory', 'connect', 'create', 'popupMenu', 'canvas', 'rules', 'translate'];\n\nContextPadProvider.prototype.getContextPadEntries = function (element) {\n  var contextPad = this._contextPad,\n      modeling = this._modeling,\n      elementFactory = this._elementFactory,\n      connect = this._connect,\n      create = this._create,\n      popupMenu = this._popupMenu,\n      canvas = this._canvas,\n      rules = this._rules,\n      autoPlace = this._autoPlace,\n      translate = this._translate;\n  var actions = {};\n\n  if (element.type === 'label') {\n    return actions;\n  }\n\n  var businessObject = element.businessObject;\n\n  function startConnect(event, element) {\n    connect.start(event, element);\n  }\n\n  function removeElement(e) {\n    modeling.removeElements([element]);\n  }\n\n  function getReplaceMenuPosition(element) {\n    var Y_OFFSET = 5;\n    var diagramContainer = canvas.getContainer(),\n        pad = contextPad.getPad(element).html;\n    var diagramRect = diagramContainer.getBoundingClientRect(),\n        padRect = pad.getBoundingClientRect();\n    var top = padRect.top - diagramRect.top;\n    var left = padRect.left - diagramRect.left;\n    var pos = {\n      x: left,\n      y: top + padRect.height + Y_OFFSET\n    };\n    return pos;\n  }\n  /**\n   * Create an append action\n   *\n   * @param {String} type\n   * @param {String} className\n   * @param {String} [title]\n   * @param {Object} [options]\n   *\n   * @return {Object} descriptor\n   */\n\n\n  function appendAction(type, className, title, options) {\n    if (typeof title !== 'string') {\n      options = title;\n      title = translate('Append {type}', {\n        type: type.replace(/^bpmn:/, '')\n      });\n    }\n\n    function appendStart(event, element) {\n      var shape = elementFactory.createShape(assign({\n        type: type\n      }, options));\n      create.start(event, shape, element);\n    }\n\n    var append = autoPlace ? function (event, element) {\n      var shape = elementFactory.createShape(assign({\n        type: type\n      }, options));\n      autoPlace.append(element, shape);\n    } : appendStart;\n    return {\n      group: 'model',\n      className: className,\n      title: title,\n      action: {\n        dragstart: appendStart,\n        click: append\n      }\n    };\n  }\n\n  function splitLaneHandler(count) {\n    return function (event, element) {\n      // actual split\n      modeling.splitLane(element, count); // refresh context pad after split to\n      // get rid of split icons\n\n      contextPad.open(element, true);\n    };\n  }\n\n  if (isAny(businessObject, ['bpmn:Lane', 'bpmn:Participant']) && isExpanded(businessObject)) {\n    var childLanes = getChildLanes(element);\n    assign(actions, {\n      'lane-insert-above': {\n        group: 'lane-insert-above',\n        className: 'bpmn-icon-lane-insert-above',\n        title: translate('Add Lane above'),\n        action: {\n          click: function (event, element) {\n            modeling.addLane(element, 'top');\n          }\n        }\n      }\n    });\n\n    if (childLanes.length < 2) {\n      if (element.height >= 120) {\n        assign(actions, {\n          'lane-divide-two': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-two',\n            title: translate('Divide into two Lanes'),\n            action: {\n              click: splitLaneHandler(2)\n            }\n          }\n        });\n      }\n\n      if (element.height >= 180) {\n        assign(actions, {\n          'lane-divide-three': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-three',\n            title: translate('Divide into three Lanes'),\n            action: {\n              click: splitLaneHandler(3)\n            }\n          }\n        });\n      }\n    }\n\n    assign(actions, {\n      'lane-insert-below': {\n        group: 'lane-insert-below',\n        className: 'bpmn-icon-lane-insert-below',\n        title: translate('Add Lane below'),\n        action: {\n          click: function (event, element) {\n            modeling.addLane(element, 'bottom');\n          }\n        }\n      }\n    });\n  }\n\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    if (is(businessObject, 'bpmn:EventBasedGateway')) {\n      assign(actions, {\n        'append.receive-task': appendAction('bpmn:ReceiveTask', 'bpmn-icon-receive-task'),\n        'append.message-intermediate-event': appendAction('bpmn:IntermediateCatchEvent', 'bpmn-icon-intermediate-event-catch-message', translate('Append MessageIntermediateCatchEvent'), {\n          eventDefinitionType: 'bpmn:MessageEventDefinition'\n        }),\n        'append.timer-intermediate-event': appendAction('bpmn:IntermediateCatchEvent', 'bpmn-icon-intermediate-event-catch-timer', translate('Append TimerIntermediateCatchEvent'), {\n          eventDefinitionType: 'bpmn:TimerEventDefinition'\n        }),\n        'append.condtion-intermediate-event': appendAction('bpmn:IntermediateCatchEvent', 'bpmn-icon-intermediate-event-catch-condition', translate('Append ConditionIntermediateCatchEvent'), {\n          eventDefinitionType: 'bpmn:ConditionalEventDefinition'\n        }),\n        'append.signal-intermediate-event': appendAction('bpmn:IntermediateCatchEvent', 'bpmn-icon-intermediate-event-catch-signal', translate('Append SignalIntermediateCatchEvent'), {\n          eventDefinitionType: 'bpmn:SignalEventDefinition'\n        })\n      });\n    } else if (isEventType(businessObject, 'bpmn:BoundaryEvent', 'bpmn:CompensateEventDefinition')) {\n      assign(actions, {\n        'append.compensation-activity': appendAction('bpmn:Task', 'bpmn-icon-task', translate('Append compensation activity'), {\n          isForCompensation: true\n        })\n      });\n    } else if (!is(businessObject, 'bpmn:EndEvent') && !businessObject.isForCompensation && !isEventType(businessObject, 'bpmn:IntermediateThrowEvent', 'bpmn:LinkEventDefinition') && !isEventSubProcess(businessObject)) {\n      assign(actions, {\n        'append.end-event': appendAction('bpmn:EndEvent', 'bpmn-icon-end-event-none'),\n        'append.gateway': appendAction('bpmn:ExclusiveGateway', 'bpmn-icon-gateway-none', translate('Append Gateway')),\n        'append.append-task': appendAction('bpmn:Task', 'bpmn-icon-task'),\n        'append.intermediate-event': appendAction('bpmn:IntermediateThrowEvent', 'bpmn-icon-intermediate-event-none', translate('Append Intermediate/Boundary Event'))\n      });\n    }\n  }\n\n  if (!popupMenu.isEmpty(element, 'bpmn-replace')) {\n    // Replace menu entry\n    assign(actions, {\n      'replace': {\n        group: 'edit',\n        className: 'bpmn-icon-screw-wrench',\n        title: translate('Change type'),\n        action: {\n          click: function (event, element) {\n            var position = assign(getReplaceMenuPosition(element), {\n              cursor: {\n                x: event.x,\n                y: event.y\n              }\n            });\n            popupMenu.open(element, 'bpmn-replace', position);\n          }\n        }\n      }\n    });\n  }\n\n  if (isAny(businessObject, ['bpmn:FlowNode', 'bpmn:InteractionNode', 'bpmn:DataObjectReference', 'bpmn:DataStoreReference'])) {\n    assign(actions, {\n      'append.text-annotation': appendAction('bpmn:TextAnnotation', 'bpmn-icon-text-annotation'),\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using ' + (businessObject.isForCompensation ? '' : 'Sequence/MessageFlow or ') + 'Association'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect\n        }\n      }\n    });\n  }\n\n  if (isAny(businessObject, ['bpmn:DataObjectReference', 'bpmn:DataStoreReference'])) {\n    assign(actions, {\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using DataInputAssociation'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect\n        }\n      }\n    });\n  } // delete element entry, only show if allowed by rules\n\n\n  var deleteAllowed = rules.allowed('elements.delete', {\n    elements: [element]\n  });\n\n  if (isArray(deleteAllowed)) {\n    // was the element returned as a deletion candidate?\n    deleteAllowed = deleteAllowed[0] === element;\n  }\n\n  if (deleteAllowed) {\n    assign(actions, {\n      'delete': {\n        group: 'edit',\n        className: 'bpmn-icon-trash',\n        title: translate('Remove'),\n        action: {\n          click: removeElement\n        }\n      }\n    });\n  }\n\n  return actions;\n};\n\nfunction isEventType(eventBo, type, definition) {\n  var isType = eventBo.$instanceOf(type);\n  var isDefinition = false;\n  var definitions = eventBo.eventDefinitions || [];\n  forEach(definitions, function (def) {\n    if (def.$type === definition) {\n      isDefinition = true;\n    }\n  });\n  return isType && isDefinition;\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/context-pad/ContextPadProvider.js"],"names":["assign","forEach","isArray","is","isExpanded","isEventSubProcess","isAny","getChildLanes","hasPrimaryModifier","ContextPadProvider","config","injector","eventBus","contextPad","modeling","elementFactory","connect","create","popupMenu","canvas","rules","translate","registerProvider","_contextPad","_modeling","_elementFactory","_connect","_create","_popupMenu","_canvas","_rules","_translate","autoPlace","_autoPlace","get","on","event","shape","context","entries","getEntries","replace","action","click","$inject","prototype","getContextPadEntries","element","actions","type","businessObject","startConnect","start","removeElement","e","removeElements","getReplaceMenuPosition","Y_OFFSET","diagramContainer","getContainer","pad","getPad","html","diagramRect","getBoundingClientRect","padRect","top","left","pos","x","y","height","appendAction","className","title","options","appendStart","createShape","append","group","dragstart","splitLaneHandler","count","splitLane","open","childLanes","addLane","length","eventDefinitionType","isEventType","isForCompensation","isEmpty","position","cursor","deleteAllowed","allowed","elements","eventBo","definition","isType","$instanceOf","isDefinition","definitions","eventDefinitions","def","$type"],"mappings":"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","sourcesContent":["import {\n  assign,\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport {\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../../util/DiUtil';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  getChildLanes\n} from '../modeling/util/LaneUtil';\n\nimport {\n  hasPrimaryModifier\n} from 'diagram-js/lib/util/Mouse';\n\n\n/**\n * A provider for BPMN 2.0 elements context pad\n */\nexport default function ContextPadProvider(\n    config, injector, eventBus,\n    contextPad, modeling, elementFactory,\n    connect, create, popupMenu,\n    canvas, rules, translate) {\n\n  config = config || {};\n\n  contextPad.registerProvider(this);\n\n  this._contextPad = contextPad;\n\n  this._modeling = modeling;\n\n  this._elementFactory = elementFactory;\n  this._connect = connect;\n  this._create = create;\n  this._popupMenu = popupMenu;\n  this._canvas = canvas;\n  this._rules = rules;\n  this._translate = translate;\n\n  if (config.autoPlace !== false) {\n    this._autoPlace = injector.get('autoPlace', false);\n  }\n\n  eventBus.on('create.end', 250, function(event) {\n    var shape = event.context.shape;\n\n    if (!hasPrimaryModifier(event)) {\n      return;\n    }\n\n    var entries = contextPad.getEntries(shape);\n\n    if (entries.replace) {\n      entries.replace.action.click(event, shape);\n    }\n  });\n}\n\nContextPadProvider.$inject = [\n  'config.contextPad',\n  'injector',\n  'eventBus',\n  'contextPad',\n  'modeling',\n  'elementFactory',\n  'connect',\n  'create',\n  'popupMenu',\n  'canvas',\n  'rules',\n  'translate'\n];\n\n\nContextPadProvider.prototype.getContextPadEntries = function(element) {\n\n  var contextPad = this._contextPad,\n      modeling = this._modeling,\n\n      elementFactory = this._elementFactory,\n      connect = this._connect,\n      create = this._create,\n      popupMenu = this._popupMenu,\n      canvas = this._canvas,\n      rules = this._rules,\n      autoPlace = this._autoPlace,\n      translate = this._translate;\n\n  var actions = {};\n\n  if (element.type === 'label') {\n    return actions;\n  }\n\n  var businessObject = element.businessObject;\n\n  function startConnect(event, element) {\n    connect.start(event, element);\n  }\n\n  function removeElement(e) {\n    modeling.removeElements([ element ]);\n  }\n\n  function getReplaceMenuPosition(element) {\n\n    var Y_OFFSET = 5;\n\n    var diagramContainer = canvas.getContainer(),\n        pad = contextPad.getPad(element).html;\n\n    var diagramRect = diagramContainer.getBoundingClientRect(),\n        padRect = pad.getBoundingClientRect();\n\n    var top = padRect.top - diagramRect.top;\n    var left = padRect.left - diagramRect.left;\n\n    var pos = {\n      x: left,\n      y: top + padRect.height + Y_OFFSET\n    };\n\n    return pos;\n  }\n\n\n  /**\n   * Create an append action\n   *\n   * @param {String} type\n   * @param {String} className\n   * @param {String} [title]\n   * @param {Object} [options]\n   *\n   * @return {Object} descriptor\n   */\n  function appendAction(type, className, title, options) {\n\n    if (typeof title !== 'string') {\n      options = title;\n      title = translate('Append {type}', { type: type.replace(/^bpmn:/, '') });\n    }\n\n    function appendStart(event, element) {\n\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n      create.start(event, shape, element);\n    }\n\n\n    var append = autoPlace ? function(event, element) {\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n\n      autoPlace.append(element, shape);\n    } : appendStart;\n\n\n    return {\n      group: 'model',\n      className: className,\n      title: title,\n      action: {\n        dragstart: appendStart,\n        click: append\n      }\n    };\n  }\n\n  function splitLaneHandler(count) {\n\n    return function(event, element) {\n      // actual split\n      modeling.splitLane(element, count);\n\n      // refresh context pad after split to\n      // get rid of split icons\n      contextPad.open(element, true);\n    };\n  }\n\n\n  if (isAny(businessObject, [ 'bpmn:Lane', 'bpmn:Participant' ]) && isExpanded(businessObject)) {\n\n    var childLanes = getChildLanes(element);\n\n    assign(actions, {\n      'lane-insert-above': {\n        group: 'lane-insert-above',\n        className: 'bpmn-icon-lane-insert-above',\n        title: translate('Add Lane above'),\n        action: {\n          click: function(event, element) {\n            modeling.addLane(element, 'top');\n          }\n        }\n      }\n    });\n\n    if (childLanes.length < 2) {\n\n      if (element.height >= 120) {\n        assign(actions, {\n          'lane-divide-two': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-two',\n            title: translate('Divide into two Lanes'),\n            action: {\n              click: splitLaneHandler(2)\n            }\n          }\n        });\n      }\n\n      if (element.height >= 180) {\n        assign(actions, {\n          'lane-divide-three': {\n            group: 'lane-divide',\n            className: 'bpmn-icon-lane-divide-three',\n            title: translate('Divide into three Lanes'),\n            action: {\n              click: splitLaneHandler(3)\n            }\n          }\n        });\n      }\n    }\n\n    assign(actions, {\n      'lane-insert-below': {\n        group: 'lane-insert-below',\n        className: 'bpmn-icon-lane-insert-below',\n        title: translate('Add Lane below'),\n        action: {\n          click: function(event, element) {\n            modeling.addLane(element, 'bottom');\n          }\n        }\n      }\n    });\n\n  }\n\n  if (is(businessObject, 'bpmn:FlowNode')) {\n\n    if (is(businessObject, 'bpmn:EventBasedGateway')) {\n\n      assign(actions, {\n        'append.receive-task': appendAction(\n          'bpmn:ReceiveTask',\n          'bpmn-icon-receive-task'\n        ),\n        'append.message-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-message',\n          translate('Append MessageIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:MessageEventDefinition' }\n        ),\n        'append.timer-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-timer',\n          translate('Append TimerIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:TimerEventDefinition' }\n        ),\n        'append.condtion-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-condition',\n          translate('Append ConditionIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:ConditionalEventDefinition' }\n        ),\n        'append.signal-intermediate-event': appendAction(\n          'bpmn:IntermediateCatchEvent',\n          'bpmn-icon-intermediate-event-catch-signal',\n          translate('Append SignalIntermediateCatchEvent'),\n          { eventDefinitionType: 'bpmn:SignalEventDefinition' }\n        )\n      });\n    } else\n\n    if (isEventType(businessObject, 'bpmn:BoundaryEvent', 'bpmn:CompensateEventDefinition')) {\n\n      assign(actions, {\n        'append.compensation-activity':\n            appendAction(\n              'bpmn:Task',\n              'bpmn-icon-task',\n              translate('Append compensation activity'),\n              {\n                isForCompensation: true\n              }\n            )\n      });\n    } else\n\n    if (!is(businessObject, 'bpmn:EndEvent') &&\n        !businessObject.isForCompensation &&\n        !isEventType(businessObject, 'bpmn:IntermediateThrowEvent', 'bpmn:LinkEventDefinition') &&\n        !isEventSubProcess(businessObject)) {\n\n      assign(actions, {\n        'append.end-event': appendAction(\n          'bpmn:EndEvent',\n          'bpmn-icon-end-event-none'\n        ),\n        'append.gateway': appendAction(\n          'bpmn:ExclusiveGateway',\n          'bpmn-icon-gateway-none',\n          translate('Append Gateway')\n        ),\n        'append.append-task': appendAction(\n          'bpmn:Task',\n          'bpmn-icon-task'\n        ),\n        'append.intermediate-event': appendAction(\n          'bpmn:IntermediateThrowEvent',\n          'bpmn-icon-intermediate-event-none',\n          translate('Append Intermediate/Boundary Event')\n        )\n      });\n    }\n  }\n\n  if (!popupMenu.isEmpty(element, 'bpmn-replace')) {\n    // Replace menu entry\n    assign(actions, {\n      'replace': {\n        group: 'edit',\n        className: 'bpmn-icon-screw-wrench',\n        title: translate('Change type'),\n        action: {\n          click: function(event, element) {\n\n            var position = assign(getReplaceMenuPosition(element), {\n              cursor: { x: event.x, y: event.y }\n            });\n\n            popupMenu.open(element, 'bpmn-replace', position);\n          }\n        }\n      }\n    });\n  }\n\n  if (isAny(businessObject, [\n    'bpmn:FlowNode',\n    'bpmn:InteractionNode',\n    'bpmn:DataObjectReference',\n    'bpmn:DataStoreReference'\n  ])) {\n\n    assign(actions, {\n      'append.text-annotation': appendAction('bpmn:TextAnnotation', 'bpmn-icon-text-annotation'),\n\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using ' +\n                  (businessObject.isForCompensation ? '' : 'Sequence/MessageFlow or ') +\n                  'Association'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect\n        }\n      }\n    });\n  }\n\n  if (isAny(businessObject, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\n    assign(actions, {\n      'connect': {\n        group: 'connect',\n        className: 'bpmn-icon-connection-multi',\n        title: translate('Connect using DataInputAssociation'),\n        action: {\n          click: startConnect,\n          dragstart: startConnect\n        }\n      }\n    });\n  }\n\n  // delete element entry, only show if allowed by rules\n  var deleteAllowed = rules.allowed('elements.delete', { elements: [ element ] });\n\n  if (isArray(deleteAllowed)) {\n    // was the element returned as a deletion candidate?\n    deleteAllowed = deleteAllowed[0] === element;\n  }\n\n  if (deleteAllowed) {\n    assign(actions, {\n      'delete': {\n        group: 'edit',\n        className: 'bpmn-icon-trash',\n        title: translate('Remove'),\n        action: {\n          click: removeElement\n        }\n      }\n    });\n  }\n\n  return actions;\n};\n\nfunction isEventType(eventBo, type, definition) {\n\n  var isType = eventBo.$instanceOf(type);\n  var isDefinition = false;\n\n  var definitions = eventBo.eventDefinitions || [];\n  forEach(definitions, function(def) {\n    if (def.$type === definition) {\n      isDefinition = true;\n    }\n  });\n\n  return isType && isDefinition;\n}\n"]},"metadata":{},"sourceType":"module"}