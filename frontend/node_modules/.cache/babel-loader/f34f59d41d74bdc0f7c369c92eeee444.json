{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory'),\n    cmdHelper = require('../../../../helper/CmdHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    elementHelper = require('../../../../helper/ElementHelper');\n\nvar assign = require('lodash/assign');\n\nvar map = require('lodash/map');\n\nvar DEFAULT_DELEGATE_PROPS = ['class', 'expression', 'delegateExpression'];\nvar DELEGATE_PROPS = {\n  'camunda:class': undefined,\n  'camunda:expression': undefined,\n  'camunda:delegateExpression': undefined,\n  'camunda:resultVariable': undefined\n};\nvar DMN_CAPABLE_PROPS = {\n  'camunda:decisionRef': undefined,\n  'camunda:decisionRefBinding': 'latest',\n  'camunda:decisionRefVersion': undefined,\n  'camunda:mapDecisionResult': 'resultList',\n  'camunda:decisionRefTenantId': undefined\n};\nvar EXTERNAL_CAPABLE_PROPS = {\n  'camunda:type': undefined,\n  'camunda:topic': undefined\n};\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var DEFAULT_OPTIONS = [{\n    value: 'class',\n    name: translate('Java Class')\n  }, {\n    value: 'expression',\n    name: translate('Expression')\n  }, {\n    value: 'delegateExpression',\n    name: translate('Delegate Expression')\n  }];\n  var DMN_OPTION = [{\n    value: 'dmn',\n    name: translate('DMN')\n  }];\n  var EXTERNAL_OPTION = [{\n    value: 'external',\n    name: translate('External')\n  }];\n  var CONNECTOR_OPTION = [{\n    value: 'connector',\n    name: translate('Connector')\n  }];\n  var SCRIPT_OPTION = [{\n    value: 'script',\n    name: translate('Script')\n  }];\n  var getType = options.getImplementationType,\n      getBusinessObject = options.getBusinessObject;\n  var hasDmnSupport = options.hasDmnSupport,\n      hasExternalSupport = options.hasExternalSupport,\n      hasServiceTaskLikeSupport = options.hasServiceTaskLikeSupport,\n      hasScriptSupport = options.hasScriptSupport;\n  var entries = [];\n  var selectOptions = DEFAULT_OPTIONS.concat([]);\n\n  if (hasDmnSupport) {\n    selectOptions = selectOptions.concat(DMN_OPTION);\n  }\n\n  if (hasExternalSupport) {\n    selectOptions = selectOptions.concat(EXTERNAL_OPTION);\n  }\n\n  if (hasServiceTaskLikeSupport) {\n    selectOptions = selectOptions.concat(CONNECTOR_OPTION);\n  }\n\n  if (hasScriptSupport) {\n    selectOptions = selectOptions.concat(SCRIPT_OPTION);\n  }\n\n  selectOptions.push({\n    value: ''\n  });\n  entries.push(entryFactory.selectBox({\n    id: 'implementation',\n    label: translate('Implementation'),\n    selectOptions: selectOptions,\n    modelProperty: 'implType',\n    get: function (element, node) {\n      return {\n        implType: getType(element) || ''\n      };\n    },\n    set: function (element, values, node) {\n      var bo = getBusinessObject(element);\n      var oldType = getType(element);\n      var newType = values.implType;\n      var props = assign({}, DELEGATE_PROPS);\n\n      if (DEFAULT_DELEGATE_PROPS.indexOf(newType) !== -1) {\n        var newValue = '';\n\n        if (DEFAULT_DELEGATE_PROPS.indexOf(oldType) !== -1) {\n          newValue = bo.get('camunda:' + oldType);\n        }\n\n        props['camunda:' + newType] = newValue;\n      }\n\n      if (hasDmnSupport) {\n        props = assign(props, DMN_CAPABLE_PROPS);\n\n        if (newType === 'dmn') {\n          props['camunda:decisionRef'] = '';\n        }\n      }\n\n      if (hasExternalSupport) {\n        props = assign(props, EXTERNAL_CAPABLE_PROPS);\n\n        if (newType === 'external') {\n          props['camunda:type'] = 'external';\n          props['camunda:topic'] = '';\n        }\n      }\n\n      if (hasScriptSupport) {\n        props['camunda:script'] = undefined;\n\n        if (newType === 'script') {\n          props['camunda:script'] = elementHelper.createElement('camunda:Script', {}, bo, bpmnFactory);\n        }\n      }\n\n      var commands = [];\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n\n      if (hasServiceTaskLikeSupport) {\n        var connectors = extensionElementsHelper.getExtensionElements(bo, 'camunda:Connector');\n        commands.push(map(connectors, function (connector) {\n          return extensionElementsHelper.removeEntry(bo, element, connector);\n        }));\n\n        if (newType === 'connector') {\n          var extensionElements = bo.get('extensionElements');\n\n          if (!extensionElements) {\n            extensionElements = elementHelper.createElement('bpmn:ExtensionElements', {\n              values: []\n            }, bo, bpmnFactory);\n            commands.push(cmdHelper.updateBusinessObject(element, bo, {\n              extensionElements: extensionElements\n            }));\n          }\n\n          var connector = elementHelper.createElement('camunda:Connector', {}, extensionElements, bpmnFactory);\n          commands.push(cmdHelper.addAndRemoveElementsFromList(element, extensionElements, 'values', 'extensionElements', [connector], []));\n        }\n      }\n\n      return commands;\n    }\n  }));\n  return entries;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/ImplementationType.js"],"names":["entryFactory","require","cmdHelper","extensionElementsHelper","elementHelper","assign","map","DEFAULT_DELEGATE_PROPS","DELEGATE_PROPS","undefined","DMN_CAPABLE_PROPS","EXTERNAL_CAPABLE_PROPS","module","exports","element","bpmnFactory","options","translate","DEFAULT_OPTIONS","value","name","DMN_OPTION","EXTERNAL_OPTION","CONNECTOR_OPTION","SCRIPT_OPTION","getType","getImplementationType","getBusinessObject","hasDmnSupport","hasExternalSupport","hasServiceTaskLikeSupport","hasScriptSupport","entries","selectOptions","concat","push","selectBox","id","label","modelProperty","get","node","implType","set","values","bo","oldType","newType","props","indexOf","newValue","createElement","commands","updateBusinessObject","connectors","getExtensionElements","connector","removeEntry","extensionElements","addAndRemoveElementsFromList"],"mappings":"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","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory'),\n    cmdHelper = require('../../../../helper/CmdHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    elementHelper = require('../../../../helper/ElementHelper');\n\nvar assign = require('lodash/assign');\nvar map = require('lodash/map');\n\nvar DEFAULT_DELEGATE_PROPS = [ 'class', 'expression', 'delegateExpression' ];\n\nvar DELEGATE_PROPS = {\n  'camunda:class': undefined,\n  'camunda:expression': undefined,\n  'camunda:delegateExpression': undefined,\n  'camunda:resultVariable': undefined\n};\n\nvar DMN_CAPABLE_PROPS = {\n  'camunda:decisionRef': undefined,\n  'camunda:decisionRefBinding': 'latest',\n  'camunda:decisionRefVersion': undefined,\n  'camunda:mapDecisionResult': 'resultList',\n  'camunda:decisionRefTenantId': undefined\n};\n\n\nvar EXTERNAL_CAPABLE_PROPS = {\n  'camunda:type': undefined,\n  'camunda:topic': undefined\n};\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var DEFAULT_OPTIONS = [\n    { value: 'class', name: translate('Java Class') },\n    { value: 'expression', name: translate('Expression') },\n    { value: 'delegateExpression', name: translate('Delegate Expression') }\n  ];\n\n  var DMN_OPTION = [\n    { value: 'dmn', name: translate('DMN') }\n  ];\n\n  var EXTERNAL_OPTION = [\n    { value: 'external', name: translate('External') }\n  ];\n\n  var CONNECTOR_OPTION = [\n    { value: 'connector', name: translate('Connector') }\n  ];\n\n  var SCRIPT_OPTION = [\n    { value: 'script', name: translate('Script') }\n  ];\n\n  var getType = options.getImplementationType,\n      getBusinessObject = options.getBusinessObject;\n\n  var hasDmnSupport = options.hasDmnSupport,\n      hasExternalSupport = options.hasExternalSupport,\n      hasServiceTaskLikeSupport = options.hasServiceTaskLikeSupport,\n      hasScriptSupport = options.hasScriptSupport;\n\n  var entries = [];\n\n  var selectOptions = DEFAULT_OPTIONS.concat([]);\n\n  if (hasDmnSupport) {\n    selectOptions = selectOptions.concat(DMN_OPTION);\n  }\n\n  if (hasExternalSupport) {\n    selectOptions = selectOptions.concat(EXTERNAL_OPTION);\n  }\n\n  if (hasServiceTaskLikeSupport) {\n    selectOptions = selectOptions.concat(CONNECTOR_OPTION);\n  }\n\n  if (hasScriptSupport) {\n    selectOptions = selectOptions.concat(SCRIPT_OPTION);\n  }\n\n  selectOptions.push({ value: '' });\n\n  entries.push(entryFactory.selectBox({\n    id : 'implementation',\n    label: translate('Implementation'),\n    selectOptions: selectOptions,\n    modelProperty: 'implType',\n\n    get: function(element, node) {\n      return {\n        implType: getType(element) || ''\n      };\n    },\n\n    set: function(element, values, node) {\n      var bo = getBusinessObject(element);\n      var oldType = getType(element);\n      var newType = values.implType;\n\n      var props = assign({}, DELEGATE_PROPS);\n\n      if (DEFAULT_DELEGATE_PROPS.indexOf(newType) !== -1) {\n\n        var newValue = '';\n        if (DEFAULT_DELEGATE_PROPS.indexOf(oldType) !== -1) {\n          newValue = bo.get('camunda:' + oldType);\n        }\n        props['camunda:' + newType] = newValue;\n      }\n\n      if (hasDmnSupport) {\n        props = assign(props, DMN_CAPABLE_PROPS);\n        if (newType === 'dmn') {\n          props['camunda:decisionRef'] = '';\n        }\n      }\n\n      if (hasExternalSupport) {\n        props = assign(props, EXTERNAL_CAPABLE_PROPS);\n        if (newType === 'external') {\n          props['camunda:type'] = 'external';\n          props['camunda:topic'] = '';\n        }\n      }\n\n      if (hasScriptSupport) {\n        props['camunda:script'] = undefined;\n\n        if (newType === 'script') {\n          props['camunda:script'] = elementHelper.createElement('camunda:Script', {}, bo, bpmnFactory);\n        }\n      }\n\n      var commands = [];\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n\n      if (hasServiceTaskLikeSupport) {\n        var connectors = extensionElementsHelper.getExtensionElements(bo, 'camunda:Connector');\n        commands.push(map(connectors, function(connector) {\n          return extensionElementsHelper.removeEntry(bo, element, connector);\n        }));\n\n        if (newType === 'connector') {\n          var extensionElements = bo.get('extensionElements');\n          if (!extensionElements) {\n            extensionElements = elementHelper.createElement('bpmn:ExtensionElements', { values: [] }, bo, bpmnFactory);\n            commands.push(cmdHelper.updateBusinessObject(element, bo, { extensionElements: extensionElements }));\n          }\n          var connector = elementHelper.createElement('camunda:Connector', {}, extensionElements, bpmnFactory);\n          commands.push(cmdHelper.addAndRemoveElementsFromList(\n            element,\n            extensionElements,\n            'values',\n            'extensionElements',\n            [ connector ],\n            []\n          ));\n        }\n      }\n\n      return commands;\n\n    }\n  }));\n\n  return entries;\n\n};\n"]},"metadata":{},"sourceType":"script"}