{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    entryFactory = require('../../../factory/EntryFactory'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    script = require('./implementation/Script')('scriptFormat', 'script', false);\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  var bo;\n\n  if (is(element, 'bpmn:ScriptTask')) {\n    bo = getBusinessObject(element);\n  }\n\n  if (!bo) {\n    return;\n  }\n\n  group.entries.push({\n    id: 'script-implementation',\n    label: translate('Script'),\n    html: script.template,\n    get: function (element) {\n      return script.get(element, bo);\n    },\n    set: function (element, values, containerElement) {\n      var properties = script.set(element, values, containerElement);\n      return cmdHelper.updateProperties(element, properties);\n    },\n    validate: function (element, values) {\n      return script.validate(element, values);\n    },\n    script: script,\n    cssClasses: ['bpp-textfield']\n  });\n  group.entries.push(entryFactory.textField({\n    id: 'scriptResultVariable',\n    label: translate('Result Variable'),\n    modelProperty: 'scriptResultVariable',\n    get: function (element, propertyName) {\n      var boResultVariable = bo.get('camunda:resultVariable');\n      return {\n        scriptResultVariable: boResultVariable\n      };\n    },\n    set: function (element, values, containerElement) {\n      return cmdHelper.updateProperties(element, {\n        'camunda:resultVariable': values.scriptResultVariable.length ? values.scriptResultVariable : undefined\n      });\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/ScriptTaskProps.js"],"names":["getBusinessObject","require","is","entryFactory","cmdHelper","script","module","exports","group","element","bpmnFactory","translate","bo","entries","push","id","label","html","template","get","set","values","containerElement","properties","updateProperties","validate","cssClasses","textField","modelProperty","propertyName","boResultVariable","scriptResultVariable","length","undefined"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCD,iBAA9D;AAAA,IACIE,EAAE,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCC,EAD/C;AAAA,IAEIC,YAAY,GAAGF,OAAO,CAAC,+BAAD,CAF1B;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAAC,2BAAD,CAHvB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,yBAAD,CAAP,CAAmC,cAAnC,EAAmD,QAAnD,EAA6D,KAA7D,CAJb;;AAOAK,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiD;AAChE,MAAIC,EAAJ;;AAEA,MAAIV,EAAE,CAACO,OAAD,EAAU,iBAAV,CAAN,EAAoC;AAClCG,IAAAA,EAAE,GAAGZ,iBAAiB,CAACS,OAAD,CAAtB;AACD;;AAED,MAAI,CAACG,EAAL,EAAS;AACP;AACD;;AAEDJ,EAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB;AACjBC,IAAAA,EAAE,EAAE,uBADa;AAEjBC,IAAAA,KAAK,EAAEL,SAAS,CAAC,QAAD,CAFC;AAGjBM,IAAAA,IAAI,EAAEZ,MAAM,CAACa,QAHI;AAKjBC,IAAAA,GAAG,EAAE,UAASV,OAAT,EAAkB;AACrB,aAAOJ,MAAM,CAACc,GAAP,CAAWV,OAAX,EAAoBG,EAApB,CAAP;AACD,KAPgB;AASjBQ,IAAAA,GAAG,EAAE,UAASX,OAAT,EAAkBY,MAAlB,EAA0BC,gBAA1B,EAA4C;AAC/C,UAAIC,UAAU,GAAGlB,MAAM,CAACe,GAAP,CAAWX,OAAX,EAAoBY,MAApB,EAA4BC,gBAA5B,CAAjB;AAEA,aAAOlB,SAAS,CAACoB,gBAAV,CAA2Bf,OAA3B,EAAoCc,UAApC,CAAP;AACD,KAbgB;AAejBE,IAAAA,QAAQ,EAAE,UAAShB,OAAT,EAAkBY,MAAlB,EAA0B;AAClC,aAAOhB,MAAM,CAACoB,QAAP,CAAgBhB,OAAhB,EAAyBY,MAAzB,CAAP;AACD,KAjBgB;AAmBjBhB,IAAAA,MAAM,EAAGA,MAnBQ;AAqBjBqB,IAAAA,UAAU,EAAE,CAAC,eAAD;AArBK,GAAnB;AAyBAlB,EAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBX,YAAY,CAACwB,SAAb,CAAuB;AACxCZ,IAAAA,EAAE,EAAG,sBADmC;AAExCC,IAAAA,KAAK,EAAGL,SAAS,CAAC,iBAAD,CAFuB;AAGxCiB,IAAAA,aAAa,EAAG,sBAHwB;AAKxCT,IAAAA,GAAG,EAAE,UAASV,OAAT,EAAkBoB,YAAlB,EAAgC;AACnC,UAAIC,gBAAgB,GAAGlB,EAAE,CAACO,GAAH,CAAO,wBAAP,CAAvB;AAEA,aAAO;AAAEY,QAAAA,oBAAoB,EAAGD;AAAzB,OAAP;AACD,KATuC;AAWxCV,IAAAA,GAAG,EAAE,UAASX,OAAT,EAAkBY,MAAlB,EAA0BC,gBAA1B,EAA4C;AAC/C,aAAOlB,SAAS,CAACoB,gBAAV,CAA2Bf,OAA3B,EAAoC;AACzC,kCAA0BY,MAAM,CAACU,oBAAP,CAA4BC,MAA5B,GACtBX,MAAM,CAACU,oBADe,GAEtBE;AAHqC,OAApC,CAAP;AAKD;AAjBuC,GAAvB,CAAnB;AAqBD,CAzDD","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    entryFactory = require('../../../factory/EntryFactory'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    script = require('./implementation/Script')('scriptFormat', 'script', false);\n\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n  var bo;\n\n  if (is(element, 'bpmn:ScriptTask')) {\n    bo = getBusinessObject(element);\n  }\n\n  if (!bo) {\n    return;\n  }\n\n  group.entries.push({\n    id: 'script-implementation',\n    label: translate('Script'),\n    html: script.template,\n\n    get: function(element) {\n      return script.get(element, bo);\n    },\n\n    set: function(element, values, containerElement) {\n      var properties = script.set(element, values, containerElement);\n\n      return cmdHelper.updateProperties(element, properties);\n    },\n\n    validate: function(element, values) {\n      return script.validate(element, values);\n    },\n\n    script : script,\n\n    cssClasses: ['bpp-textfield']\n\n  });\n\n  group.entries.push(entryFactory.textField({\n    id : 'scriptResultVariable',\n    label : translate('Result Variable'),\n    modelProperty : 'scriptResultVariable',\n\n    get: function(element, propertyName) {\n      var boResultVariable = bo.get('camunda:resultVariable');\n\n      return { scriptResultVariable : boResultVariable };\n    },\n\n    set: function(element, values, containerElement) {\n      return cmdHelper.updateProperties(element, {\n        'camunda:resultVariable': values.scriptResultVariable.length\n          ? values.scriptResultVariable\n          : undefined\n      });\n    }\n\n  }));\n\n};\n"]},"metadata":{},"sourceType":"script"}