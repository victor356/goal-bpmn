{"ast":null,"code":"import { isArray } from 'min-dash';\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\n\nexport function hasModifier(event) {\n  return event.ctrlKey || event.metaKey || event.shiftKey || event.altKey;\n}\n/**\r\n * @param {KeyboardEvent} event\r\n */\n\nexport function isCmd(event) {\n  // ensure we don't react to AltGr\n  // (mapped to CTRL + ALT)\n  if (event.altKey) {\n    return false;\n  }\n\n  return event.ctrlKey || event.metaKey;\n}\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {String|String[]} keys\r\n * @param {KeyboardEvent} event\r\n */\n\nexport function isKey(keys, event) {\n  keys = isArray(keys) ? keys : [keys];\n  return keys.indexOf(event.key) > -1;\n}\n/**\r\n * @param {KeyboardEvent} event\r\n */\n\nexport function isShift(event) {\n  return event.shiftKey;\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/keyboard/KeyboardUtil.js"],"names":["isArray","hasModifier","event","ctrlKey","metaKey","shiftKey","altKey","isCmd","isKey","keys","indexOf","key","isShift"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,SAAQA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAAvB,IAAkCF,KAAK,CAACG,QAAxC,IAAoDH,KAAK,CAACI,MAAlE;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeL,KAAf,EAAsB;AAE3B;AACA;AACA,MAAIA,KAAK,CAACI,MAAV,EAAkB;AAChB,WAAO,KAAP;AACD;;AAED,SAAOJ,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAA9B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,KAAT,CAAeC,IAAf,EAAqBP,KAArB,EAA4B;AACjCO,EAAAA,IAAI,GAAGT,OAAO,CAACS,IAAD,CAAP,GAAgBA,IAAhB,GAAuB,CAAEA,IAAF,CAA9B;AAEA,SAAOA,IAAI,CAACC,OAAL,CAAaR,KAAK,CAACS,GAAnB,IAA0B,CAAC,CAAlC;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBV,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACG,QAAb;AACD","sourcesContent":["import { isArray } from 'min-dash';\r\n\r\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function hasModifier(event) {\r\n  return (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey);\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isCmd(event) {\r\n\r\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}\r\n\r\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {String|String[]} keys\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isKey(keys, event) {\r\n  keys = isArray(keys) ? keys : [ keys ];\r\n\r\n  return keys.indexOf(event.key) > -1;\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isShift(event) {\r\n  return event.shiftKey;\r\n}"]},"metadata":{},"sourceType":"module"}