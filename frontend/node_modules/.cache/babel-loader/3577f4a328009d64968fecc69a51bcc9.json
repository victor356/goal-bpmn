{"ast":null,"code":"import { event as domEvent, closest as domClosest } from 'min-dom';\nimport { getStepSize, cap } from './ZoomUtil';\nimport { log10 } from '../../util/Math';\nimport { bind } from 'min-dash';\n\nvar sign = Math.sign || function (n) {\n  return n >= 0 ? 1 : -1;\n};\n\nvar RANGE = {\n  min: 0.2,\n  max: 4\n},\n    NUM_STEPS = 10;\nvar DELTA_THRESHOLD = 0.1;\nvar DEFAULT_SCALE = 0.75;\n/**\n * An implementation of zooming and scrolling within the\n * {@link Canvas} via the mouse wheel.\n *\n * Mouse wheel zooming / scrolling may be disabled using\n * the {@link toggle(enabled)} method.\n *\n * @param {Object} [config]\n * @param {Boolean} [config.enabled=true] default enabled state\n * @param {Number} [config.scale=.75] scroll sensivity\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\n\nexport default function ZoomScroll(config, eventBus, canvas) {\n  config = config || {};\n  this._enabled = false;\n  this._canvas = canvas;\n  this._container = canvas._container;\n  this._handleWheel = bind(this._handleWheel, this);\n  this._totalDelta = 0;\n  this._scale = config.scale || DEFAULT_SCALE;\n  var self = this;\n  eventBus.on('canvas.init', function (e) {\n    self._init(config.enabled !== false);\n  });\n}\nZoomScroll.$inject = ['config.zoomScroll', 'eventBus', 'canvas'];\n\nZoomScroll.prototype.scroll = function scroll(delta) {\n  this._canvas.scroll(delta);\n};\n\nZoomScroll.prototype.reset = function reset() {\n  this._canvas.zoom('fit-viewport');\n};\n/**\n * Zoom depending on delta.\n *\n * @param {number} delta - Zoom delta.\n * @param {Object} position - Zoom position.\n */\n\n\nZoomScroll.prototype.zoom = function zoom(delta, position) {\n  // zoom with half the step size of stepZoom\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2); // add until threshold reached\n\n  this._totalDelta += delta;\n\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\n    this._zoom(delta, position, stepSize); // reset\n\n\n    this._totalDelta = 0;\n  }\n};\n\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\n  // event is already handled by '.djs-scrollable'\n  if (domClosest(event.target, '.djs-scrollable', true)) {\n    return;\n  }\n\n  var element = this._container;\n  event.preventDefault(); // pinch to zoom is mapped to wheel + ctrlKey = true\n  // in modern browsers (!)\n\n  var isZoom = event.ctrlKey;\n  var isHorizontalScroll = event.shiftKey;\n  var factor = -1 * this._scale,\n      delta;\n\n  if (isZoom) {\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\n  } else {\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\n  }\n\n  if (isZoom) {\n    var elementRect = element.getBoundingClientRect();\n    var offset = {\n      x: event.clientX - elementRect.left,\n      y: event.clientY - elementRect.top\n    };\n    delta = Math.sqrt(Math.pow(event.deltaY, 2) + Math.pow(event.deltaX, 2)) * sign(event.deltaY) * factor; // zoom in relative to diagram {x,y} coordinates\n\n    this.zoom(delta, offset);\n  } else {\n    if (isHorizontalScroll) {\n      delta = {\n        dx: factor * event.deltaY,\n        dy: 0\n      };\n    } else {\n      delta = {\n        dx: factor * event.deltaX,\n        dy: factor * event.deltaY\n      };\n    }\n\n    this.scroll(delta);\n  }\n};\n/**\n * Zoom with fixed step size.\n *\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\n * @param {Object} position - Zoom position.\n */\n\n\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\n\n  this._zoom(delta, position, stepSize);\n};\n/**\n * Zoom in/out given a step size.\n *\n * @param {number} delta - Zoom delta. Can be positive or negative.\n * @param {Object} position - Zoom position.\n * @param {number} stepSize - Step size.\n */\n\n\nZoomScroll.prototype._zoom = function (delta, position, stepSize) {\n  var canvas = this._canvas;\n  var direction = delta > 0 ? 1 : -1;\n  var currentLinearZoomLevel = log10(canvas.zoom()); // snap to a proximate zoom step\n\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize; // increase or decrease one zoom step in the given direction\n\n  newLinearZoomLevel += stepSize * direction; // calculate the absolute logarithmic zoom level based on the linear zoom level\n  // (e.g. 2 for an absolute x2 zoom)\n\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\n};\n/**\n * Toggle the zoom scroll ability via mouse wheel.\n *\n * @param  {Boolean} [newEnabled] new enabled state\n */\n\n\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\n  var element = this._container;\n  var handleWheel = this._handleWheel;\n  var oldEnabled = this._enabled;\n\n  if (typeof newEnabled === 'undefined') {\n    newEnabled = !oldEnabled;\n  } // only react on actual changes\n\n\n  if (oldEnabled !== newEnabled) {\n    // add or remove wheel listener based on\n    // changed enabled state\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\n  }\n\n  this._enabled = newEnabled;\n  return newEnabled;\n};\n\nZoomScroll.prototype._init = function (newEnabled) {\n  this.toggle(newEnabled);\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/navigation/zoomscroll/ZoomScroll.js"],"names":["event","domEvent","closest","domClosest","getStepSize","cap","log10","bind","sign","Math","n","RANGE","min","max","NUM_STEPS","DELTA_THRESHOLD","DEFAULT_SCALE","ZoomScroll","config","eventBus","canvas","_enabled","_canvas","_container","_handleWheel","_totalDelta","_scale","scale","self","on","e","_init","enabled","$inject","prototype","scroll","delta","reset","zoom","position","stepSize","abs","_zoom","handleWheel","target","element","preventDefault","isZoom","ctrlKey","isHorizontalScroll","shiftKey","factor","deltaMode","elementRect","getBoundingClientRect","offset","x","clientX","left","y","clientY","top","sqrt","pow","deltaY","deltaX","dx","dy","stepZoom","direction","currentLinearZoomLevel","newLinearZoomLevel","round","newLogZoomLevel","toggle","newEnabled","oldEnabled"],"mappings":"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","sourcesContent":["import {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  getStepSize,\n  cap\n} from './ZoomUtil';\n\nimport {\n  log10\n} from '../../util/Math';\n\nimport {\n  bind\n} from 'min-dash';\n\nvar sign = Math.sign || function(n) {\n  return n >= 0 ? 1 : -1;\n};\n\nvar RANGE = { min: 0.2, max: 4 },\n    NUM_STEPS = 10;\n\nvar DELTA_THRESHOLD = 0.1;\n\nvar DEFAULT_SCALE = 0.75;\n\n/**\n * An implementation of zooming and scrolling within the\n * {@link Canvas} via the mouse wheel.\n *\n * Mouse wheel zooming / scrolling may be disabled using\n * the {@link toggle(enabled)} method.\n *\n * @param {Object} [config]\n * @param {Boolean} [config.enabled=true] default enabled state\n * @param {Number} [config.scale=.75] scroll sensivity\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ZoomScroll(config, eventBus, canvas) {\n\n  config = config || {};\n\n  this._enabled = false;\n\n  this._canvas = canvas;\n  this._container = canvas._container;\n\n  this._handleWheel = bind(this._handleWheel, this);\n\n  this._totalDelta = 0;\n  this._scale = config.scale || DEFAULT_SCALE;\n\n  var self = this;\n\n  eventBus.on('canvas.init', function(e) {\n    self._init(config.enabled !== false);\n  });\n}\n\nZoomScroll.$inject = [\n  'config.zoomScroll',\n  'eventBus',\n  'canvas'\n];\n\nZoomScroll.prototype.scroll = function scroll(delta) {\n  this._canvas.scroll(delta);\n};\n\n\nZoomScroll.prototype.reset = function reset() {\n  this._canvas.zoom('fit-viewport');\n};\n\n/**\n * Zoom depending on delta.\n *\n * @param {number} delta - Zoom delta.\n * @param {Object} position - Zoom position.\n */\nZoomScroll.prototype.zoom = function zoom(delta, position) {\n\n  // zoom with half the step size of stepZoom\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\n\n  // add until threshold reached\n  this._totalDelta += delta;\n\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\n    this._zoom(delta, position, stepSize);\n\n    // reset\n    this._totalDelta = 0;\n  }\n};\n\n\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\n  // event is already handled by '.djs-scrollable'\n  if (domClosest(event.target, '.djs-scrollable', true)) {\n    return;\n  }\n\n  var element = this._container;\n\n  event.preventDefault();\n\n  // pinch to zoom is mapped to wheel + ctrlKey = true\n  // in modern browsers (!)\n\n  var isZoom = event.ctrlKey;\n\n  var isHorizontalScroll = event.shiftKey;\n\n  var factor = -1 * this._scale,\n      delta;\n\n  if (isZoom) {\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\n  } else {\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\n  }\n\n  if (isZoom) {\n    var elementRect = element.getBoundingClientRect();\n\n    var offset = {\n      x: event.clientX - elementRect.left,\n      y: event.clientY - elementRect.top\n    };\n\n    delta = (\n      Math.sqrt(\n        Math.pow(event.deltaY, 2) +\n        Math.pow(event.deltaX, 2)\n      ) * sign(event.deltaY) * factor\n    );\n\n    // zoom in relative to diagram {x,y} coordinates\n    this.zoom(delta, offset);\n  } else {\n\n    if (isHorizontalScroll) {\n      delta = {\n        dx: factor * event.deltaY,\n        dy: 0\n      };\n    } else {\n      delta = {\n        dx: factor * event.deltaX,\n        dy: factor * event.deltaY\n      };\n    }\n\n    this.scroll(delta);\n  }\n};\n\n/**\n * Zoom with fixed step size.\n *\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\n * @param {Object} position - Zoom position.\n */\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\n\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\n\n  this._zoom(delta, position, stepSize);\n};\n\n\n/**\n * Zoom in/out given a step size.\n *\n * @param {number} delta - Zoom delta. Can be positive or negative.\n * @param {Object} position - Zoom position.\n * @param {number} stepSize - Step size.\n */\nZoomScroll.prototype._zoom = function(delta, position, stepSize) {\n  var canvas = this._canvas;\n\n  var direction = delta > 0 ? 1 : -1;\n\n  var currentLinearZoomLevel = log10(canvas.zoom());\n\n  // snap to a proximate zoom step\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\n\n  // increase or decrease one zoom step in the given direction\n  newLinearZoomLevel += stepSize * direction;\n\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\n  // (e.g. 2 for an absolute x2 zoom)\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\n};\n\n\n/**\n * Toggle the zoom scroll ability via mouse wheel.\n *\n * @param  {Boolean} [newEnabled] new enabled state\n */\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\n\n  var element = this._container;\n  var handleWheel = this._handleWheel;\n\n  var oldEnabled = this._enabled;\n\n  if (typeof newEnabled === 'undefined') {\n    newEnabled = !oldEnabled;\n  }\n\n  // only react on actual changes\n  if (oldEnabled !== newEnabled) {\n\n    // add or remove wheel listener based on\n    // changed enabled state\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\n  }\n\n  this._enabled = newEnabled;\n\n  return newEnabled;\n};\n\n\nZoomScroll.prototype._init = function(newEnabled) {\n  this.toggle(newEnabled);\n};\n"]},"metadata":{},"sourceType":"module"}