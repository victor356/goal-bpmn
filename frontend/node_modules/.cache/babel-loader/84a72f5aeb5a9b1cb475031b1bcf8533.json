{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\n/**\n * BPMN specific create boundary event behavior\n */\n\nexport default function CreateBoundaryEventBehavior(eventBus, modeling, elementFactory, bpmnFactory) {\n  CommandInterceptor.call(this, eventBus);\n  /**\n   * replace intermediate event with boundary event when\n   * attaching it to a shape\n   */\n\n  this.preExecute('shape.create', function (context) {\n    var shape = context.shape,\n        host = context.host,\n        businessObject,\n        boundaryEvent;\n    var attrs = {\n      cancelActivity: true\n    };\n\n    if (host && is(shape, 'bpmn:IntermediateThrowEvent')) {\n      attrs.attachedToRef = host.businessObject;\n      businessObject = bpmnFactory.create('bpmn:BoundaryEvent', attrs);\n      boundaryEvent = {\n        type: 'bpmn:BoundaryEvent',\n        businessObject: businessObject\n      };\n      context.shape = elementFactory.createShape(boundaryEvent);\n    }\n  }, true);\n}\nCreateBoundaryEventBehavior.$inject = ['eventBus', 'modeling', 'elementFactory', 'bpmnFactory'];\ninherits(CreateBoundaryEventBehavior, CommandInterceptor);","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/behavior/CreateBoundaryEventBehavior.js"],"names":["inherits","CommandInterceptor","is","CreateBoundaryEventBehavior","eventBus","modeling","elementFactory","bpmnFactory","call","preExecute","context","shape","host","businessObject","boundaryEvent","attrs","cancelActivity","attachedToRef","create","type","createShape","$inject"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,EAAT,QAAmB,yBAAnB;AAGA;AACA;AACA;;AACA,eAAe,SAASC,2BAAT,CACXC,QADW,EACDC,QADC,EACSC,cADT,EAEXC,WAFW,EAEE;AAEfN,EAAAA,kBAAkB,CAACO,IAAnB,CAAwB,IAAxB,EAA8BJ,QAA9B;AAEA;AACF;AACA;AACA;;AAEE,OAAKK,UAAL,CAAgB,cAAhB,EAAgC,UAASC,OAAT,EAAkB;AAChD,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QACIC,IAAI,GAAGF,OAAO,CAACE,IADnB;AAAA,QAEIC,cAFJ;AAAA,QAGIC,aAHJ;AAKA,QAAIC,KAAK,GAAG;AACVC,MAAAA,cAAc,EAAE;AADN,KAAZ;;AAIA,QAAIJ,IAAI,IAAIV,EAAE,CAACS,KAAD,EAAQ,6BAAR,CAAd,EAAsD;AACpDI,MAAAA,KAAK,CAACE,aAAN,GAAsBL,IAAI,CAACC,cAA3B;AAEAA,MAAAA,cAAc,GAAGN,WAAW,CAACW,MAAZ,CAAmB,oBAAnB,EAAyCH,KAAzC,CAAjB;AAEAD,MAAAA,aAAa,GAAG;AACdK,QAAAA,IAAI,EAAE,oBADQ;AAEdN,QAAAA,cAAc,EAAEA;AAFF,OAAhB;AAKAH,MAAAA,OAAO,CAACC,KAAR,GAAgBL,cAAc,CAACc,WAAf,CAA2BN,aAA3B,CAAhB;AACD;AACF,GAtBD,EAsBG,IAtBH;AAuBD;AAEDX,2BAA2B,CAACkB,OAA5B,GAAsC,CACpC,UADoC,EAEpC,UAFoC,EAGpC,gBAHoC,EAIpC,aAJoC,CAAtC;AAOArB,QAAQ,CAACG,2BAAD,EAA8BF,kBAA9B,CAAR","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\n\n/**\n * BPMN specific create boundary event behavior\n */\nexport default function CreateBoundaryEventBehavior(\n    eventBus, modeling, elementFactory,\n    bpmnFactory) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * replace intermediate event with boundary event when\n   * attaching it to a shape\n   */\n\n  this.preExecute('shape.create', function(context) {\n    var shape = context.shape,\n        host = context.host,\n        businessObject,\n        boundaryEvent;\n\n    var attrs = {\n      cancelActivity: true\n    };\n\n    if (host && is(shape, 'bpmn:IntermediateThrowEvent')) {\n      attrs.attachedToRef = host.businessObject;\n\n      businessObject = bpmnFactory.create('bpmn:BoundaryEvent', attrs);\n\n      boundaryEvent = {\n        type: 'bpmn:BoundaryEvent',\n        businessObject: businessObject\n      };\n\n      context.shape = elementFactory.createShape(boundaryEvent);\n    }\n  }, true);\n}\n\nCreateBoundaryEventBehavior.$inject = [\n  'eventBus',\n  'modeling',\n  'elementFactory',\n  'bpmnFactory'\n];\n\ninherits(CreateBoundaryEventBehavior, CommandInterceptor);\n"]},"metadata":{},"sourceType":"module"}