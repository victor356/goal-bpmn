{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar PropertiesActivator = require('../../PropertiesActivator');\n\nvar asyncCapableHelper = require('../../helper/AsyncCapableHelper'),\n    ImplementationTypeHelper = require('../../helper/ImplementationTypeHelper');\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is; // bpmn properties\n\n\nvar processProps = require('../bpmn/parts/ProcessProps'),\n    eventProps = require('../bpmn/parts/EventProps'),\n    linkProps = require('../bpmn/parts/LinkProps'),\n    documentationProps = require('../bpmn/parts/DocumentationProps'),\n    idProps = require('../bpmn/parts/IdProps'),\n    nameProps = require('../bpmn/parts/NameProps'),\n    executableProps = require('../bpmn/parts/ExecutableProps'); // camunda properties\n\n\nvar serviceTaskDelegateProps = require('./parts/ServiceTaskDelegateProps'),\n    userTaskProps = require('./parts/UserTaskProps'),\n    asynchronousContinuationProps = require('./parts/AsynchronousContinuationProps'),\n    callActivityProps = require('./parts/CallActivityProps'),\n    multiInstanceProps = require('./parts/MultiInstanceLoopProps'),\n    conditionalProps = require('./parts/ConditionalProps'),\n    scriptProps = require('./parts/ScriptTaskProps'),\n    formProps = require('./parts/FormProps'),\n    startEventInitiator = require('./parts/StartEventInitiator'),\n    variableMapping = require('./parts/VariableMappingProps'),\n    versionTag = require('./parts/VersionTagProps');\n\nvar listenerProps = require('./parts/ListenerProps'),\n    listenerDetails = require('./parts/ListenerDetailProps'),\n    listenerFields = require('./parts/ListenerFieldInjectionProps');\n\nvar elementTemplateChooserProps = require('./element-templates/parts/ChooserProps'),\n    elementTemplateCustomProps = require('./element-templates/parts/CustomProps'); // Input/Output\n\n\nvar inputOutput = require('./parts/InputOutputProps'),\n    inputOutputParameter = require('./parts/InputOutputParameterProps'); // Connector\n\n\nvar connectorDetails = require('./parts/ConnectorDetailProps'),\n    connectorInputOutput = require('./parts/ConnectorInputOutputProps'),\n    connectorInputOutputParameter = require('./parts/ConnectorInputOutputParameterProps'); // properties\n\n\nvar properties = require('./parts/PropertiesProps'); // job configuration\n\n\nvar jobConfiguration = require('./parts/JobConfigurationProps'); // history time to live\n\n\nvar historyTimeToLive = require('./parts/HistoryTimeToLiveProps'); // candidate starter groups/users\n\n\nvar candidateStarter = require('./parts/CandidateStarterProps'); // tasklist\n\n\nvar tasklist = require('./parts/TasklistProps'); // external task configuration\n\n\nvar externalTaskConfiguration = require('./parts/ExternalTaskConfigurationProps'); // field injection\n\n\nvar fieldInjections = require('./parts/FieldInjectionProps');\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    eventDefinitionHelper = require('../../helper/EventDefinitionHelper'),\n    implementationTypeHelper = require('../../helper/ImplementationTypeHelper'); // helpers ////////////////////////////////////////\n\n\nvar isExternalTaskPriorityEnabled = function (element) {\n  var businessObject = getBusinessObject(element); // show only if element is a process, a participant ...\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    return true;\n  }\n\n  var externalBo = ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element),\n      isExternalTask = ImplementationTypeHelper.getImplementationType(externalBo) === 'external'; // ... or an external task with selected external implementation type\n\n  return !!ImplementationTypeHelper.isExternalCapable(externalBo) && isExternalTask;\n};\n\nvar isJobConfigEnabled = function (element) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    return true;\n  } // async behavior\n\n\n  var bo = getBusinessObject(element);\n\n  if (asyncCapableHelper.isAsyncBefore(bo) || asyncCapableHelper.isAsyncAfter(bo)) {\n    return true;\n  } // timer definition\n\n\n  if (is(element, 'bpmn:Event')) {\n    return !!eventDefinitionHelper.getTimerEventDefinition(element);\n  }\n\n  return false;\n};\n\nvar getInputOutputParameterLabel = function (param, translate) {\n  if (is(param, 'camunda:InputParameter')) {\n    return translate('Input Parameter');\n  }\n\n  if (is(param, 'camunda:OutputParameter')) {\n    return translate('Output Parameter');\n  }\n\n  return '';\n};\n\nvar getListenerLabel = function (param, translate) {\n  if (is(param, 'camunda:ExecutionListener')) {\n    return translate('Execution Listener');\n  }\n\n  if (is(param, 'camunda:TaskListener')) {\n    return translate('Task Listener');\n  }\n\n  return '';\n};\n\nvar PROCESS_KEY_HINT = 'This maps to the process definition key.';\n\nfunction createGeneralTabGroups(element, bpmnFactory, elementRegistry, elementTemplates, translate) {\n  // refer to target element for external labels\n  element = element.labelTarget || element;\n  var generalGroup = {\n    id: 'general',\n    label: translate('General'),\n    entries: []\n  };\n  var idOptions;\n  var processOptions;\n\n  if (is(element, 'bpmn:Process')) {\n    idOptions = {\n      description: PROCESS_KEY_HINT\n    };\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    processOptions = {\n      processIdDescription: PROCESS_KEY_HINT\n    };\n  }\n\n  idProps(generalGroup, element, translate, idOptions);\n  nameProps(generalGroup, element, translate);\n  processProps(generalGroup, element, translate, processOptions);\n  versionTag(generalGroup, element, translate);\n  executableProps(generalGroup, element, translate);\n  elementTemplateChooserProps(generalGroup, element, elementTemplates, translate);\n  var customFieldsGroups = elementTemplateCustomProps(element, elementTemplates, bpmnFactory, translate);\n  var detailsGroup = {\n    id: 'details',\n    label: translate('Details'),\n    entries: []\n  };\n  serviceTaskDelegateProps(detailsGroup, element, bpmnFactory, translate);\n  userTaskProps(detailsGroup, element, translate);\n  scriptProps(detailsGroup, element, bpmnFactory, translate);\n  linkProps(detailsGroup, element, translate);\n  callActivityProps(detailsGroup, element, bpmnFactory, translate);\n  eventProps(detailsGroup, element, bpmnFactory, elementRegistry, translate);\n  conditionalProps(detailsGroup, element, bpmnFactory, translate);\n  startEventInitiator(detailsGroup, element, translate); // this must be the last element of the details group!\n\n  var multiInstanceGroup = {\n    id: 'multiInstance',\n    label: translate('Multi Instance'),\n    entries: []\n  };\n  multiInstanceProps(multiInstanceGroup, element, bpmnFactory, translate);\n  var asyncGroup = {\n    id: 'async',\n    label: translate('Asynchronous Continuations'),\n    entries: []\n  };\n  asynchronousContinuationProps(asyncGroup, element, bpmnFactory, translate);\n  var jobConfigurationGroup = {\n    id: 'jobConfiguration',\n    label: translate('Job Configuration'),\n    entries: [],\n    enabled: isJobConfigEnabled\n  };\n  jobConfiguration(jobConfigurationGroup, element, bpmnFactory, translate);\n  var externalTaskGroup = {\n    id: 'externalTaskConfiguration',\n    label: translate('External Task Configuration'),\n    entries: [],\n    enabled: isExternalTaskPriorityEnabled\n  };\n  externalTaskConfiguration(externalTaskGroup, element, bpmnFactory, translate);\n  var candidateStarterGroup = {\n    id: 'candidateStarterConfiguration',\n    label: translate('Candidate Starter Configuration'),\n    entries: []\n  };\n  candidateStarter(candidateStarterGroup, element, bpmnFactory, translate);\n  var historyTimeToLiveGroup = {\n    id: 'historyConfiguration',\n    label: translate('History Configuration'),\n    entries: []\n  };\n  historyTimeToLive(historyTimeToLiveGroup, element, bpmnFactory, translate);\n  var tasklistGroup = {\n    id: 'tasklist',\n    label: translate('Tasklist Configuration'),\n    entries: []\n  };\n  tasklist(tasklistGroup, element, bpmnFactory, translate);\n  var documentationGroup = {\n    id: 'documentation',\n    label: translate('Documentation'),\n    entries: []\n  };\n  documentationProps(documentationGroup, element, bpmnFactory, translate);\n  var groups = [];\n  groups.push(generalGroup);\n  customFieldsGroups.forEach(function (group) {\n    groups.push(group);\n  });\n  groups.push(detailsGroup);\n  groups.push(externalTaskGroup);\n  groups.push(multiInstanceGroup);\n  groups.push(asyncGroup);\n  groups.push(jobConfigurationGroup);\n  groups.push(candidateStarterGroup);\n  groups.push(historyTimeToLiveGroup);\n  groups.push(tasklistGroup);\n  groups.push(documentationGroup);\n  return groups;\n}\n\nfunction createVariablesTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var variablesGroup = {\n    id: 'variables',\n    label: translate('Variables'),\n    entries: []\n  };\n  variableMapping(variablesGroup, element, bpmnFactory, translate);\n  return [variablesGroup];\n}\n\nfunction createFormsTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var formGroup = {\n    id: 'forms',\n    label: translate('Forms'),\n    entries: []\n  };\n  formProps(formGroup, element, bpmnFactory, translate);\n  return [formGroup];\n}\n\nfunction createListenersTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var listenersGroup = {\n    id: 'listeners',\n    label: translate('Listeners'),\n    entries: []\n  };\n  var options = listenerProps(listenersGroup, element, bpmnFactory, translate);\n  var listenerDetailsGroup = {\n    id: 'listener-details',\n    entries: [],\n    enabled: function (element, node) {\n      return options.getSelectedListener(element, node);\n    },\n    label: function (element, node) {\n      var param = options.getSelectedListener(element, node);\n      return getListenerLabel(param, translate);\n    }\n  };\n  listenerDetails(listenerDetailsGroup, element, bpmnFactory, options, translate);\n  var listenerFieldsGroup = {\n    id: 'listener-fields',\n    label: translate('Field Injection'),\n    entries: [],\n    enabled: function (element, node) {\n      return options.getSelectedListener(element, node);\n    }\n  };\n  listenerFields(listenerFieldsGroup, element, bpmnFactory, options, translate);\n  return [listenersGroup, listenerDetailsGroup, listenerFieldsGroup];\n}\n\nfunction createInputOutputTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var inputOutputGroup = {\n    id: 'input-output',\n    label: translate('Parameters'),\n    entries: []\n  };\n  var options = inputOutput(inputOutputGroup, element, bpmnFactory, translate);\n  var inputOutputParameterGroup = {\n    id: 'input-output-parameter',\n    entries: [],\n    enabled: function (element, node) {\n      return options.getSelectedParameter(element, node);\n    },\n    label: function (element, node) {\n      var param = options.getSelectedParameter(element, node);\n      return getInputOutputParameterLabel(param, translate);\n    }\n  };\n  inputOutputParameter(inputOutputParameterGroup, element, bpmnFactory, options, translate);\n  return [inputOutputGroup, inputOutputParameterGroup];\n}\n\nfunction createConnectorTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var connectorDetailsGroup = {\n    id: 'connector-details',\n    label: translate('Details'),\n    entries: []\n  };\n  connectorDetails(connectorDetailsGroup, element, bpmnFactory, translate);\n  var connectorInputOutputGroup = {\n    id: 'connector-input-output',\n    label: translate('Input/Output'),\n    entries: []\n  };\n  var options = connectorInputOutput(connectorInputOutputGroup, element, bpmnFactory, translate);\n  var connectorInputOutputParameterGroup = {\n    id: 'connector-input-output-parameter',\n    entries: [],\n    enabled: function (element, node) {\n      return options.getSelectedParameter(element, node);\n    },\n    label: function (element, node) {\n      var param = options.getSelectedParameter(element, node);\n      return getInputOutputParameterLabel(param, translate);\n    }\n  };\n  connectorInputOutputParameter(connectorInputOutputParameterGroup, element, bpmnFactory, options, translate);\n  return [connectorDetailsGroup, connectorInputOutputGroup, connectorInputOutputParameterGroup];\n}\n\nfunction createFieldInjectionsTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var fieldGroup = {\n    id: 'field-injections-properties',\n    label: translate('Field Injections'),\n    entries: []\n  };\n  fieldInjections(fieldGroup, element, bpmnFactory, translate);\n  return [fieldGroup];\n}\n\nfunction createExtensionElementsGroups(element, bpmnFactory, elementRegistry, translate) {\n  var propertiesGroup = {\n    id: 'extensionElements-properties',\n    label: translate('Properties'),\n    entries: []\n  };\n  properties(propertiesGroup, element, bpmnFactory, translate);\n  return [propertiesGroup];\n} // Camunda Properties Provider /////////////////////////////////////\n\n/**\n * A properties provider for Camunda related properties.\n *\n * @param {EventBus} eventBus\n * @param {BpmnFactory} bpmnFactory\n * @param {ElementRegistry} elementRegistry\n * @param {ElementTemplates} elementTemplates\n */\n\n\nfunction CamundaPropertiesProvider(eventBus, bpmnFactory, elementRegistry, elementTemplates, translate) {\n  PropertiesActivator.call(this, eventBus);\n\n  this.getTabs = function (element) {\n    var generalTab = {\n      id: 'general',\n      label: translate('General'),\n      groups: createGeneralTabGroups(element, bpmnFactory, elementRegistry, elementTemplates, translate)\n    };\n    var variablesTab = {\n      id: 'variables',\n      label: translate('Variables'),\n      groups: createVariablesTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n    var formsTab = {\n      id: 'forms',\n      label: translate('Forms'),\n      groups: createFormsTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n    var listenersTab = {\n      id: 'listeners',\n      label: translate('Listeners'),\n      groups: createListenersTabGroups(element, bpmnFactory, elementRegistry, translate),\n      enabled: function (element) {\n        return !eventDefinitionHelper.getLinkEventDefinition(element) || !is(element, 'bpmn:IntermediateThrowEvent') && eventDefinitionHelper.getLinkEventDefinition(element);\n      }\n    };\n    var inputOutputTab = {\n      id: 'input-output',\n      label: translate('Input/Output'),\n      groups: createInputOutputTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n    var connectorTab = {\n      id: 'connector',\n      label: translate('Connector'),\n      groups: createConnectorTabGroups(element, bpmnFactory, elementRegistry, translate),\n      enabled: function (element) {\n        var bo = implementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n        return bo && implementationTypeHelper.getImplementationType(bo) === 'connector';\n      }\n    };\n    var fieldInjectionsTab = {\n      id: 'field-injections',\n      label: translate('Field Injections'),\n      groups: createFieldInjectionsTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n    var extensionsTab = {\n      id: 'extensionElements',\n      label: translate('Extensions'),\n      groups: createExtensionElementsGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n    return [generalTab, variablesTab, connectorTab, formsTab, listenersTab, inputOutputTab, fieldInjectionsTab, extensionsTab];\n  };\n}\n\nCamundaPropertiesProvider.$inject = ['eventBus', 'bpmnFactory', 'elementRegistry', 'elementTemplates', 'translate'];\ninherits(CamundaPropertiesProvider, PropertiesActivator);\nmodule.exports = CamundaPropertiesProvider;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/CamundaPropertiesProvider.js"],"names":["inherits","require","PropertiesActivator","asyncCapableHelper","ImplementationTypeHelper","is","processProps","eventProps","linkProps","documentationProps","idProps","nameProps","executableProps","serviceTaskDelegateProps","userTaskProps","asynchronousContinuationProps","callActivityProps","multiInstanceProps","conditionalProps","scriptProps","formProps","startEventInitiator","variableMapping","versionTag","listenerProps","listenerDetails","listenerFields","elementTemplateChooserProps","elementTemplateCustomProps","inputOutput","inputOutputParameter","connectorDetails","connectorInputOutput","connectorInputOutputParameter","properties","jobConfiguration","historyTimeToLive","candidateStarter","tasklist","externalTaskConfiguration","fieldInjections","getBusinessObject","eventDefinitionHelper","implementationTypeHelper","isExternalTaskPriorityEnabled","element","businessObject","get","externalBo","getServiceTaskLikeBusinessObject","isExternalTask","getImplementationType","isExternalCapable","isJobConfigEnabled","bo","isAsyncBefore","isAsyncAfter","getTimerEventDefinition","getInputOutputParameterLabel","param","translate","getListenerLabel","PROCESS_KEY_HINT","createGeneralTabGroups","bpmnFactory","elementRegistry","elementTemplates","labelTarget","generalGroup","id","label","entries","idOptions","processOptions","description","processIdDescription","customFieldsGroups","detailsGroup","multiInstanceGroup","asyncGroup","jobConfigurationGroup","enabled","externalTaskGroup","candidateStarterGroup","historyTimeToLiveGroup","tasklistGroup","documentationGroup","groups","push","forEach","group","createVariablesTabGroups","variablesGroup","createFormsTabGroups","formGroup","createListenersTabGroups","listenersGroup","options","listenerDetailsGroup","node","getSelectedListener","listenerFieldsGroup","createInputOutputTabGroups","inputOutputGroup","inputOutputParameterGroup","getSelectedParameter","createConnectorTabGroups","connectorDetailsGroup","connectorInputOutputGroup","connectorInputOutputParameterGroup","createFieldInjectionsTabGroups","fieldGroup","createExtensionElementsGroups","propertiesGroup","CamundaPropertiesProvider","eventBus","call","getTabs","generalTab","variablesTab","formsTab","listenersTab","getLinkEventDefinition","inputOutputTab","connectorTab","fieldInjectionsTab","extensionsTab","$inject","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar inherits = require('inherits');\n\nvar PropertiesActivator = require('../../PropertiesActivator');\n\nvar asyncCapableHelper = require('../../helper/AsyncCapableHelper'),\n    ImplementationTypeHelper = require('../../helper/ImplementationTypeHelper');\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is;\n\n// bpmn properties\nvar processProps = require('../bpmn/parts/ProcessProps'),\n    eventProps = require('../bpmn/parts/EventProps'),\n    linkProps = require('../bpmn/parts/LinkProps'),\n    documentationProps = require('../bpmn/parts/DocumentationProps'),\n    idProps = require('../bpmn/parts/IdProps'),\n    nameProps = require('../bpmn/parts/NameProps'),\n    executableProps = require('../bpmn/parts/ExecutableProps');\n\n// camunda properties\nvar serviceTaskDelegateProps = require('./parts/ServiceTaskDelegateProps'),\n    userTaskProps = require('./parts/UserTaskProps'),\n    asynchronousContinuationProps = require('./parts/AsynchronousContinuationProps'),\n    callActivityProps = require('./parts/CallActivityProps'),\n    multiInstanceProps = require('./parts/MultiInstanceLoopProps'),\n    conditionalProps = require('./parts/ConditionalProps'),\n    scriptProps = require('./parts/ScriptTaskProps'),\n    formProps = require('./parts/FormProps'),\n    startEventInitiator = require('./parts/StartEventInitiator'),\n    variableMapping = require('./parts/VariableMappingProps'),\n    versionTag = require('./parts/VersionTagProps');\n\nvar listenerProps = require('./parts/ListenerProps'),\n    listenerDetails = require('./parts/ListenerDetailProps'),\n    listenerFields = require('./parts/ListenerFieldInjectionProps');\n\nvar elementTemplateChooserProps = require('./element-templates/parts/ChooserProps'),\n    elementTemplateCustomProps = require('./element-templates/parts/CustomProps');\n\n// Input/Output\nvar inputOutput = require('./parts/InputOutputProps'),\n    inputOutputParameter = require('./parts/InputOutputParameterProps');\n\n// Connector\nvar connectorDetails = require('./parts/ConnectorDetailProps'),\n    connectorInputOutput = require('./parts/ConnectorInputOutputProps'),\n    connectorInputOutputParameter = require('./parts/ConnectorInputOutputParameterProps');\n\n// properties\nvar properties = require('./parts/PropertiesProps');\n\n// job configuration\nvar jobConfiguration = require('./parts/JobConfigurationProps');\n\n// history time to live\nvar historyTimeToLive = require('./parts/HistoryTimeToLiveProps');\n\n// candidate starter groups/users\nvar candidateStarter = require('./parts/CandidateStarterProps');\n\n// tasklist\nvar tasklist = require('./parts/TasklistProps');\n\n// external task configuration\nvar externalTaskConfiguration = require('./parts/ExternalTaskConfigurationProps');\n\n// field injection\nvar fieldInjections = require('./parts/FieldInjectionProps');\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    eventDefinitionHelper = require('../../helper/EventDefinitionHelper'),\n    implementationTypeHelper = require('../../helper/ImplementationTypeHelper');\n\n// helpers ////////////////////////////////////////\n\nvar isExternalTaskPriorityEnabled = function(element) {\n  var businessObject = getBusinessObject(element);\n\n  // show only if element is a process, a participant ...\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    return true;\n  }\n\n  var externalBo = ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element),\n      isExternalTask = ImplementationTypeHelper.getImplementationType(externalBo) === 'external';\n\n  // ... or an external task with selected external implementation type\n  return !!ImplementationTypeHelper.isExternalCapable(externalBo) && isExternalTask;\n};\n\nvar isJobConfigEnabled = function(element) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    return true;\n  }\n\n  // async behavior\n  var bo = getBusinessObject(element);\n  if (asyncCapableHelper.isAsyncBefore(bo) || asyncCapableHelper.isAsyncAfter(bo)) {\n    return true;\n  }\n\n  // timer definition\n  if (is(element, 'bpmn:Event')) {\n    return !!eventDefinitionHelper.getTimerEventDefinition(element);\n  }\n\n  return false;\n};\n\nvar getInputOutputParameterLabel = function(param, translate) {\n\n  if (is(param, 'camunda:InputParameter')) {\n    return translate('Input Parameter');\n  }\n\n  if (is(param, 'camunda:OutputParameter')) {\n    return translate('Output Parameter');\n  }\n\n  return '';\n};\n\nvar getListenerLabel = function(param, translate) {\n\n  if (is(param, 'camunda:ExecutionListener')) {\n    return translate('Execution Listener');\n  }\n\n  if (is(param, 'camunda:TaskListener')) {\n    return translate('Task Listener');\n  }\n\n  return '';\n};\n\nvar PROCESS_KEY_HINT = 'This maps to the process definition key.';\n\nfunction createGeneralTabGroups(element, bpmnFactory, elementRegistry, elementTemplates, translate) {\n\n  // refer to target element for external labels\n  element = element.labelTarget || element;\n\n  var generalGroup = {\n    id: 'general',\n    label: translate('General'),\n    entries: []\n  };\n\n  var idOptions;\n  var processOptions;\n\n  if (is(element, 'bpmn:Process')) {\n    idOptions = { description: PROCESS_KEY_HINT };\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    processOptions = { processIdDescription: PROCESS_KEY_HINT };\n  }\n\n  idProps(generalGroup, element, translate, idOptions);\n  nameProps(generalGroup, element, translate);\n  processProps(generalGroup, element, translate, processOptions);\n  versionTag(generalGroup, element, translate);\n  executableProps(generalGroup, element, translate);\n  elementTemplateChooserProps(generalGroup, element, elementTemplates, translate);\n\n  var customFieldsGroups = elementTemplateCustomProps(element, elementTemplates, bpmnFactory, translate);\n\n  var detailsGroup = {\n    id: 'details',\n    label: translate('Details'),\n    entries: []\n  };\n  serviceTaskDelegateProps(detailsGroup, element, bpmnFactory, translate);\n  userTaskProps(detailsGroup, element, translate);\n  scriptProps(detailsGroup, element, bpmnFactory, translate);\n  linkProps(detailsGroup, element, translate);\n  callActivityProps(detailsGroup, element, bpmnFactory, translate);\n  eventProps(detailsGroup, element, bpmnFactory, elementRegistry, translate);\n  conditionalProps(detailsGroup, element, bpmnFactory, translate);\n  startEventInitiator(detailsGroup, element, translate); // this must be the last element of the details group!\n\n  var multiInstanceGroup = {\n    id: 'multiInstance',\n    label: translate('Multi Instance'),\n    entries: []\n  };\n  multiInstanceProps(multiInstanceGroup, element, bpmnFactory, translate);\n\n  var asyncGroup = {\n    id : 'async',\n    label: translate('Asynchronous Continuations'),\n    entries : []\n  };\n  asynchronousContinuationProps(asyncGroup, element, bpmnFactory, translate);\n\n  var jobConfigurationGroup = {\n    id : 'jobConfiguration',\n    label : translate('Job Configuration'),\n    entries : [],\n    enabled: isJobConfigEnabled\n  };\n  jobConfiguration(jobConfigurationGroup, element, bpmnFactory, translate);\n\n  var externalTaskGroup = {\n    id : 'externalTaskConfiguration',\n    label : translate('External Task Configuration'),\n    entries : [],\n    enabled: isExternalTaskPriorityEnabled\n  };\n  externalTaskConfiguration(externalTaskGroup, element, bpmnFactory, translate);\n\n\n  var candidateStarterGroup = {\n    id: 'candidateStarterConfiguration',\n    label: translate('Candidate Starter Configuration'),\n    entries: []\n  };\n  candidateStarter(candidateStarterGroup, element, bpmnFactory, translate);\n\n  var historyTimeToLiveGroup = {\n    id: 'historyConfiguration',\n    label: translate('History Configuration'),\n    entries: []\n  };\n  historyTimeToLive(historyTimeToLiveGroup, element, bpmnFactory, translate);\n\n  var tasklistGroup = {\n    id: 'tasklist',\n    label: translate('Tasklist Configuration'),\n    entries: []\n  };\n  tasklist(tasklistGroup, element, bpmnFactory, translate);\n\n  var documentationGroup = {\n    id: 'documentation',\n    label: translate('Documentation'),\n    entries: []\n  };\n  documentationProps(documentationGroup, element, bpmnFactory, translate);\n\n  var groups = [];\n  groups.push(generalGroup);\n  customFieldsGroups.forEach(function(group) {\n    groups.push(group);\n  });\n  groups.push(detailsGroup);\n  groups.push(externalTaskGroup);\n  groups.push(multiInstanceGroup);\n  groups.push(asyncGroup);\n  groups.push(jobConfigurationGroup);\n  groups.push(candidateStarterGroup);\n  groups.push(historyTimeToLiveGroup);\n  groups.push(tasklistGroup);\n  groups.push(documentationGroup);\n\n  return groups;\n}\n\nfunction createVariablesTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var variablesGroup = {\n    id : 'variables',\n    label : translate('Variables'),\n    entries: []\n  };\n  variableMapping(variablesGroup, element, bpmnFactory, translate);\n\n  return [\n    variablesGroup\n  ];\n}\n\nfunction createFormsTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var formGroup = {\n    id : 'forms',\n    label : translate('Forms'),\n    entries: []\n  };\n  formProps(formGroup, element, bpmnFactory, translate);\n\n  return [\n    formGroup\n  ];\n}\n\nfunction createListenersTabGroups(element, bpmnFactory, elementRegistry, translate) {\n\n  var listenersGroup = {\n    id : 'listeners',\n    label: translate('Listeners'),\n    entries: []\n  };\n\n  var options = listenerProps(listenersGroup, element, bpmnFactory, translate);\n\n  var listenerDetailsGroup = {\n    id: 'listener-details',\n    entries: [],\n    enabled: function(element, node) {\n      return options.getSelectedListener(element, node);\n    },\n    label: function(element, node) {\n      var param = options.getSelectedListener(element, node);\n      return getListenerLabel(param, translate);\n    }\n  };\n\n  listenerDetails(listenerDetailsGroup, element, bpmnFactory, options, translate);\n\n  var listenerFieldsGroup = {\n    id: 'listener-fields',\n    label: translate('Field Injection'),\n    entries: [],\n    enabled: function(element, node) {\n      return options.getSelectedListener(element, node);\n    }\n  };\n\n  listenerFields(listenerFieldsGroup, element, bpmnFactory, options, translate);\n\n  return [\n    listenersGroup,\n    listenerDetailsGroup,\n    listenerFieldsGroup\n  ];\n}\n\nfunction createInputOutputTabGroups(element, bpmnFactory, elementRegistry, translate) {\n\n  var inputOutputGroup = {\n    id: 'input-output',\n    label: translate('Parameters'),\n    entries: []\n  };\n\n  var options = inputOutput(inputOutputGroup, element, bpmnFactory, translate);\n\n  var inputOutputParameterGroup = {\n    id: 'input-output-parameter',\n    entries: [],\n    enabled: function(element, node) {\n      return options.getSelectedParameter(element, node);\n    },\n    label: function(element, node) {\n      var param = options.getSelectedParameter(element, node);\n      return getInputOutputParameterLabel(param, translate);\n    }\n  };\n\n  inputOutputParameter(inputOutputParameterGroup, element, bpmnFactory, options, translate);\n\n  return [\n    inputOutputGroup,\n    inputOutputParameterGroup\n  ];\n}\n\nfunction createConnectorTabGroups(element, bpmnFactory, elementRegistry, translate) {\n  var connectorDetailsGroup = {\n    id: 'connector-details',\n    label: translate('Details'),\n    entries: []\n  };\n\n  connectorDetails(connectorDetailsGroup, element, bpmnFactory, translate);\n\n  var connectorInputOutputGroup = {\n    id: 'connector-input-output',\n    label: translate('Input/Output'),\n    entries: []\n  };\n\n  var options = connectorInputOutput(connectorInputOutputGroup, element, bpmnFactory, translate);\n\n  var connectorInputOutputParameterGroup = {\n    id: 'connector-input-output-parameter',\n    entries: [],\n    enabled: function(element, node) {\n      return options.getSelectedParameter(element, node);\n    },\n    label: function(element, node) {\n      var param = options.getSelectedParameter(element, node);\n      return getInputOutputParameterLabel(param, translate);\n    }\n  };\n\n  connectorInputOutputParameter(connectorInputOutputParameterGroup, element, bpmnFactory, options, translate);\n\n  return [\n    connectorDetailsGroup,\n    connectorInputOutputGroup,\n    connectorInputOutputParameterGroup\n  ];\n}\n\nfunction createFieldInjectionsTabGroups(element, bpmnFactory, elementRegistry, translate) {\n\n  var fieldGroup = {\n    id: 'field-injections-properties',\n    label: translate('Field Injections'),\n    entries: []\n  };\n\n  fieldInjections(fieldGroup, element, bpmnFactory, translate);\n\n  return [\n    fieldGroup\n  ];\n}\n\nfunction createExtensionElementsGroups(element, bpmnFactory, elementRegistry, translate) {\n\n  var propertiesGroup = {\n    id : 'extensionElements-properties',\n    label: translate('Properties'),\n    entries: []\n  };\n  properties(propertiesGroup, element, bpmnFactory, translate);\n\n  return [\n    propertiesGroup\n  ];\n}\n\n// Camunda Properties Provider /////////////////////////////////////\n\n\n/**\n * A properties provider for Camunda related properties.\n *\n * @param {EventBus} eventBus\n * @param {BpmnFactory} bpmnFactory\n * @param {ElementRegistry} elementRegistry\n * @param {ElementTemplates} elementTemplates\n */\nfunction CamundaPropertiesProvider(eventBus, bpmnFactory, elementRegistry, elementTemplates, translate) {\n\n  PropertiesActivator.call(this, eventBus);\n\n  this.getTabs = function(element) {\n\n    var generalTab = {\n      id: 'general',\n      label: translate('General'),\n      groups: createGeneralTabGroups(\n        element, bpmnFactory,\n        elementRegistry, elementTemplates, translate)\n    };\n\n    var variablesTab = {\n      id: 'variables',\n      label: translate('Variables'),\n      groups: createVariablesTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n\n    var formsTab = {\n      id: 'forms',\n      label: translate('Forms'),\n      groups: createFormsTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n\n    var listenersTab = {\n      id: 'listeners',\n      label: translate('Listeners'),\n      groups: createListenersTabGroups(element, bpmnFactory, elementRegistry, translate),\n      enabled: function(element) {\n        return !eventDefinitionHelper.getLinkEventDefinition(element)\n          || (!is(element, 'bpmn:IntermediateThrowEvent')\n          && eventDefinitionHelper.getLinkEventDefinition(element));\n      }\n    };\n\n    var inputOutputTab = {\n      id: 'input-output',\n      label: translate('Input/Output'),\n      groups: createInputOutputTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n\n    var connectorTab = {\n      id: 'connector',\n      label: translate('Connector'),\n      groups: createConnectorTabGroups(element, bpmnFactory, elementRegistry, translate),\n      enabled: function(element) {\n        var bo = implementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n        return bo && implementationTypeHelper.getImplementationType(bo) === 'connector';\n      }\n    };\n\n    var fieldInjectionsTab = {\n      id: 'field-injections',\n      label: translate('Field Injections'),\n      groups: createFieldInjectionsTabGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n\n    var extensionsTab = {\n      id: 'extensionElements',\n      label: translate('Extensions'),\n      groups: createExtensionElementsGroups(element, bpmnFactory, elementRegistry, translate)\n    };\n\n    return [\n      generalTab,\n      variablesTab,\n      connectorTab,\n      formsTab,\n      listenersTab,\n      inputOutputTab,\n      fieldInjectionsTab,\n      extensionsTab\n    ];\n  };\n\n}\n\nCamundaPropertiesProvider.$inject = [\n  'eventBus',\n  'bpmnFactory',\n  'elementRegistry',\n  'elementTemplates',\n  'translate'\n];\n\ninherits(CamundaPropertiesProvider, PropertiesActivator);\n\nmodule.exports = CamundaPropertiesProvider;\n"]},"metadata":{},"sourceType":"script"}