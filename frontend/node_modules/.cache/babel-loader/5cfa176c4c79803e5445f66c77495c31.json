{"ast":null,"code":"'use strict';\n/**\n * This file contains portions that got extraced from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar has = 'hasOwnProperty',\n    p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig;\n\nfunction is(o, type) {\n  type = String.prototype.toLowerCase.call(type);\n\n  if (type == 'finite') {\n    return isFinite(o);\n  }\n\n  if (type == 'array' && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n    return true;\n  }\n\n  return type == 'null' && o === null || type == typeof o && o !== null || type == 'object' && o === Object(o) || Object.prototype.toString.call(o).slice(8, -1).toLowerCase() == type;\n}\n\nfunction clone(obj) {\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor();\n\n  for (var key in obj) if (obj[has](key)) {\n    res[key] = clone(obj[key]);\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f, scope, postprocessor) {\n  function newf() {\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (cache[has](args)) {\n      repush(count, args);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(scope, arg);\n    return postprocessor ? postprocessor(cache[args]) : cache[args];\n  }\n\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  },\n      data = [];\n\n  if (is(pathString, 'array') && is(pathString[0], 'array')) {\n    // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n    String(pathString).replace(pathCommand, function (a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n      c.replace(pathValues, function (a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      if (name == 'o' && params.length == 1) {\n        data.push([b, params[0]]);\n      }\n\n      if (name == 'r') {\n        data.push([b].concat(params));\n      } else while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function () {\n    for (var key in p) if (p[has](key) && key != ps) {\n      p[key].sleep--;\n      !p[key].sleep && delete p[key];\n    }\n  });\n  return p[ps];\n}\n\nfunction box(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: math.min(width, height) / 2,\n    r2: math.max(width, height) / 2,\n    r0: math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n      mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n      my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n      nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n      ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n      ax = t1 * p1x + t * c1x,\n      ay = t1 * p1y + t * c1y,\n      cx = t1 * c2x + t * p2x,\n      cy = t1 * c2y + t * p2y,\n      alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n}\n\nfunction bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!is(p1x, 'array')) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveBBox.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n      Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator,\n      py = ny / denominator,\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n    return;\n  }\n\n  return {\n    x: px,\n    y: py\n  };\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = ~~(l1 / 5),\n      n2 = ~~(l2 / 5),\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: p.x,\n      y: p.y,\n      t: i / n1\n    });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({\n      x: p.x,\n      y: p.y,\n      t: i / n2\n    });\n  }\n\n  for (i = 0; i < n1; i++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n        if (xy[is.x.toFixed(0)] == is.y.toFixed(0)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(0)] = is.y.toFixed(0);\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * //\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\n\n\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n  var x1,\n      y1,\n      x2,\n      y2,\n      x1m,\n      y1m,\n      x2m,\n      y2m,\n      bez1,\n      bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction rectPath(x, y, w, h, r) {\n  if (r) {\n    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.toString = pathToString;\n  return res;\n}\n\nfunction ellipsePath(x, y, rx, ry, a) {\n  if (a == null && ry == null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a != null) {\n    var rad = Math.PI / 180,\n        x1 = x + rx * Math.cos(-ry * rad),\n        x2 = x + rx * Math.cos(-a * rad),\n        y1 = y + rx * Math.sin(-ry * rad),\n        y2 = y + rx * Math.sin(-a * rad),\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n  }\n\n  res.toString = pathToString;\n  return res;\n}\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) {\n    // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length == 3 && pathArray[0][0] == 'M' && pathArray[1][0].toUpperCase() == 'R' && pathArray[2][0].toUpperCase() == 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n\n        case 'R':\n          var dots = [x, y].concat(pa.slice(1));\n\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n\n          res.pop();\n          res = res.concat(catmulRomToBezier(dots, crz));\n          break;\n\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n\n      }\n    } else if (pa0 == 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmulRomToBezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 == 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 != 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n\n        case 'H':\n          x = r[1];\n          break;\n\n        case 'V':\n          y = r[1];\n          break;\n\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n  return res;\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function (x, y, rad) {\n    var X = x * math.cos(rad) - y * math.sin(rad),\n        Y = x * math.sin(rad) + y * math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n} // http://schepers.cc/getting-to-the-point\n\n\nfunction catmulRomToBezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 == i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 == i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 == i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n\n  return d;\n} // Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\n\n\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a,\n      b,\n      c,\n      t,\n      t1,\n      t2,\n      b2ac,\n      sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: mmin.apply(0, bounds[0]),\n      y: mmin.apply(0, bounds[1])\n    },\n    max: {\n      x: mmax.apply(0, bounds[0]),\n      y: mmax.apply(0, bounds[1])\n    }\n  };\n}\n\nfunction pathToCurve(path, path2) {\n  var pth = !path2 && paths(path);\n\n  if (!path2 && pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  },\n      attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  },\n      processPath = function (path, d, pcom) {\n    var nx, ny;\n\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n\n      case 'A':\n        path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n\n      case 'S':\n        if (pcom == 'C' || pcom == 'S') {\n          // In 'S' case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n\n      case 'T':\n        if (pcom == 'Q' || pcom == 'T') {\n          // In 'T' case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n          d.qy = d.y * 2 - d.qy; // to case 'S'.\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n\n        path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n\n      case 'L':\n        path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n        break;\n\n      case 'H':\n        path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n        break;\n\n      case 'V':\n        path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n        break;\n\n      case 'Z':\n        path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n        break;\n    }\n\n    return path;\n  },\n      fixArc = function (pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n\n        p2 && (pcoms2[i] = 'A'); // the same as above\n\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n\n      pp.splice(i, 1);\n      ii = mmax(p.length, p2 && p2.length || 0);\n    }\n  },\n      fixM = function (path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = mmax(p.length, p2 && p2.length || 0);\n    }\n  },\n      pcoms1 = [],\n      // path commands of original path p\n  pcoms2 = [],\n      // path commands of original path p2\n  pfirst = '',\n      // temporary holder for original path command\n  pcom = ''; // holder for previous path command of original path\n\n\n  for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n      {\n        pcoms1[i] = pfirst; // Save current path command\n\n        i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n      }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst != 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != 'A' && pfirst == 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  if (!p2) {\n    pth.curve = pathClone(p);\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\nmodule.exports = findPathIntersections;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/path-intersection/intersect.js"],"names":["has","p2s","toFloat","parseFloat","math","Math","PI","mmin","min","mmax","max","pow","abs","pathCommand","pathValues","is","o","type","String","prototype","toLowerCase","call","isFinite","Array","isArray","Object","toString","slice","clone","obj","res","constructor","key","repush","array","item","i","ii","length","push","splice","cacher","f","scope","postprocessor","newf","arg","arguments","args","join","cache","count","shift","apply","parsePathString","pathString","pth","paths","arr","paramCounts","a","c","h","l","m","r","q","s","t","v","u","z","data","replace","b","params","name","concat","ps","p","sleep","setTimeout","box","x","y","width","height","w","x2","y2","cx","cy","r1","r2","r0","sqrt","path","rectPath","vb","pathToString","pathClone","pathArray","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","atan2","n","start","end","bezierBBox","bbox","curveBBox","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","bezlen","x1","y1","x3","y3","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersectLines","denominator","px","py","px2","toFixed","py2","findBezierIntersections","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","xy","j","di","di1","dj","dj1","ci","cj","findPathIntersections","path1","path2","pathToCurve","x1m","y1m","x2m","y2m","pi","jj","pj","intr","k","kk","segment1","segment2","ellipsePath","rx","ry","rad","cos","sin","pathToAbsolute","pa0","crz","toUpperCase","pa","dots","pop","catmulRomToBezier","lineToCurve","qubicToCurve","_13","_23","arcToCurve","angle","large_arc_flag","sweep_flag","recursive","_120","rotate","X","Y","rx2","ry2","f1","asin","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","split","newres","crp","d","iLen","x0","y0","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","curve","attrs","bx","by","qx","qy","attrs2","processPath","pcom","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * This file contains portions that got extraced from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar has = 'hasOwnProperty',\n    p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig;\n\nfunction is(o, type) {\n  type = String.prototype.toLowerCase.call(type);\n\n  if (type == 'finite') {\n    return isFinite(o);\n  }\n\n  if (type == 'array' && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n    return true;\n  }\n\n  return (type == 'null' && o === null) ||\n         (type == typeof o && o !== null) ||\n         (type == 'object' && o === Object(o)) ||\n         Object.prototype.toString.call(o).slice(8, -1).toLowerCase() == type;\n}\n\nfunction clone(obj) {\n\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor;\n\n  for (var key in obj) if (obj[has](key)) {\n    res[key] = clone(obj[key]);\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f, scope, postprocessor) {\n\n  function newf() {\n\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (cache[has](args)) {\n      repush(count, args);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(scope, arg);\n\n    return postprocessor ? postprocessor(cache[args]) : cache[args];\n  }\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },\n      data = [];\n\n  if (is(pathString, 'array') && is(pathString[0], 'array')) { // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n\n    String(pathString).replace(pathCommand, function(a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n\n      c.replace(pathValues, function(a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      if (name == 'o' && params.length == 1) {\n        data.push([b, params[0]]);\n      }\n\n      if (name == 'r') {\n        data.push([b].concat(params));\n      } else while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function() {\n    for (var key in p) if (p[has](key) && key != ps) {\n      p[key].sleep--;\n      !p[key].sleep && delete p[key];\n    }\n  });\n\n  return p[ps];\n}\n\nfunction box(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: math.min(width, height) / 2,\n    r2: math.max(width, height) / 2,\n    r0: math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n      mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n      my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n      nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n      ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n      ax = t1 * p1x + t * c1x,\n      ay = t1 * p1y + t * c1y,\n      cx = t1 * c2x + t * p2x,\n      cy = t1 * c2y + t * p2y,\n      alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\n  return {\n    x: x,\n    y: y,\n    m: { x: mx, y: my },\n    n: { x: nx, y: ny },\n    start: { x: ax, y: ay },\n    end: { x: cx, y: cy },\n    alpha: alpha\n  };\n}\n\nfunction bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\n  if (!is(p1x, 'array')) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveBBox.apply(null, p1x);\n\n  return box(\n    bbox.min.x,\n    bbox.min.y,\n    bbox.max.x - bbox.min.x,\n    bbox.max.y - bbox.min.y\n  );\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n  if (\n    mmax(x1, x2) < mmin(x3, x4) ||\n      mmin(x1, x2) > mmax(x3, x4) ||\n      mmax(y1, y2) < mmin(y3, y4) ||\n      mmin(y1, y2) > mmax(y3, y4)\n  ) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator,\n      py = ny / denominator,\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (\n    px2 < +mmin(x1, x2).toFixed(2) ||\n      px2 > +mmax(x1, x2).toFixed(2) ||\n      px2 < +mmin(x3, x4).toFixed(2) ||\n      px2 > +mmax(x3, x4).toFixed(2) ||\n      py2 < +mmin(y1, y2).toFixed(2) ||\n      py2 > +mmax(y1, y2).toFixed(2) ||\n      py2 < +mmin(y3, y4).toFixed(2) ||\n      py2 > +mmax(y3, y4).toFixed(2)\n  ) {\n    return;\n  }\n\n  return { x: px, y: py };\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = ~~(l1 / 5),\n      n2 = ~~(l2 / 5),\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\n  }\n\n  for (i = 0; i < n1; i++) {\n\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n\n        if (xy[is.x.toFixed(0)] == is.y.toFixed(0)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(0)] = is.y.toFixed(0);\n\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * //\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\nfunction rectPath(x, y, w, h, r) {\n  if (r) {\n    return [\n      ['M', +x + (+r), y],\n      ['l', w - r * 2, 0],\n      ['a', r, r, 0, 0, 1, r, r],\n      ['l', 0, h - r * 2],\n      ['a', r, r, 0, 0, 1, -r, r],\n      ['l', r * 2 - w, 0],\n      ['a', r, r, 0, 0, 1, -r, -r],\n      ['l', 0, r * 2 - h],\n      ['a', r, r, 0, 0, 1, r, -r],\n      ['z']\n    ];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.toString = pathToString;\n\n  return res;\n}\n\nfunction ellipsePath(x, y, rx, ry, a) {\n  if (a == null && ry == null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a != null) {\n    var rad = Math.PI / 180,\n        x1 = x + rx * Math.cos(-ry * rad),\n        x2 = x + rx * Math.cos(-a * rad),\n        y1 = y + rx * Math.sin(-ry * rad),\n        y2 = y + rx * Math.sin(-a * rad),\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [\n      ['M', x, y],\n      ['m', 0, -ry],\n      ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\n      ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\n      ['z']\n    ];\n  }\n\n  res.toString = pathToString;\n\n  return res;\n}\n\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) { // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length == 3 &&\n      pathArray[0][0] == 'M' &&\n      pathArray[1][0].toUpperCase() == 'R' &&\n      pathArray[2][0].toUpperCase() == 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n      case 'A':\n        r[1] = pa[1];\n        r[2] = pa[2];\n        r[3] = pa[3];\n        r[4] = pa[4];\n        r[5] = pa[5];\n        r[6] = +pa[6] + x;\n        r[7] = +pa[7] + y;\n        break;\n      case 'V':\n        r[1] = +pa[1] + y;\n        break;\n      case 'H':\n        r[1] = +pa[1] + x;\n        break;\n      case 'R':\n        var dots = [x, y].concat(pa.slice(1));\n\n        for (var j = 2, jj = dots.length; j < jj; j++) {\n          dots[j] = +dots[j] + x;\n          dots[++j] = +dots[j] + y;\n        }\n\n        res.pop();\n        res = res.concat(catmulRomToBezier(dots, crz));\n        break;\n      case 'O':\n        res.pop();\n        dots = ellipsePath(x, y, pa[1], pa[2]);\n        dots.push(dots[0]);\n        res = res.concat(dots);\n        break;\n      case 'U':\n        res.pop();\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n        r = ['U'].concat(res[res.length - 1].slice(-2));\n        break;\n      case 'M':\n        mx = +pa[1] + x;\n        my = +pa[2] + y;\n      default:\n\n        for (j = 1, jj = pa.length; j < jj; j++) {\n          r[j] = +pa[j] + ((j % 2) ? x : y);\n        }\n      }\n    } else if (pa0 == 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmulRomToBezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 == 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 != 'O') {\n      switch (r[0]) {\n      case 'Z':\n        x = +mx;\n        y = +my;\n        break;\n      case 'H':\n        x = r[1];\n        break;\n      case 'V':\n        y = r[1];\n        break;\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n      }\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n\n  return res;\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [\n    x1, y1, x2,\n    y2, x2, y2\n  ];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2\n  ];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function(x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n\n        return { x: X, y: Y };\n      });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n}\n\n// http://schepers.cc/getting-to-the-point\nfunction catmulRomToBezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [\n      { x: +crp[i - 2], y: +crp[i - 1] },\n      { x: +crp[i], y: +crp[i + 1] },\n      { x: +crp[i + 2], y: +crp[i + 3] },\n      { x: +crp[i + 4], y: +crp[i + 5] }\n    ];\n\n    if (z) {\n\n      if (!i) {\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n      } else if (iLen - 4 == i) {\n        p[3] = { x: +crp[0], y: +crp[1] };\n      } else if (iLen - 2 == i) {\n        p[2] = { x: +crp[0], y: +crp[1] };\n        p[3] = { x: +crp[2], y: +crp[3] };\n      }\n\n    } else {\n\n      if (iLen - 4 == i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = { x: +crp[i], y: +crp[i + 1] };\n      }\n\n    }\n\n    d.push(['C',\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      (p[1].y + 6*p[2].y - p[3].y) / 6,\n      p[2].x,\n      p[2].y\n    ]);\n  }\n\n  return d;\n}\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    min: { x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1]) },\n    max: { x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1]) }\n  };\n}\n\nfunction pathToCurve(path, path2) {\n  var pth = !path2 && paths(path);\n\n  if (!path2 && pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      processPath = function(path, d, pcom) {\n        var nx, ny;\n\n        if (!path) {\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pcom == 'C' || pcom == 'S') {\n            // In 'S' case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx;\n            // And reflect the previous\n            ny = d.y * 2 - d.by;\n            // command's control point relative to the current point.\n          }\n          else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pcom == 'Q' || pcom == 'T') {\n            // In 'T' case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx;\n            // And make a reflection similar\n            d.qy = d.y * 2 - d.qy;\n            // to case 'S'.\n          }\n          else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n          break;\n        }\n\n        return path;\n      },\n\n      fixArc = function(pp, i) {\n\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n            p2 && (pcoms2[i] = 'A'); // the same as above\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n\n      fixM = function(path1, path2, a1, a2, i) {\n\n        if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\n          path2.splice(i, 0, ['M', a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n\n      pcoms1 = [], // path commands of original path p\n      pcoms2 = [], // path commands of original path p2\n      pfirst = '', // temporary holder for original path command\n      pcom = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n    {\n      pcoms1[i] = pfirst; // Save current path command\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) { // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst != 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != 'A' && pfirst == 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  if (!p2) {\n    pth.curve = pathClone(p);\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\nmodule.exports = findPathIntersections;"]},"metadata":{},"sourceType":"script"}