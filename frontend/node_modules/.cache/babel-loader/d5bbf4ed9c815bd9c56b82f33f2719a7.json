{"ast":null,"code":"import { append as svgAppend, attr as svgAttr, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { getBusinessObject, is } from '../../util/ModelUtil';\nimport { translate } from 'diagram-js/lib/util/SvgTransformUtil';\nvar MARKER_HIDDEN = 'djs-element-hidden',\n    MARKER_LABEL_HIDDEN = 'djs-label-hidden';\nexport default function LabelEditingPreview(eventBus, canvas, elementRegistry, pathMap) {\n  var self = this;\n  var defaultLayer = canvas.getDefaultLayer();\n  var element, absoluteElementBBox, gfx;\n  eventBus.on('directEditing.activate', function (context) {\n    var activeProvider = context.active;\n    element = activeProvider.element.label || activeProvider.element; // text annotation\n\n    if (is(element, 'bpmn:TextAnnotation')) {\n      absoluteElementBBox = canvas.getAbsoluteBBox(element);\n      gfx = svgCreate('g');\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n      var path = self.path = svgCreate('path');\n      svgAttr(path, {\n        d: textPathData,\n        strokeWidth: 2,\n        stroke: getStrokeColor(element)\n      });\n      svgAppend(gfx, path);\n      svgAppend(defaultLayer, gfx);\n      translate(gfx, element.x, element.y);\n    }\n\n    if (is(element, 'bpmn:TextAnnotation') || element.labelTarget) {\n      canvas.addMarker(element, MARKER_HIDDEN);\n    } else if (is(element, 'bpmn:Task') || is(element, 'bpmn:CallActivity') || is(element, 'bpmn:SubProcess') || is(element, 'bpmn:Participant')) {\n      canvas.addMarker(element, MARKER_LABEL_HIDDEN);\n    }\n  });\n  eventBus.on('directEditing.resize', function (context) {\n    // text annotation\n    if (is(element, 'bpmn:TextAnnotation')) {\n      var height = context.height,\n          dy = context.dy;\n      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: newElementHeight,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n      svgAttr(self.path, {\n        d: textPathData\n      });\n    }\n  });\n  eventBus.on(['directEditing.complete', 'directEditing.cancel'], function (context) {\n    var activeProvider = context.active;\n\n    if (activeProvider) {\n      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);\n      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);\n    }\n\n    element = undefined;\n    absoluteElementBBox = undefined;\n\n    if (gfx) {\n      svgRemove(gfx);\n      gfx = undefined;\n    }\n  });\n}\nLabelEditingPreview.$inject = ['eventBus', 'canvas', 'elementRegistry', 'pathMap']; // helpers ///////////////////\n\nfunction getStrokeColor(element, defaultColor) {\n  var bo = getBusinessObject(element);\n  return bo.di.get('stroke') || defaultColor || 'black';\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js/lib/features/label-editing/LabelEditingPreview.js"],"names":["append","svgAppend","attr","svgAttr","create","svgCreate","remove","svgRemove","getBusinessObject","is","translate","MARKER_HIDDEN","MARKER_LABEL_HIDDEN","LabelEditingPreview","eventBus","canvas","elementRegistry","pathMap","self","defaultLayer","getDefaultLayer","element","absoluteElementBBox","gfx","on","context","activeProvider","active","label","getAbsoluteBBox","textPathData","getScaledPath","xScaleFactor","yScaleFactor","containerWidth","width","containerHeight","height","position","mx","my","path","d","strokeWidth","stroke","getStrokeColor","x","y","labelTarget","addMarker","dy","newElementHeight","Math","max","removeMarker","undefined","$inject","defaultColor","bo","di","get"],"mappings":"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","sourcesContent":["import {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nvar MARKER_HIDDEN = 'djs-element-hidden',\n    MARKER_LABEL_HIDDEN = 'djs-label-hidden';\n\n\nexport default function LabelEditingPreview(\n    eventBus, canvas, elementRegistry,\n    pathMap) {\n\n  var self = this;\n\n  var defaultLayer = canvas.getDefaultLayer();\n\n  var element, absoluteElementBBox, gfx;\n\n  eventBus.on('directEditing.activate', function(context) {\n    var activeProvider = context.active;\n\n    element = activeProvider.element.label || activeProvider.element;\n\n    // text annotation\n    if (is(element, 'bpmn:TextAnnotation')) {\n      absoluteElementBBox = canvas.getAbsoluteBBox(element);\n\n      gfx = svgCreate('g');\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      var path = self.path = svgCreate('path');\n\n      svgAttr(path, {\n        d: textPathData,\n        strokeWidth: 2,\n        stroke: getStrokeColor(element)\n      });\n\n      svgAppend(gfx, path);\n\n      svgAppend(defaultLayer, gfx);\n\n      translate(gfx, element.x, element.y);\n    }\n\n    if (is(element, 'bpmn:TextAnnotation') ||\n        element.labelTarget) {\n      canvas.addMarker(element, MARKER_HIDDEN);\n    } else if (is(element, 'bpmn:Task') ||\n               is(element, 'bpmn:CallActivity') ||\n               is(element, 'bpmn:SubProcess') ||\n               is(element, 'bpmn:Participant')) {\n      canvas.addMarker(element, MARKER_LABEL_HIDDEN);\n    }\n  });\n\n  eventBus.on('directEditing.resize', function(context) {\n\n    // text annotation\n    if (is(element, 'bpmn:TextAnnotation')) {\n      var height = context.height,\n          dy = context.dy;\n\n      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: newElementHeight,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      svgAttr(self.path, {\n        d: textPathData\n      });\n    }\n  });\n\n  eventBus.on([ 'directEditing.complete', 'directEditing.cancel' ], function(context) {\n    var activeProvider = context.active;\n\n    if (activeProvider) {\n      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);\n      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);\n    }\n\n    element = undefined;\n    absoluteElementBBox = undefined;\n\n    if (gfx) {\n      svgRemove(gfx);\n\n      gfx = undefined;\n    }\n  });\n}\n\nLabelEditingPreview.$inject = [\n  'eventBus',\n  'canvas',\n  'elementRegistry',\n  'pathMap'\n];\n\n\n// helpers ///////////////////\n\nfunction getStrokeColor(element, defaultColor) {\n  var bo = getBusinessObject(element);\n\n  return bo.di.get('stroke') || defaultColor || 'black';\n}"]},"metadata":{},"sourceType":"module"}