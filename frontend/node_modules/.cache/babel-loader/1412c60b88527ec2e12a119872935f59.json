{"ast":null,"code":"'use strict';\n\nvar domQuery = require('min-dom').query;\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\nvar textField = function (options, defaultParameters) {\n  // Default action for the button next to the input-field\n  var defaultButtonAction = function (element, inputNode) {\n    var input = domQuery('input[name=\"' + options.modelProperty + '\"]', inputNode);\n    input.value = '';\n    return true;\n  }; // default method to determine if the button should be visible\n\n\n  var defaultButtonShow = function (element, inputNode) {\n    var input = domQuery('input[name=\"' + options.modelProperty + '\"]', inputNode);\n    return input.value !== '';\n  };\n\n  var resource = defaultParameters,\n      label = options.label || resource.id,\n      dataValueLabel = options.dataValueLabel,\n      buttonLabel = options.buttonLabel || 'X',\n      actionName = typeof options.buttonAction != 'undefined' ? options.buttonAction.name : 'clear',\n      actionMethod = typeof options.buttonAction != 'undefined' ? options.buttonAction.method : defaultButtonAction,\n      showName = typeof options.buttonShow != 'undefined' ? options.buttonShow.name : 'canClear',\n      showMethod = typeof options.buttonShow != 'undefined' ? options.buttonShow.method : defaultButtonShow,\n      canBeDisabled = !!options.disabled && typeof options.disabled === 'function',\n      canBeHidden = !!options.hidden && typeof options.hidden === 'function',\n      description = options.description;\n  resource.html = '<label for=\"camunda-' + resource.id + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\" ' : '') + (canBeHidden ? 'data-show=\"isHidden\" ' : '') + (dataValueLabel ? 'data-value=\"' + dataValueLabel + '\"' : '') + '>' + label + '</label>' + '<div class=\"bpp-field-wrapper\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + '>' + '<input id=\"camunda-' + resource.id + '\" type=\"text\" name=\"' + options.modelProperty + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + ' />' + '<button class=\"' + actionName + '\" data-action=\"' + actionName + '\" data-show=\"' + showName + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? ' data-show=\"isHidden\"' : '') + '>' + '<span>' + buttonLabel + '</span>' + '</button>' + '</div>'; // add description below text input entry field\n\n  if (description) {\n    resource.html += entryFieldDescription(description);\n  }\n\n  resource[actionName] = actionMethod;\n  resource[showName] = showMethod;\n\n  if (canBeDisabled) {\n    resource.isDisabled = function () {\n      return options.disabled.apply(resource, arguments);\n    };\n  }\n\n  if (canBeHidden) {\n    resource.isHidden = function () {\n      return !options.hidden.apply(resource, arguments);\n    };\n  }\n\n  resource.cssClasses = ['bpp-textfield'];\n  return resource;\n};\n\nmodule.exports = textField;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/factory/TextInputEntryFactory.js"],"names":["domQuery","require","query","entryFieldDescription","textField","options","defaultParameters","defaultButtonAction","element","inputNode","input","modelProperty","value","defaultButtonShow","resource","label","id","dataValueLabel","buttonLabel","actionName","buttonAction","name","actionMethod","method","showName","buttonShow","showMethod","canBeDisabled","disabled","canBeHidden","hidden","description","html","isDisabled","apply","arguments","isHidden","cssClasses","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar domQuery = require('min-dom').query;\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\n\nvar textField = function(options, defaultParameters) {\n\n  // Default action for the button next to the input-field\n  var defaultButtonAction = function(element, inputNode) {\n    var input = domQuery('input[name=\"' + options.modelProperty + '\"]', inputNode);\n    input.value = '';\n\n    return true;\n  };\n\n  // default method to determine if the button should be visible\n  var defaultButtonShow = function(element, inputNode) {\n    var input = domQuery('input[name=\"' + options.modelProperty + '\"]', inputNode);\n\n    return input.value !== '';\n  };\n\n\n  var resource = defaultParameters,\n      label = options.label || resource.id,\n      dataValueLabel = options.dataValueLabel,\n      buttonLabel = (options.buttonLabel || 'X'),\n      actionName = (typeof options.buttonAction != 'undefined') ? options.buttonAction.name : 'clear',\n      actionMethod = (typeof options.buttonAction != 'undefined') ? options.buttonAction.method : defaultButtonAction,\n      showName = (typeof options.buttonShow != 'undefined') ? options.buttonShow.name : 'canClear',\n      showMethod = (typeof options.buttonShow != 'undefined') ? options.buttonShow.method : defaultButtonShow,\n      canBeDisabled = !!options.disabled && typeof options.disabled === 'function',\n      canBeHidden = !!options.hidden && typeof options.hidden === 'function',\n      description = options.description;\n\n  resource.html =\n    '<label for=\"camunda-' + resource.id + '\" ' +\n      (canBeDisabled ? 'data-disable=\"isDisabled\" ' : '') +\n      (canBeHidden ? 'data-show=\"isHidden\" ' : '') +\n      (dataValueLabel ? 'data-value=\"' + dataValueLabel + '\"' : '') + '>'+ label +'</label>' +\n    '<div class=\"bpp-field-wrapper\" ' +\n      (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') +\n      (canBeHidden ? 'data-show=\"isHidden\"' : '') +\n      '>' +\n      '<input id=\"camunda-' + resource.id + '\" type=\"text\" name=\"' + options.modelProperty+'\" ' +\n        (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') +\n        (canBeHidden ? 'data-show=\"isHidden\"' : '') +\n        ' />' +\n      '<button class=\"' + actionName + '\" data-action=\"' + actionName + '\" data-show=\"' + showName + '\" ' +\n        (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') +\n        (canBeHidden ? ' data-show=\"isHidden\"' : '') + '>' +\n        '<span>' + buttonLabel + '</span>' +\n      '</button>' +\n    '</div>';\n\n  // add description below text input entry field\n  if (description) {\n    resource.html += entryFieldDescription(description);\n  }\n\n  resource[actionName] = actionMethod;\n  resource[showName] = showMethod;\n\n  if (canBeDisabled) {\n    resource.isDisabled = function() {\n      return options.disabled.apply(resource, arguments);\n    };\n  }\n\n  if (canBeHidden) {\n    resource.isHidden = function() {\n      return !options.hidden.apply(resource, arguments);\n    };\n  }\n\n  resource.cssClasses = ['bpp-textfield'];\n\n  return resource;\n};\n\nmodule.exports = textField;\n"]},"metadata":{},"sourceType":"script"}