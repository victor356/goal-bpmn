{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n/**\n * Create an entry to modify a property of an element which\n * is referenced by a event definition.\n *\n * @param  {djs.model.Base} element\n * @param  {ModdleElement} definition\n * @param  {BpmnFactory} bpmnFactory\n * @param  {Object} options\n * @param  {string} options.id the id of the entry\n * @param  {string} options.label the label of the entry\n * @param  {string} options.referenceProperty the name of referencing property\n * @param  {string} options.modelProperty the name of property to modify\n * @param  {string} options.shouldValidate a flag indicate whether to validate or not\n *\n * @return {Array<Object>} return an array containing the entries\n */\n\n\nmodule.exports = function (element, definition, bpmnFactory, options) {\n  var id = options.id || 'element-property';\n  var label = options.label;\n  var referenceProperty = options.referenceProperty;\n  var modelProperty = options.modelProperty || 'name';\n  var shouldValidate = options.shouldValidate || false;\n  var entry = entryFactory.textField({\n    id: id,\n    label: label,\n    modelProperty: modelProperty,\n    get: function (element, node) {\n      var reference = definition.get(referenceProperty);\n      var props = {};\n      props[modelProperty] = reference && reference.get(modelProperty);\n      return props;\n    },\n    set: function (element, values, node) {\n      var reference = definition.get(referenceProperty);\n      var props = {};\n      props[modelProperty] = values[modelProperty] || undefined;\n      return cmdHelper.updateBusinessObject(element, reference, props);\n    },\n    hidden: function (element, node) {\n      return !definition.get(referenceProperty);\n    }\n  });\n\n  if (shouldValidate) {\n    entry.validate = function (element, values, node) {\n      var reference = definition.get(referenceProperty);\n\n      if (reference && !values[modelProperty]) {\n        var validationErrors = {};\n        validationErrors[modelProperty] = 'Must provide a value';\n        return validationErrors;\n      }\n    };\n  }\n\n  return [entry];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/bpmn/parts/implementation/ElementReferenceProperty.js"],"names":["entryFactory","require","cmdHelper","module","exports","element","definition","bpmnFactory","options","id","label","referenceProperty","modelProperty","shouldValidate","entry","textField","get","node","reference","props","set","values","undefined","updateBusinessObject","hidden","validate","validationErrors"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kCAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,8BAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoD;AAEnE,MAAIC,EAAE,GAAGD,OAAO,CAACC,EAAR,IAAc,kBAAvB;AACA,MAAIC,KAAK,GAAGF,OAAO,CAACE,KAApB;AACA,MAAIC,iBAAiB,GAAGH,OAAO,CAACG,iBAAhC;AACA,MAAIC,aAAa,GAAGJ,OAAO,CAACI,aAAR,IAAyB,MAA7C;AACA,MAAIC,cAAc,GAAGL,OAAO,CAACK,cAAR,IAA0B,KAA/C;AAEA,MAAIC,KAAK,GAAGd,YAAY,CAACe,SAAb,CAAuB;AACjCN,IAAAA,EAAE,EAAEA,EAD6B;AAEjCC,IAAAA,KAAK,EAAEA,KAF0B;AAGjCE,IAAAA,aAAa,EAAEA,aAHkB;AAKjCI,IAAAA,GAAG,EAAE,UAASX,OAAT,EAAkBY,IAAlB,EAAwB;AAC3B,UAAIC,SAAS,GAAGZ,UAAU,CAACU,GAAX,CAAeL,iBAAf,CAAhB;AACA,UAAIQ,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,CAACP,aAAD,CAAL,GAAuBM,SAAS,IAAIA,SAAS,CAACF,GAAV,CAAcJ,aAAd,CAApC;AACA,aAAOO,KAAP;AACD,KAVgC;AAYjCC,IAAAA,GAAG,EAAE,UAASf,OAAT,EAAkBgB,MAAlB,EAA0BJ,IAA1B,EAAgC;AACnC,UAAIC,SAAS,GAAGZ,UAAU,CAACU,GAAX,CAAeL,iBAAf,CAAhB;AACA,UAAIQ,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,CAACP,aAAD,CAAL,GAAuBS,MAAM,CAACT,aAAD,CAAN,IAAyBU,SAAhD;AACA,aAAOpB,SAAS,CAACqB,oBAAV,CAA+BlB,OAA/B,EAAwCa,SAAxC,EAAmDC,KAAnD,CAAP;AACD,KAjBgC;AAmBjCK,IAAAA,MAAM,EAAE,UAASnB,OAAT,EAAkBY,IAAlB,EAAwB;AAC9B,aAAO,CAACX,UAAU,CAACU,GAAX,CAAeL,iBAAf,CAAR;AACD;AArBgC,GAAvB,CAAZ;;AAwBA,MAAIE,cAAJ,EAAoB;AAClBC,IAAAA,KAAK,CAACW,QAAN,GAAiB,UAASpB,OAAT,EAAkBgB,MAAlB,EAA0BJ,IAA1B,EAAgC;AAC/C,UAAIC,SAAS,GAAGZ,UAAU,CAACU,GAAX,CAAeL,iBAAf,CAAhB;;AACA,UAAIO,SAAS,IAAI,CAACG,MAAM,CAACT,aAAD,CAAxB,EAAyC;AACvC,YAAIc,gBAAgB,GAAG,EAAvB;AACAA,QAAAA,gBAAgB,CAACd,aAAD,CAAhB,GAAkC,sBAAlC;AACA,eAAOc,gBAAP;AACD;AACF,KAPD;AAQD;;AAED,SAAO,CAAEZ,KAAF,CAAP;AACD,CA5CD","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n\n/**\n * Create an entry to modify a property of an element which\n * is referenced by a event definition.\n *\n * @param  {djs.model.Base} element\n * @param  {ModdleElement} definition\n * @param  {BpmnFactory} bpmnFactory\n * @param  {Object} options\n * @param  {string} options.id the id of the entry\n * @param  {string} options.label the label of the entry\n * @param  {string} options.referenceProperty the name of referencing property\n * @param  {string} options.modelProperty the name of property to modify\n * @param  {string} options.shouldValidate a flag indicate whether to validate or not\n *\n * @return {Array<Object>} return an array containing the entries\n */\nmodule.exports = function(element, definition, bpmnFactory, options) {\n\n  var id = options.id || 'element-property';\n  var label = options.label;\n  var referenceProperty = options.referenceProperty;\n  var modelProperty = options.modelProperty || 'name';\n  var shouldValidate = options.shouldValidate || false;\n\n  var entry = entryFactory.textField({\n    id: id,\n    label: label,\n    modelProperty: modelProperty,\n\n    get: function(element, node) {\n      var reference = definition.get(referenceProperty);\n      var props = {};\n      props[modelProperty] = reference && reference.get(modelProperty);\n      return props;\n    },\n\n    set: function(element, values, node) {\n      var reference = definition.get(referenceProperty);\n      var props = {};\n      props[modelProperty] = values[modelProperty] || undefined;\n      return cmdHelper.updateBusinessObject(element, reference, props);\n    },\n\n    hidden: function(element, node) {\n      return !definition.get(referenceProperty);\n    }\n  });\n\n  if (shouldValidate) {\n    entry.validate = function(element, values, node) {\n      var reference = definition.get(referenceProperty);\n      if (reference && !values[modelProperty]) {\n        var validationErrors = {};\n        validationErrors[modelProperty] = 'Must provide a value';\n        return validationErrors;\n      }\n    };\n  }\n\n  return [ entry ];\n};\n"]},"metadata":{},"sourceType":"script"}