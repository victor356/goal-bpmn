{"ast":null,"code":"import { forEach } from 'min-dash';\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\nvar LOW_PRIORITY = 250;\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { translate } from '../../util/SvgTransformUtil';\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\n\nexport default function SpaceToolPreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function (element) {\n      previewSupport.addDragger(element, dragGroup);\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  } // add crosshair\n\n\n  eventBus.on('spaceTool.selection.start', function (event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', ['no-events']));\n    svgAppend(space, crosshairGroup); // horizontal path\n\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathX); // vertical path\n\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathY);\n    context.crosshairGroup = crosshairGroup;\n  }); // update crosshair\n\n  eventBus.on('spaceTool.selection.move', function (event) {\n    var crosshairGroup = event.context.crosshairGroup;\n    translate(crosshairGroup, event.x, event.y);\n  }); // remove crosshair\n\n  eventBus.on('spaceTool.selection.cleanup', function (event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  }); // add and update move/resize previews\n\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function (event) {\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n      svgAppend(spaceLayer, line);\n      context.line = line;\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', ['no-events']));\n      svgAppend(canvas.getDefaultLayer(), dragGroup); // shapes\n\n      addPreviewGfx(movingShapes, dragGroup); // connections\n\n      var movingConnections = context.movingConnections = elementRegistry.filter(function (element) {\n        var sourceIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n        var targetIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n        var sourceIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n        var targetIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n        return isConnection(element) && (sourceIsMoving || sourceIsResizing) && (targetIsMoving || targetIsResizing);\n      });\n      addPreviewGfx(movingConnections, dragGroup);\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', ['no-events']));\n      svgAppend(canvas.getDefaultLayer(), frameGroup);\n      var frames = [];\n      forEach(resizingShapes, function (shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n        frames.push({\n          element: frame,\n          initialWidth: frame.getBBox().width,\n          initialHeight: frame.getBBox().height\n        });\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n    svgAttr(line, {\n      path: orientation[axis],\n      display: ''\n    });\n    var opposite = {\n      x: 'y',\n      y: 'x'\n    };\n    var delta = {\n      x: event.dx,\n      y: event.dy\n    };\n    delta[opposite[context.axis]] = 0; // update move previews\n\n    translate(context.dragGroup, delta.x, delta.y); // update resize previews\n\n    forEach(context.frames, function (frame) {\n      if (frame.initialWidth + delta.x > 5) {\n        svgAttr(frame.element, {\n          width: frame.initialWidth + delta.x\n        });\n      }\n\n      if (frame.initialHeight + delta.y > 5) {\n        svgAttr(frame.element, {\n          height: frame.initialHeight + delta.y\n        });\n      }\n    });\n  }); // remove move/resize previews\n\n  eventBus.on('spaceTool.cleanup', function (event) {\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup; // moving shapes\n\n    forEach(movingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    }); // moving connections\n\n    forEach(movingConnections, function (connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\nSpaceToolPreview.$inject = ['eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport']; // helpers //////////////////////\n\n/**\n * Checks if an element is a connection.\n */\n\nfunction isConnection(element) {\n  return element.waypoints;\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js"],"names":["forEach","MARKER_DRAGGING","MARKER_RESIZING","LOW_PRIORITY","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","translate","SpaceToolPreview","eventBus","elementRegistry","canvas","styles","previewSupport","addPreviewGfx","collection","dragGroup","element","addDragger","addMarker","on","event","space","getLayer","context","orientation","x","y","crosshairGroup","cls","pathX","add","pathY","line","axis","movingShapes","resizingShapes","initialized","spaceLayer","getDefaultLayer","movingConnections","filter","sourceIsMoving","shape","outgoing","connection","targetIsMoving","incoming","sourceIsResizing","targetIsResizing","isConnection","frameGroup","frames","frame","addFrame","push","initialWidth","getBBox","width","initialHeight","height","path","display","opposite","delta","dx","dy","removeMarker","$inject","waypoints"],"mappings":"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","sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\n\nvar LOW_PRIORITY = 250;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\n\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function SpaceToolPreview(\n    eventBus, elementRegistry, canvas,\n    styles, previewSupport) {\n\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function(element) {\n      previewSupport.addDragger(element, dragGroup);\n\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  }\n\n  // add crosshair\n  eventBus.on('spaceTool.selection.start', function(event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\n\n    svgAppend(space, crosshairGroup);\n\n    // horizontal path\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathX);\n\n    // vertical path\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathY);\n\n    context.crosshairGroup = crosshairGroup;\n  });\n\n  // update crosshair\n  eventBus.on('spaceTool.selection.move', function(event) {\n    var crosshairGroup = event.context.crosshairGroup;\n\n    translate(crosshairGroup, event.x, event.y);\n  });\n\n  // remove crosshair\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  });\n\n  // add and update move/resize previews\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n\n      svgAppend(spaceLayer, line);\n\n      context.line = line;\n\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getDefaultLayer(), dragGroup);\n\n      // shapes\n      addPreviewGfx(movingShapes, dragGroup);\n\n      // connections\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\n        var sourceIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n\n        var targetIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n\n        var sourceIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n\n        var targetIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n\n        return isConnection(element)\n          && (sourceIsMoving || sourceIsResizing)\n          && (targetIsMoving || targetIsResizing);\n      });\n\n\n      addPreviewGfx(movingConnections, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getDefaultLayer(), frameGroup);\n\n      var frames = [];\n\n      forEach(resizingShapes, function(shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n\n        frames.push({\n          element: frame,\n          initialWidth: frame.getBBox().width,\n          initialHeight: frame.getBBox().height\n        });\n\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n\n    svgAttr(line, { path: orientation[ axis ], display: '' });\n\n    var opposite = { x: 'y', y: 'x' };\n    var delta = { x: event.dx, y: event.dy };\n    delta[ opposite[ context.axis ] ] = 0;\n\n    // update move previews\n    translate(context.dragGroup, delta.x, delta.y);\n\n    // update resize previews\n    forEach(context.frames, function(frame) {\n      if (frame.initialWidth + delta.x > 5) {\n        svgAttr(frame.element, { width: frame.initialWidth + delta.x });\n      }\n\n      if (frame.initialHeight + delta.y > 5) {\n        svgAttr(frame.element, { height: frame.initialHeight + delta.y });\n      }\n    });\n\n  });\n\n  // remove move/resize previews\n  eventBus.on('spaceTool.cleanup', function(event) {\n\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup;\n\n    // moving shapes\n    forEach(movingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    });\n\n    // moving connections\n    forEach(movingConnections, function(connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\n\nSpaceToolPreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n\n\n// helpers //////////////////////\n\n/**\n * Checks if an element is a connection.\n */\nfunction isConnection(element) {\n  return element.waypoints;\n}\n"]},"metadata":{},"sourceType":"module"}