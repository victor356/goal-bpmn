{"ast":null,"code":"import inherits from 'inherits';\nimport { isObject, assign, forEach } from 'min-dash';\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\nimport { isExpanded, isEventSubProcess } from '../util/DiUtil';\nimport { is } from '../util/ModelUtil';\nimport { createLine } from 'diagram-js/lib/util/RenderUtil';\nimport { isTypedEvent, isThrowEvent, isCollection, getDi, getSemantic, getCirclePath, getRoundRectPath, getDiamondPath, getRectPath, getFillColor, getStrokeColor } from './BpmnRenderUtil';\nimport { query as domQuery } from 'min-dom';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, classes as svgClasses } from 'tiny-svg';\nimport { rotate, transform, translate } from 'diagram-js/lib/util/SvgTransformUtil';\nimport Ids from 'ids';\nvar RENDERER_IDS = new Ids();\nvar TASK_BORDER_RADIUS = 10;\nvar INNER_OUTER_DIST = 3;\nvar DEFAULT_FILL_OPACITY = .95,\n    HIGH_FILL_OPACITY = .35;\nexport default function BpmnRenderer(config, eventBus, styles, pathMap, canvas, textRenderer, priority) {\n  BaseRenderer.call(this, eventBus, priority);\n  var defaultFillColor = config && config.defaultFillColor,\n      defaultStrokeColor = config && config.defaultStrokeColor;\n  var rendererId = RENDERER_IDS.next();\n  var markers = {};\n  var computeStyle = styles.computeStyle;\n\n  function addMarker(id, options) {\n    var attrs = assign({\n      fill: 'black',\n      strokeWidth: 1,\n      strokeLinecap: 'round',\n      strokeDasharray: 'none'\n    }, options.attrs);\n    var ref = options.ref || {\n      x: 0,\n      y: 0\n    };\n    var scale = options.scale || 1; // fix for safari / chrome / firefox bug not correctly\n    // resetting stroke dash array\n\n    if (attrs.strokeDasharray === 'none') {\n      attrs.strokeDasharray = [10000, 1];\n    }\n\n    var marker = svgCreate('marker');\n    svgAttr(options.element, attrs);\n    svgAppend(marker, options.element);\n    svgAttr(marker, {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n    var defs = domQuery('defs', canvas._svg);\n\n    if (!defs) {\n      defs = svgCreate('defs');\n      svgAppend(canvas._svg, defs);\n    }\n\n    svgAppend(defs, marker);\n    markers[id] = marker;\n  }\n\n  function marker(type, fill, stroke) {\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\n\n    if (!markers[id]) {\n      createMarker(type, fill, stroke);\n    }\n\n    return 'url(#' + id + ')';\n  }\n\n  function createMarker(type, fill, stroke) {\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\n\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path');\n      svgAttr(sequenceflowEnd, {\n        d: 'M 1 5 L 11 10 L 1 15 Z'\n      });\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: {\n          x: 11,\n          y: 10\n        },\n        scale: 0.5,\n        attrs: {\n          fill: stroke,\n          stroke: stroke\n        }\n      });\n    }\n\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle');\n      svgAttr(messageflowStart, {\n        cx: 6,\n        cy: 6,\n        r: 3.5\n      });\n      addMarker(id, {\n        element: messageflowStart,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: {\n          x: 6,\n          y: 6\n        }\n      });\n    }\n\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path');\n      svgAttr(messageflowEnd, {\n        d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z'\n      });\n      addMarker(id, {\n        element: messageflowEnd,\n        attrs: {\n          fill: fill,\n          stroke: stroke,\n          strokeLinecap: 'butt'\n        },\n        ref: {\n          x: 8.5,\n          y: 5\n        }\n      });\n    }\n\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path');\n      svgAttr(associationStart, {\n        d: 'M 11 5 L 1 10 L 11 15'\n      });\n      addMarker(id, {\n        element: associationStart,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: {\n          x: 1,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path');\n      svgAttr(associationEnd, {\n        d: 'M 1 5 L 11 10 L 1 15'\n      });\n      addMarker(id, {\n        element: associationEnd,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: {\n          x: 12,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-flow-marker') {\n      var conditionalflowMarker = svgCreate('path');\n      svgAttr(conditionalflowMarker, {\n        d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z'\n      });\n      addMarker(id, {\n        element: conditionalflowMarker,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: {\n          x: -1,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-default-flow-marker') {\n      var conditionaldefaultflowMarker = svgCreate('path');\n      svgAttr(conditionaldefaultflowMarker, {\n        d: 'M 6 4 L 10 16'\n      });\n      addMarker(id, {\n        element: conditionaldefaultflowMarker,\n        attrs: {\n          stroke: stroke\n        },\n        ref: {\n          x: 0,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n  }\n\n  function drawCircle(parentGfx, width, height, offset, attrs) {\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    if (attrs.fill === 'none') {\n      delete attrs.fillOpacity;\n    }\n\n    var cx = width / 2,\n        cy = height / 2;\n    var circle = svgCreate('circle');\n    svgAttr(circle, {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    });\n    svgAttr(circle, attrs);\n    svgAppend(parentGfx, circle);\n    return circle;\n  }\n\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n    var rect = svgCreate('rect');\n    svgAttr(rect, {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    });\n    svgAttr(rect, attrs);\n    svgAppend(parentGfx, rect);\n    return rect;\n  }\n\n  function drawDiamond(parentGfx, width, height, attrs) {\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n    var points = [{\n      x: x_2,\n      y: 0\n    }, {\n      x: width,\n      y: y_2\n    }, {\n      x: x_2,\n      y: height\n    }, {\n      x: 0,\n      y: y_2\n    }];\n    var pointsString = points.map(function (point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n    var polygon = svgCreate('polygon');\n    svgAttr(polygon, {\n      points: pointsString\n    });\n    svgAttr(polygon, attrs);\n    svgAppend(parentGfx, polygon);\n    return polygon;\n  }\n\n  function drawLine(parentGfx, waypoints, attrs) {\n    attrs = computeStyle(attrs, ['no-fill'], {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'none'\n    });\n    var line = createLine(waypoints, attrs);\n    svgAppend(parentGfx, line);\n    return line;\n  }\n\n  function drawPath(parentGfx, d, attrs) {\n    attrs = computeStyle(attrs, ['no-fill'], {\n      strokeWidth: 2,\n      stroke: 'black'\n    });\n    var path = svgCreate('path');\n    svgAttr(path, {\n      d: d\n    });\n    svgAttr(path, attrs);\n    svgAppend(parentGfx, path);\n    return path;\n  }\n\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({\n      'data-marker': type\n    }, attrs));\n  }\n\n  function as(type) {\n    return function (parentGfx, element) {\n      return handlers[type](parentGfx, element);\n    };\n  }\n\n  function renderer(type) {\n    return handlers[type];\n  }\n\n  function renderEventContent(element, parentGfx) {\n    var event = getSemantic(element);\n    var isThrowing = isThrowEvent(event);\n\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\n    }\n\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') && isTypedEvent(event, 'bpmn:TerminateEventDefinition', {\n      parallelMultiple: false\n    })) {\n      return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') && isTypedEvent(event, 'bpmn:TerminateEventDefinition', {\n      parallelMultiple: true\n    })) {\n      return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    return null;\n  }\n\n  function renderLabel(parentGfx, label, options) {\n    options = assign({\n      size: {\n        width: 100\n      }\n    }, options);\n    var text = textRenderer.createText(label || '', options);\n    svgClasses(text).add('djs-label');\n    svgAppend(parentGfx, text);\n    return text;\n  }\n\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    var semantic = getSemantic(element);\n    return renderLabel(parentGfx, semantic.name, {\n      box: element,\n      align: align,\n      padding: 5,\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n  }\n\n  function renderExternalLabel(parentGfx, element) {\n    var semantic = getSemantic(element);\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n    return renderLabel(parentGfx, semantic.name, {\n      box: box,\n      fitBox: true,\n      style: assign({}, textRenderer.getExternalStyle(), {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      })\n    });\n  }\n\n  function renderLaneLabel(parentGfx, text, element) {\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: element.height\n      },\n      align: 'center-middle',\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n    var top = -1 * element.height;\n    transform(textBox, 0, -top, 270);\n  }\n\n  function createPathFromConnection(connection) {\n    var waypoints = connection.waypoints;\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\n\n    for (var i = 1; i < waypoints.length; i++) {\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\n    }\n\n    return pathData;\n  }\n\n  var handlers = this.handlers = {\n    'bpmn:Event': function (parentGfx, element, attrs) {\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawCircle(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:StartEvent': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var semantic = getSemantic(element);\n\n      if (!semantic.isInterrupting) {\n        attrs = {\n          strokeDasharray: '6',\n          strokeLinecap: 'round',\n          fill: getFillColor(element, defaultFillColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n      }\n\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\n      renderEventContent(element, parentGfx);\n      return circle;\n    },\n    'bpmn:MessageEventDefinition': function (parentGfx, element, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\n      var messagePath = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: stroke\n      });\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function (parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 2,\n        strokeLinecap: 'square',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      for (var i = 0; i < 12; i++) {\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n        var width = element.width / 2;\n        var height = element.height / 2;\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          strokeLinecap: 'square',\n          transform: 'rotate(' + i * 30 + ',' + height + ',' + width + ')',\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function (parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:LinkEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ErrorEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:CancelEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      var path = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n      rotate(path, 45);\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:SignalEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.222,\n          my: 0.36\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function (parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(event, defaultStrokeColor),\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:EndEvent': function (parentGfx, element) {\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 4,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      renderEventContent(element, parentGfx, true);\n      return circle;\n    },\n    'bpmn:TerminateEventDefinition': function (parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        strokeWidth: 4,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return circle;\n    },\n    'bpmn:IntermediateEvent': function (parentGfx, element) {\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      /* inner */\n\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        strokeWidth: 1,\n        fill: getFillColor(element, 'none'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      renderEventContent(element, parentGfx);\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:Activity': function (parentGfx, element, attrs) {\n      attrs = attrs || {};\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\n    },\n    'bpmn:Task': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\n      attachTaskMarkers(parentGfx, element);\n      return rect;\n    },\n    'bpmn:ServiceTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n      /* service bg */\n\n      drawPath(parentGfx, pathDataBG, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\n        abspos: {\n          x: 17.2,\n          y: 18\n        }\n      });\n      /* service fill */\n\n      drawPath(parentGfx, fillPathData, {\n        strokeWidth: 0,\n        fill: getFillColor(element, defaultFillColor)\n      });\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n      /* service */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:UserTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var x = 15;\n      var y = 12;\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      /* user path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      /* user2 path */\n\n      drawPath(parentGfx, pathData2, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n      /* user3 path */\n\n      drawPath(parentGfx, pathData3, {\n        strokeWidth: 0.5,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:ManualTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n      /* manual path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        // 0.25,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:SendTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n      /* send path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getFillColor(element, defaultFillColor)\n      });\n      return task;\n    },\n    'bpmn:ReceiveTask': function (parentGfx, element) {\n      var semantic = getSemantic(element);\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData;\n\n      if (semantic.instantiate) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, {\n          strokeWidth: 1\n        });\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n      /* receive path */\n\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:ScriptTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n      /* script path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:BusinessRuleTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, '#aaaaaa'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:SubProcess': function (parentGfx, element, attrs) {\n      attrs = assign({\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs);\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n      var expanded = isExpanded(element);\n\n      if (isEventSubProcess(element)) {\n        svgAttr(rect, {\n          strokeDasharray: '1,2'\n        });\n      }\n\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\n\n      if (expanded) {\n        attachTaskMarkers(parentGfx, element);\n      } else {\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\n      }\n\n      return rect;\n    },\n    'bpmn:AdHocSubProcess': function (parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element);\n    },\n    'bpmn:Transaction': function (parentGfx, element) {\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\n      var innerAttrs = styles.style(['no-fill', 'no-events'], {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      /* inner path */\n\n      drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\n      return outer;\n    },\n    'bpmn:CallActivity': function (parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\n        strokeWidth: 5\n      });\n    },\n    'bpmn:Participant': function (parentGfx, element) {\n      var attrs = {\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\n      var expandedPool = isExpanded(element);\n\n      if (expandedPool) {\n        drawLine(parentGfx, [{\n          x: 30,\n          y: 0\n        }, {\n          x: 30,\n          y: element.height\n        }], {\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n        var text = getSemantic(element).name;\n        renderLaneLabel(parentGfx, text, element);\n      } else {\n        // Collapsed pool draw text inline\n        var text2 = getSemantic(element).name;\n        renderLabel(parentGfx, text2, {\n          box: element,\n          align: 'center-middle',\n          style: {\n            fill: getStrokeColor(element, defaultStrokeColor)\n          }\n        });\n      }\n\n      var participantMultiplicity = !!getSemantic(element).participantMultiplicity;\n\n      if (participantMultiplicity) {\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\n      }\n\n      return lane;\n    },\n    'bpmn:Lane': function (parentGfx, element, attrs) {\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: HIGH_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs));\n      var semantic = getSemantic(element);\n\n      if (semantic.$type === 'bpmn:Lane') {\n        var text = semantic.name;\n        renderLaneLabel(parentGfx, text, element);\n      }\n\n      return rect;\n    },\n    'bpmn:InclusiveGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      /* circle path */\n\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        strokeWidth: 2.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n\n      if (getDi(element).isMarkerVisible) {\n        drawPath(parentGfx, pathData, {\n          strokeWidth: 1,\n          fill: getStrokeColor(element, defaultStrokeColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return diamond;\n    },\n    'bpmn:ComplexGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor: 0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n      /* complex path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:ParallelGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor: 0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n      /* parallel path */\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:EventBasedGateway': function (parentGfx, element) {\n      var semantic = getSemantic(element);\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      /* outer circle path */\n\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        strokeWidth: 1,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var type = semantic.eventGatewayType;\n      var instantiate = !!semantic.instantiate;\n\n      function drawEvent() {\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n        var attrs = {\n          strokeWidth: 2,\n          fill: getFillColor(element, 'none'),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n        /* event path */\n\n        drawPath(parentGfx, pathData, attrs);\n      }\n\n      if (type === 'Parallel') {\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor: 0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n        var parallelPath = drawPath(parentGfx, pathData);\n        svgAttr(parallelPath, {\n          strokeWidth: 1,\n          fill: 'none'\n        });\n      } else if (type === 'Exclusive') {\n        if (!instantiate) {\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\n          svgAttr(innerCircle, {\n            strokeWidth: 1,\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor)\n          });\n        }\n\n        drawEvent();\n      }\n\n      return diamond;\n    },\n    'bpmn:Gateway': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:SequenceFlow': function (parentGfx, element) {\n      var pathData = createPathFromConnection(element);\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n      var attrs = {\n        strokeLinejoin: 'round',\n        markerEnd: marker('sequenceflow-end', fill, stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var path = drawPath(parentGfx, pathData, attrs);\n      var sequenceFlow = getSemantic(element);\n      var source;\n\n      if (element.source) {\n        source = element.source.businessObject; // conditional flow marker\n\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\n          svgAttr(path, {\n            markerStart: marker('conditional-flow-marker', fill, stroke)\n          });\n        } // default marker\n\n\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) && source.default === sequenceFlow) {\n          svgAttr(path, {\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n\n      return path;\n    },\n    'bpmn:Association': function (parentGfx, element, attrs) {\n      var semantic = getSemantic(element);\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n      attrs = assign({\n        strokeDasharray: '0.5, 5',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs || {});\n\n      if (semantic.associationDirection === 'One' || semantic.associationDirection === 'Both') {\n        attrs.markerEnd = marker('association-end', fill, stroke);\n      }\n\n      if (semantic.associationDirection === 'Both') {\n        attrs.markerStart = marker('association-start', fill, stroke);\n      }\n\n      return drawLine(parentGfx, element.waypoints, attrs);\n    },\n    'bpmn:DataInputAssociation': function (parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:DataOutputAssociation': function (parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:MessageFlow': function (parentGfx, element) {\n      var semantic = getSemantic(element),\n          di = getDi(element);\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n      var pathData = createPathFromConnection(element);\n      var attrs = {\n        markerEnd: marker('messageflow-end', fill, stroke),\n        markerStart: marker('messageflow-start', fill, stroke),\n        strokeDasharray: '10, 12',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        strokeWidth: '1.5px',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      if (semantic.messageRef) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n        var messageAttrs = {\n          strokeWidth: 1\n        };\n\n        if (di.messageVisibleKind === 'initiating') {\n          messageAttrs.fill = 'white';\n          messageAttrs.stroke = 'black';\n        } else {\n          messageAttrs.fill = '#888';\n          messageAttrs.stroke = 'white';\n        }\n\n        drawPath(parentGfx, markerPathData, messageAttrs);\n      }\n\n      return path;\n    },\n    'bpmn:DataObject': function (parentGfx, element) {\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.474,\n          my: 0.296\n        }\n      });\n      var elementObject = drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var semantic = getSemantic(element);\n\n      if (isCollection(semantic)) {\n        renderDataItemCollection(parentGfx, element);\n      }\n\n      return elementObject;\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataInput': function (parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW'); // page\n\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n      /* input arrow path */\n\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1\n      });\n      return elementObject;\n    },\n    'bpmn:DataOutput': function (parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW'); // page\n\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n      /* output arrow path */\n\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: 'black'\n      });\n      return elementObject;\n    },\n    'bpmn:DataStoreReference': function (parentGfx, element) {\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return elementStore;\n    },\n    'bpmn:BoundaryEvent': function (parentGfx, element) {\n      var semantic = getSemantic(element),\n          cancel = semantic.cancelActivity;\n      var attrs = {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      if (!cancel) {\n        attrs.strokeDasharray = '6';\n        attrs.strokeLinecap = 'round';\n      } // apply fillOpacity\n\n\n      var outerAttrs = assign({}, attrs, {\n        fillOpacity: 1\n      }); // apply no-fill\n\n      var innerAttrs = assign({}, attrs, {\n        fill: 'none'\n      });\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\n      /* inner path */\n\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\n      renderEventContent(element, parentGfx);\n      return outer;\n    },\n    'bpmn:Group': function (parentGfx, element) {\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        strokeWidth: 1,\n        strokeDasharray: '8,3,1,3',\n        fill: 'none',\n        pointerEvents: 'none'\n      });\n    },\n    'label': function (parentGfx, element) {\n      return renderExternalLabel(parentGfx, element);\n    },\n    'bpmn:TextAnnotation': function (parentGfx, element) {\n      var style = {\n        'fill': 'none',\n        'stroke': 'none'\n      };\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var text = getSemantic(element).text || '';\n      renderLabel(parentGfx, text, {\n        box: element,\n        align: 'left-top',\n        padding: 5,\n        style: {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      });\n      return textElement;\n    },\n    'ParticipantMultiplicityMarker': function (parentGfx, element) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: element.width / 2 / element.width,\n          my: (element.height - 15) / element.height\n        }\n      });\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SubProcessMarker': function (parentGfx, element) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }); // Process marker is placed in the middle of the box\n      // therefore fixed values can be used here\n\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'ParallelMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.parallel) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SequentialMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.seq) / element.width,\n          my: (element.height - 19) / element.height\n        }\n      });\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'CompensationMarker': function (parentGfx, element, position) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.compensation) / element.width,\n          my: (element.height - 13) / element.height\n        }\n      });\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'LoopMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.loop) / element.width,\n          my: (element.height - 7) / element.height\n        }\n      });\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeLinecap: 'round',\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.adhoc) / element.width,\n          my: (element.height - 15) / element.height\n        }\n      });\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    }\n  };\n\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\n    var obj = getSemantic(element);\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\n    var position;\n\n    if (subprocess) {\n      position = {\n        seq: -21,\n        parallel: -22,\n        compensation: -42,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      position = {\n        seq: -3,\n        parallel: -6,\n        compensation: -27,\n        loop: 0,\n        adhoc: 10\n      };\n    }\n\n    forEach(taskMarkers, function (marker) {\n      renderer(marker)(parentGfx, element, position);\n    });\n\n    if (obj.isForCompensation) {\n      renderer('CompensationMarker')(parentGfx, element, position);\n    }\n\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\n      renderer('AdhocMarker')(parentGfx, element, position);\n    }\n\n    var loopCharacteristics = obj.loopCharacteristics,\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\n\n    if (loopCharacteristics) {\n      if (isSequential === undefined) {\n        renderer('LoopMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === false) {\n        renderer('ParallelMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === true) {\n        renderer('SequentialMarker')(parentGfx, element, position);\n      }\n    }\n  }\n\n  function renderDataItemCollection(parentGfx, element) {\n    var yPosition = (element.height - 16) / element.height;\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.451,\n        my: yPosition\n      }\n    });\n    /* collection path */\n\n    drawPath(parentGfx, pathData, {\n      strokeWidth: 2\n    });\n  } // extension API, use at your own risk\n\n\n  this._drawPath = drawPath;\n}\ninherits(BpmnRenderer, BaseRenderer);\nBpmnRenderer.$inject = ['config.bpmnRenderer', 'eventBus', 'styles', 'pathMap', 'canvas', 'textRenderer'];\n\nBpmnRenderer.prototype.canRender = function (element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\nBpmnRenderer.prototype.drawShape = function (parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n  /* jshint -W040 */\n\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.drawConnection = function (parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n  /* jshint -W040 */\n\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.getShapePath = function (element) {\n  if (is(element, 'bpmn:Event')) {\n    return getCirclePath(element);\n  }\n\n  if (is(element, 'bpmn:Activity')) {\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\n  }\n\n  if (is(element, 'bpmn:Gateway')) {\n    return getDiamondPath(element);\n  }\n\n  return getRectPath(element);\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/draw/BpmnRenderer.js"],"names":["inherits","isObject","assign","forEach","BaseRenderer","isExpanded","isEventSubProcess","is","createLine","isTypedEvent","isThrowEvent","isCollection","getDi","getSemantic","getCirclePath","getRoundRectPath","getDiamondPath","getRectPath","getFillColor","getStrokeColor","query","domQuery","append","svgAppend","attr","svgAttr","create","svgCreate","classes","svgClasses","rotate","transform","translate","Ids","RENDERER_IDS","TASK_BORDER_RADIUS","INNER_OUTER_DIST","DEFAULT_FILL_OPACITY","HIGH_FILL_OPACITY","BpmnRenderer","config","eventBus","styles","pathMap","canvas","textRenderer","priority","call","defaultFillColor","defaultStrokeColor","rendererId","next","markers","computeStyle","addMarker","id","options","attrs","fill","strokeWidth","strokeLinecap","strokeDasharray","ref","x","y","scale","marker","element","viewBox","refX","refY","markerWidth","markerHeight","orient","defs","_svg","type","stroke","createMarker","sequenceflowEnd","d","messageflowStart","cx","cy","r","messageflowEnd","associationStart","associationEnd","conditionalflowMarker","conditionaldefaultflowMarker","drawCircle","parentGfx","width","height","offset","fillOpacity","circle","Math","round","drawRect","rect","rx","ry","drawDiamond","x_2","y_2","points","pointsString","map","point","join","polygon","drawLine","waypoints","line","drawPath","path","drawMarker","as","handlers","renderer","renderEventContent","event","isThrowing","parallelMultiple","renderLabel","label","size","text","createText","add","renderEmbeddedLabel","align","semantic","name","box","padding","style","renderExternalLabel","fitBox","getExternalStyle","renderLaneLabel","textBox","top","createPathFromConnection","connection","pathData","i","length","isInterrupting","getScaledPath","xScaleFactor","yScaleFactor","containerWidth","containerHeight","position","mx","my","messagePath","linePathData","outer","attachTaskMarkers","task","pathDataBG","abspos","fillPathData","pathData2","pathData3","instantiate","headerPathData","businessHeaderPath","headerData","businessPath","expanded","innerAttrs","lane","expandedPool","text2","participantMultiplicity","$type","diamond","isMarkerVisible","eventGatewayType","drawEvent","parallelPath","innerCircle","strokeLinejoin","markerEnd","sequenceFlow","source","businessObject","conditionExpression","$instanceOf","markerStart","default","associationDirection","di","messageRef","midPoint","getPointAtLength","getTotalLength","markerPathData","messageAttrs","messageVisibleKind","elementObject","renderDataItemCollection","arrowPathData","getRawPath","DATA_STORE_PATH","elementStore","cancel","cancelActivity","outerAttrs","pointerEvents","textElement","textPathData","markerPath","markerRect","parallel","seq","markerMath","compensation","loop","strokeMiterlimit","adhoc","taskMarkers","obj","subprocess","indexOf","isForCompensation","loopCharacteristics","isSequential","undefined","yPosition","_drawPath","$inject","prototype","canRender","drawShape","h","drawConnection","getShapePath"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\nimport {\n  isObject,\n  assign,\n  forEach\n} from 'min-dash';\n\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../util/DiUtil';\n\nimport { is } from '../util/ModelUtil';\n\nimport {\n  createLine\n} from 'diagram-js/lib/util/RenderUtil';\n\nimport {\n  isTypedEvent,\n  isThrowEvent,\n  isCollection,\n  getDi,\n  getSemantic,\n  getCirclePath,\n  getRoundRectPath,\n  getDiamondPath,\n  getRectPath,\n  getFillColor,\n  getStrokeColor\n} from './BpmnRenderUtil';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  classes as svgClasses\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  transform,\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nimport Ids from 'ids';\n\nvar RENDERER_IDS = new Ids();\n\nvar TASK_BORDER_RADIUS = 10;\nvar INNER_OUTER_DIST = 3;\n\nvar DEFAULT_FILL_OPACITY = .95,\n    HIGH_FILL_OPACITY = .35;\n\n\nexport default function BpmnRenderer(\n    config, eventBus, styles, pathMap,\n    canvas, textRenderer, priority) {\n\n  BaseRenderer.call(this, eventBus, priority);\n\n  var defaultFillColor = config && config.defaultFillColor,\n      defaultStrokeColor = config && config.defaultStrokeColor;\n\n  var rendererId = RENDERER_IDS.next();\n\n  var markers = {};\n\n  var computeStyle = styles.computeStyle;\n\n  function addMarker(id, options) {\n    var attrs = assign({\n      fill: 'black',\n      strokeWidth: 1,\n      strokeLinecap: 'round',\n      strokeDasharray: 'none'\n    }, options.attrs);\n\n    var ref = options.ref || { x: 0, y: 0 };\n\n    var scale = options.scale || 1;\n\n    // fix for safari / chrome / firefox bug not correctly\n    // resetting stroke dash array\n    if (attrs.strokeDasharray === 'none') {\n      attrs.strokeDasharray = [10000, 1];\n    }\n\n    var marker = svgCreate('marker');\n\n    svgAttr(options.element, attrs);\n\n    svgAppend(marker, options.element);\n\n    svgAttr(marker, {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n\n    var defs = domQuery('defs', canvas._svg);\n\n    if (!defs) {\n      defs = svgCreate('defs');\n\n      svgAppend(canvas._svg, defs);\n    }\n\n    svgAppend(defs, marker);\n\n    markers[id] = marker;\n  }\n\n  function marker(type, fill, stroke) {\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\n\n    if (!markers[id]) {\n      createMarker(type, fill, stroke);\n    }\n\n    return 'url(#' + id + ')';\n  }\n\n  function createMarker(type, fill, stroke) {\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\n\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path');\n      svgAttr(sequenceflowEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\n\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: { x: 11, y: 10 },\n        scale: 0.5,\n        attrs: {\n          fill: stroke,\n          stroke: stroke\n        }\n      });\n    }\n\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle');\n      svgAttr(messageflowStart, { cx: 6, cy: 6, r: 3.5 });\n\n      addMarker(id, {\n        element: messageflowStart,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: 6, y: 6 }\n      });\n    }\n\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path');\n      svgAttr(messageflowEnd, { d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z' });\n\n      addMarker(id, {\n        element: messageflowEnd,\n        attrs: {\n          fill: fill,\n          stroke: stroke,\n          strokeLinecap: 'butt'\n        },\n        ref: { x: 8.5, y: 5 }\n      });\n    }\n\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path');\n      svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\n\n      addMarker(id, {\n        element: associationStart,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path');\n      svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\n\n      addMarker(id, {\n        element: associationEnd,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 12, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-flow-marker') {\n      var conditionalflowMarker = svgCreate('path');\n      svgAttr(conditionalflowMarker, { d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z' });\n\n      addMarker(id, {\n        element: conditionalflowMarker,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: -1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-default-flow-marker') {\n      var conditionaldefaultflowMarker = svgCreate('path');\n      svgAttr(conditionaldefaultflowMarker, { d: 'M 6 4 L 10 16' });\n\n      addMarker(id, {\n        element: conditionaldefaultflowMarker,\n        attrs: {\n          stroke: stroke\n        },\n        ref: { x: 0, y: 10 },\n        scale: 0.5\n      });\n    }\n  }\n\n  function drawCircle(parentGfx, width, height, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    if (attrs.fill === 'none') {\n      delete attrs.fillOpacity;\n    }\n\n    var cx = width / 2,\n        cy = height / 2;\n\n    var circle = svgCreate('circle');\n    svgAttr(circle, {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    });\n    svgAttr(circle, attrs);\n\n    svgAppend(parentGfx, circle);\n\n    return circle;\n  }\n\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var rect = svgCreate('rect');\n    svgAttr(rect, {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    });\n    svgAttr(rect, attrs);\n\n    svgAppend(parentGfx, rect);\n\n    return rect;\n  }\n\n  function drawDiamond(parentGfx, width, height, attrs) {\n\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n\n    var points = [{ x: x_2, y: 0 }, { x: width, y: y_2 }, { x: x_2, y: height }, { x: 0, y: y_2 }];\n\n    var pointsString = points.map(function(point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var polygon = svgCreate('polygon');\n    svgAttr(polygon, {\n      points: pointsString\n    });\n    svgAttr(polygon, attrs);\n\n    svgAppend(parentGfx, polygon);\n\n    return polygon;\n  }\n\n  function drawLine(parentGfx, waypoints, attrs) {\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'none'\n    });\n\n    var line = createLine(waypoints, attrs);\n\n    svgAppend(parentGfx, line);\n\n    return line;\n  }\n\n  function drawPath(parentGfx, d, attrs) {\n\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      strokeWidth: 2,\n      stroke: 'black'\n    });\n\n    var path = svgCreate('path');\n    svgAttr(path, { d: d });\n    svgAttr(path, attrs);\n\n    svgAppend(parentGfx, path);\n\n    return path;\n  }\n\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\n  }\n\n  function as(type) {\n    return function(parentGfx, element) {\n      return handlers[type](parentGfx, element);\n    };\n  }\n\n  function renderer(type) {\n    return handlers[type];\n  }\n\n  function renderEventContent(element, parentGfx) {\n\n    var event = getSemantic(element);\n    var isThrowing = isThrowEvent(event);\n\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\n    }\n\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: false })) {\n      return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: true })) {\n      return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    return null;\n  }\n\n  function renderLabel(parentGfx, label, options) {\n\n    options = assign({\n      size: {\n        width: 100\n      }\n    }, options);\n\n    var text = textRenderer.createText(label || '', options);\n\n    svgClasses(text).add('djs-label');\n\n    svgAppend(parentGfx, text);\n\n    return text;\n  }\n\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    var semantic = getSemantic(element);\n\n    return renderLabel(parentGfx, semantic.name, {\n      box: element,\n      align: align,\n      padding: 5,\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n  }\n\n  function renderExternalLabel(parentGfx, element) {\n    var semantic = getSemantic(element);\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n\n    return renderLabel(parentGfx, semantic.name, {\n      box: box,\n      fitBox: true,\n      style: assign(\n        {},\n        textRenderer.getExternalStyle(),\n        {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      )\n    });\n  }\n\n  function renderLaneLabel(parentGfx, text, element) {\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: element.height\n      },\n      align: 'center-middle',\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n\n    var top = -1 * element.height;\n\n    transform(textBox, 0, -top, 270);\n  }\n\n  function createPathFromConnection(connection) {\n    var waypoints = connection.waypoints;\n\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\n    for (var i = 1; i < waypoints.length; i++) {\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\n    }\n    return pathData;\n  }\n\n  var handlers = this.handlers = {\n    'bpmn:Event': function(parentGfx, element, attrs) {\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawCircle(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:StartEvent': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var semantic = getSemantic(element);\n\n      if (!semantic.isInterrupting) {\n        attrs = {\n          strokeDasharray: '6',\n          strokeLinecap: 'round',\n          fill: getFillColor(element, defaultFillColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n      }\n\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\n\n      renderEventContent(element, parentGfx);\n\n      return circle;\n    },\n    'bpmn:MessageEventDefinition': function(parentGfx, element, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\n\n      var messagePath = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: stroke\n      });\n\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 2,\n        strokeLinecap: 'square',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      for (var i = 0;i < 12; i++) {\n\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n\n        var width = element.width / 2;\n        var height = element.height / 2;\n\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          strokeLinecap: 'square',\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')',\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:LinkEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:CancelEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      var path = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n\n      rotate(path, 45);\n\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:SignalEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.222,\n          my: 0.36\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(event, defaultStrokeColor),\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:EndEvent': function(parentGfx, element) {\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 4,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx, true);\n\n      return circle;\n    },\n    'bpmn:TerminateEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        strokeWidth: 4,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return circle;\n    },\n    'bpmn:IntermediateEvent': function(parentGfx, element) {\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner */\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        strokeWidth: 1,\n        fill: getFillColor(element, 'none'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n\n    'bpmn:Activity': function(parentGfx, element, attrs) {\n\n      attrs = attrs || {};\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\n    },\n\n    'bpmn:Task': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\n      attachTaskMarkers(parentGfx, element);\n\n      return rect;\n    },\n    'bpmn:ServiceTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n\n      /* service bg */ drawPath(parentGfx, pathDataBG, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\n        abspos: {\n          x: 17.2,\n          y: 18\n        }\n      });\n\n      /* service fill */ drawPath(parentGfx, fillPathData, {\n        strokeWidth: 0,\n        fill: getFillColor(element, defaultFillColor)\n      });\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n\n      /* service */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:UserTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var x = 15;\n      var y = 12;\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user2 path */ drawPath(parentGfx, pathData2, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user3 path */ drawPath(parentGfx, pathData3, {\n        strokeWidth: 0.5,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ManualTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n\n      /* manual path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5, // 0.25,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SendTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n\n      /* send path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getFillColor(element, defaultFillColor)\n      });\n\n      return task;\n    },\n    'bpmn:ReceiveTask' : function(parentGfx, element) {\n      var semantic = getSemantic(element);\n\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData;\n\n      if (semantic.instantiate) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, { strokeWidth: 1 });\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n\n      /* receive path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ScriptTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n\n      /* script path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:BusinessRuleTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, '#aaaaaa'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SubProcess': function(parentGfx, element, attrs) {\n      attrs = assign({\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs);\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      var expanded = isExpanded(element);\n\n      if (isEventSubProcess(element)) {\n        svgAttr(rect, {\n          strokeDasharray: '1,2'\n        });\n      }\n\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\n\n      if (expanded) {\n        attachTaskMarkers(parentGfx, element);\n      } else {\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\n      }\n\n      return rect;\n    },\n    'bpmn:AdHocSubProcess': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element);\n    },\n    'bpmn:Transaction': function(parentGfx, element) {\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\n\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner path */ drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\n\n      return outer;\n    },\n    'bpmn:CallActivity': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\n        strokeWidth: 5\n      });\n    },\n    'bpmn:Participant': function(parentGfx, element) {\n\n      var attrs = {\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\n\n      var expandedPool = isExpanded(element);\n\n      if (expandedPool) {\n        drawLine(parentGfx, [\n          { x: 30, y: 0 },\n          { x: 30, y: element.height }\n        ], {\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n        var text = getSemantic(element).name;\n        renderLaneLabel(parentGfx, text, element);\n      } else {\n        // Collapsed pool draw text inline\n        var text2 = getSemantic(element).name;\n        renderLabel(parentGfx, text2, {\n          box: element, align: 'center-middle',\n          style: {\n            fill: getStrokeColor(element, defaultStrokeColor)\n          }\n        });\n      }\n\n      var participantMultiplicity = !!(getSemantic(element).participantMultiplicity);\n\n      if (participantMultiplicity) {\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\n      }\n\n      return lane;\n    },\n    'bpmn:Lane': function(parentGfx, element, attrs) {\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: HIGH_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs));\n\n      var semantic = getSemantic(element);\n\n      if (semantic.$type === 'bpmn:Lane') {\n        var text = semantic.name;\n        renderLaneLabel(parentGfx, text, element);\n      }\n\n      return rect;\n    },\n    'bpmn:InclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* circle path */\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        strokeWidth: 2.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n\n      if ((getDi(element).isMarkerVisible)) {\n        drawPath(parentGfx, pathData, {\n          strokeWidth: 1,\n          fill: getStrokeColor(element, defaultStrokeColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return diamond;\n    },\n    'bpmn:ComplexGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor:0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n\n      /* complex path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ParallelGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor:0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n\n      /* parallel path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:EventBasedGateway': function(parentGfx, element) {\n\n      var semantic = getSemantic(element);\n\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* outer circle path */ drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        strokeWidth: 1,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var type = semantic.eventGatewayType;\n      var instantiate = !!semantic.instantiate;\n\n      function drawEvent() {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n\n        var attrs = {\n          strokeWidth: 2,\n          fill: getFillColor(element, 'none'),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n\n        /* event path */ drawPath(parentGfx, pathData, attrs);\n      }\n\n      if (type === 'Parallel') {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor:0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n\n        var parallelPath = drawPath(parentGfx, pathData);\n        svgAttr(parallelPath, {\n          strokeWidth: 1,\n          fill: 'none'\n        });\n      } else if (type === 'Exclusive') {\n\n        if (!instantiate) {\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\n          svgAttr(innerCircle, {\n            strokeWidth: 1,\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor)\n          });\n        }\n\n        drawEvent();\n      }\n\n\n      return diamond;\n    },\n    'bpmn:Gateway': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:SequenceFlow': function(parentGfx, element) {\n      var pathData = createPathFromConnection(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var attrs = {\n        strokeLinejoin: 'round',\n        markerEnd: marker('sequenceflow-end', fill, stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      var sequenceFlow = getSemantic(element);\n\n      var source;\n\n      if (element.source) {\n        source = element.source.businessObject;\n\n        // conditional flow marker\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\n          svgAttr(path, {\n            markerStart: marker('conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) &&\n            source.default === sequenceFlow) {\n          svgAttr(path, {\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n\n      return path;\n    },\n    'bpmn:Association': function(parentGfx, element, attrs) {\n\n      var semantic = getSemantic(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      attrs = assign({\n        strokeDasharray: '0.5, 5',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs || {});\n\n      if (semantic.associationDirection === 'One' ||\n          semantic.associationDirection === 'Both') {\n        attrs.markerEnd = marker('association-end', fill, stroke);\n      }\n\n      if (semantic.associationDirection === 'Both') {\n        attrs.markerStart = marker('association-start', fill, stroke);\n      }\n\n      return drawLine(parentGfx, element.waypoints, attrs);\n    },\n    'bpmn:DataInputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:DataOutputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:MessageFlow': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          di = getDi(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var pathData = createPathFromConnection(element);\n\n      var attrs = {\n        markerEnd: marker('messageflow-end', fill, stroke),\n        markerStart: marker('messageflow-start', fill, stroke),\n        strokeDasharray: '10, 12',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        strokeWidth: '1.5px',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      if (semantic.messageRef) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n\n        var messageAttrs = { strokeWidth: 1 };\n\n        if (di.messageVisibleKind === 'initiating') {\n          messageAttrs.fill = 'white';\n          messageAttrs.stroke = 'black';\n        } else {\n          messageAttrs.fill = '#888';\n          messageAttrs.stroke = 'white';\n        }\n\n        drawPath(parentGfx, markerPathData, messageAttrs);\n      }\n\n      return path;\n    },\n    'bpmn:DataObject': function(parentGfx, element) {\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.474,\n          my: 0.296\n        }\n      });\n\n      var elementObject = drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var semantic = getSemantic(element);\n\n      if (isCollection(semantic)) {\n        renderDataItemCollection(parentGfx, element);\n      }\n\n      return elementObject;\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataInput': function(parentGfx, element) {\n\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* input arrow path */ drawPath(parentGfx, arrowPathData, { strokeWidth: 1 });\n\n      return elementObject;\n    },\n    'bpmn:DataOutput': function(parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* output arrow path */ drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: 'black'\n      });\n\n      return elementObject;\n    },\n    'bpmn:DataStoreReference': function(parentGfx, element) {\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return elementStore;\n    },\n    'bpmn:BoundaryEvent': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          cancel = semantic.cancelActivity;\n\n      var attrs = {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      if (!cancel) {\n        attrs.strokeDasharray = '6';\n        attrs.strokeLinecap = 'round';\n      }\n\n      // apply fillOpacity\n      var outerAttrs = assign({}, attrs, {\n        fillOpacity: 1\n      });\n\n      // apply no-fill\n      var innerAttrs = assign({}, attrs, {\n        fill: 'none'\n      });\n\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\n\n      /* inner path */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:Group': function(parentGfx, element) {\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        strokeWidth: 1,\n        strokeDasharray: '8,3,1,3',\n        fill: 'none',\n        pointerEvents: 'none'\n      });\n    },\n    'label': function(parentGfx, element) {\n      return renderExternalLabel(parentGfx, element);\n    },\n    'bpmn:TextAnnotation': function(parentGfx, element) {\n      var style = {\n        'fill': 'none',\n        'stroke': 'none'\n      };\n\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var text = getSemantic(element).text || '';\n      renderLabel(parentGfx, text, {\n        box: element,\n        align: 'left-top',\n        padding: 5,\n        style: {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      });\n\n      return textElement;\n    },\n    'ParticipantMultiplicityMarker': function(parentGfx, element) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SubProcessMarker': function(parentGfx, element) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      // Process marker is placed in the middle of the box\n      // therefore fixed values can be used here\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'ParallelMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.parallel) / element.width),\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SequentialMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.seq) / element.width),\n          my: (element.height - 19) / element.height\n        }\n      });\n\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'CompensationMarker': function(parentGfx, element, position) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.compensation) / element.width),\n          my: (element.height - 13) / element.height\n        }\n      });\n\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'LoopMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.loop) / element.width),\n          my: (element.height - 7) / element.height\n        }\n      });\n\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeLinecap: 'round',\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.adhoc) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    }\n  };\n\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\n    var obj = getSemantic(element);\n\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\n    var position;\n\n    if (subprocess) {\n      position = {\n        seq: -21,\n        parallel: -22,\n        compensation: -42,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      position = {\n        seq: -3,\n        parallel: -6,\n        compensation: -27,\n        loop: 0,\n        adhoc: 10\n      };\n    }\n\n    forEach(taskMarkers, function(marker) {\n      renderer(marker)(parentGfx, element, position);\n    });\n\n    if (obj.isForCompensation) {\n      renderer('CompensationMarker')(parentGfx, element, position);\n    }\n\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\n      renderer('AdhocMarker')(parentGfx, element, position);\n    }\n\n    var loopCharacteristics = obj.loopCharacteristics,\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\n\n    if (loopCharacteristics) {\n\n      if (isSequential === undefined) {\n        renderer('LoopMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === false) {\n        renderer('ParallelMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === true) {\n        renderer('SequentialMarker')(parentGfx, element, position);\n      }\n    }\n  }\n\n  function renderDataItemCollection(parentGfx, element) {\n\n    var yPosition = (element.height - 16) / element.height;\n\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.451,\n        my: yPosition\n      }\n    });\n\n    /* collection path */ drawPath(parentGfx, pathData, {\n      strokeWidth: 2\n    });\n  }\n\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n\n}\n\n\ninherits(BpmnRenderer, BaseRenderer);\n\nBpmnRenderer.$inject = [\n  'config.bpmnRenderer',\n  'eventBus',\n  'styles',\n  'pathMap',\n  'canvas',\n  'textRenderer'\n];\n\n\nBpmnRenderer.prototype.canRender = function(element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\nBpmnRenderer.prototype.drawShape = function(parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.drawConnection = function(parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.getShapePath = function(element) {\n\n  if (is(element, 'bpmn:Event')) {\n    return getCirclePath(element);\n  }\n\n  if (is(element, 'bpmn:Activity')) {\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\n  }\n\n  if (is(element, 'bpmn:Gateway')) {\n    return getDiamondPath(element);\n  }\n\n  return getRectPath(element);\n};\n"]},"metadata":{},"sourceType":"module"}