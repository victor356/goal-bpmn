{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vittorio\\\\Documents\\\\GitHub\\\\SPM2021-MTV\\\\frontend\\\\src\\\\components\\\\bpmn\\\\bpmn.modeler.component.jsx\";\nimport React, { Component } from 'react';\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\nimport 'bpmn-js/dist/assets/diagram-js.css';\nimport 'bpmn-font/dist/css/bpmn-embedded.css';\nimport { emptyBpmn } from '../../assets/empty.bpmn';\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\nimport \"./bpmn.scss\";\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { ExternalLink } from 'react-external-link'; // prova gatto\n\nimport resizeAllModule from '../../lib/resize-all-rules';\nimport colorPickerModule from '../../lib/color-picker';\nimport nyanDrawModule from '../../lib/nyan/draw';\nimport nyanPaletteModule from '../../lib/nyan/palette';\nimport templates from '../bpmn/element-templates/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BpmnModelerComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.modeler = null;\n    this.listaNomi = [];\n\n    this.componentDidMount = () => {\n      this.modeler = new BpmnModeler({\n        container: '#bpmnview',\n        keyboard: {\n          bindTo: window\n        },\n        propertiesPanel: {\n          parent: '#propview'\n        },\n        additionalModules: [propertiesPanelModule, propertiesProviderModule, // templates,\n        // gatto\n        resizeAllModule, colorPickerModule, nyanDrawModule, nyanPaletteModule],\n        elementTemplates: templates,\n        moddleExtensions: {\n          camunda: camundaModdleDescriptor\n        }\n      });\n      this.newBpmnDiagram();\n    };\n\n    this.newBpmnDiagram = () => {\n      this.openBpmnDiagram(emptyBpmn);\n      console.log(templates);\n    };\n\n    this.openBpmnDiagram = xml => {\n      this.modeler.importXML(xml, error => {\n        if (error) {\n          return console.log('fail import xml');\n        }\n\n        var canvas = this.modeler.get('canvas');\n        canvas.zoom('fit-viewport');\n      });\n    };\n\n    this.saveDiagram = done => {\n      this.modeler.saveXML({\n        format: true\n      }, function (err, xml) {\n        done(err, xml);\n      });\n    };\n\n    this.Validate = () => {\n      const name = this.getParameter(); // console.log('name', name);\n\n      this.saveDiagram(function (err, xml) {\n        const formData = new FormData();\n        const imgBlob = new Blob([xml], {\n          type: 'xml'\n        });\n        formData.append(\"file\", imgBlob, name);\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', 'http://localhost:8081/upload');\n\n        xhr.onload = function (e) {\n          console.log(\"xhr onload function\");\n        };\n\n        xhr.send(formData);\n      });\n    };\n\n    this.Download = () => {\n      this.modeler.saveXML({\n        format: true\n      }, function (err, xml) {\n        if (err) {\n          console.error(err);\n        } else {\n          var encodedData = err ? '' : encodeURIComponent(xml);\n          window.location.href = 'data:application/bpmn20-xml;charset=UTF-8,' + encodedData;\n        }\n      });\n    };\n\n    this.getParameter = () => {\n      const canvas = this.modeler.get('canvas');\n      const rootElement = canvas.getRootElement();\n      console.log('Process Id:', rootElement.id);\n      rootElement.businessObject.participants.map((item, index) => {\n        this.listaNomi[index] = item.processRef.id; // return console.log('item', this.listaNomi[index]);\n      });\n      const formData = new FormData();\n      formData.append('nameList', this.listaNomi);\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', 'http://localhost:8081/uploadNames');\n\n      xhr.onload = function (e) {\n        console.log(\"xhr onload function\");\n      };\n\n      xhr.send(formData);\n      return rootElement.id;\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bpmncontainer\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"propview\",\n          style: {\n            width: '25%',\n            height: '100%',\n            float: 'right',\n            maxHeight: '100%',\n            overflowX: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bpmnview\",\n          style: {\n            width: '75%',\n            height: '100%',\n            float: 'left'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modelerBPMN\",\n          children: [/*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"http://localhost:8081/camunda/app/tasklist/\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"validateButton\",\n              onClick: () => {\n                this.Validate();\n              },\n              children: \"Validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 100\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downloadButton\",\n            onClick: () => {\n              this.Download();\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n}\n\nexport default BpmnModelerComponent;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/src/components/bpmn/bpmn.modeler.component.jsx"],"names":["React","Component","BpmnModeler","emptyBpmn","propertiesPanelModule","propertiesProviderModule","camundaModdleDescriptor","is","ExternalLink","resizeAllModule","colorPickerModule","nyanDrawModule","nyanPaletteModule","templates","BpmnModelerComponent","modeler","listaNomi","componentDidMount","container","keyboard","bindTo","window","propertiesPanel","parent","additionalModules","elementTemplates","moddleExtensions","camunda","newBpmnDiagram","openBpmnDiagram","console","log","xml","importXML","error","canvas","get","zoom","saveDiagram","done","saveXML","format","err","Validate","name","getParameter","formData","FormData","imgBlob","Blob","type","append","xhr","XMLHttpRequest","open","onload","e","send","Download","encodedData","encodeURIComponent","location","href","rootElement","getRootElement","id","businessObject","participants","map","item","index","processRef","render","width","height","float","maxHeight","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport 'bpmn-js/dist/assets/diagram-js.css';\r\nimport 'bpmn-font/dist/css/bpmn-embedded.css';\r\nimport { emptyBpmn } from '../../assets/empty.bpmn';\r\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\r\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\r\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\r\nimport \"./bpmn.scss\";\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { ExternalLink } from 'react-external-link';\r\n\r\n// prova gatto\r\nimport resizeAllModule from '../../lib/resize-all-rules';\r\nimport colorPickerModule from '../../lib/color-picker';\r\nimport nyanDrawModule from '../../lib/nyan/draw';\r\nimport nyanPaletteModule from '../../lib/nyan/palette';\r\nimport templates from '../bpmn/element-templates/data.json';\r\nclass BpmnModelerComponent extends Component {\r\n\r\n    modeler = null;\r\n    listaNomi = [];\r\n   \r\ncomponentDidMount = () => {\r\n    this.modeler = new BpmnModeler({\r\n        container: '#bpmnview',\r\n        keyboard: {\r\n            bindTo: window\r\n        },\r\n        propertiesPanel: {\r\n            parent: '#propview'\r\n        },\r\n        additionalModules: [\r\n            propertiesPanelModule,\r\n            propertiesProviderModule,\r\n           // templates,\r\n\r\n            // gatto\r\n             resizeAllModule,\r\n             colorPickerModule,\r\n             nyanDrawModule,\r\n             nyanPaletteModule\r\n        ],\r\n        elementTemplates: templates,\r\n        moddleExtensions: {\r\n            camunda: camundaModdleDescriptor\r\n        },\r\n       \r\n    \r\n\r\n    });\r\n\r\n    this.newBpmnDiagram();\r\n}\r\n\r\nnewBpmnDiagram = () => {\r\n    this.openBpmnDiagram(emptyBpmn);\r\n    \r\n    console.log(templates);\r\n\r\n}\r\n\r\n    openBpmnDiagram = (xml) => {\r\n        this.modeler.importXML(xml, (error) => {\r\n            if (error) {\r\n                return console.log('fail import xml');\r\n            }\r\n\r\n            var canvas = this.modeler.get('canvas');\r\n\r\n            canvas.zoom('fit-viewport');\r\n        });\r\n    }\r\n\r\n    saveDiagram = (done) => {\r\n\r\n        this.modeler.saveXML({ format: true }, function (err, xml) {\r\n            done(err, xml);\r\n        });\r\n    }\r\n    Validate = () => {\r\n        const name = this.getParameter();\r\n        // console.log('name', name);\r\n\r\n        this.saveDiagram(function (err, xml) {\r\n            const formData = new FormData();\r\n            const imgBlob = new Blob([xml], { type: 'xml' });\r\n            formData.append(\r\n                \"file\",\r\n                imgBlob,\r\n                name\r\n            );\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('POST', 'http://localhost:8081/upload');\r\n            xhr.onload = function (e) {\r\n                console.log(\"xhr onload function\");\r\n            };\r\n            xhr.send(formData);\r\n\r\n        });\r\n    }\r\n\r\n    Download = () => {\r\n        this.modeler.saveXML({ format: true }, function (err, xml) {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                var encodedData = err ? '' : encodeURIComponent(xml);\r\n                window.location.href = 'data:application/bpmn20-xml;charset=UTF-8,' + encodedData;\r\n            }\r\n        });\r\n    }\r\n\r\n    getParameter = () => {\r\n\r\n        const canvas = this.modeler.get('canvas');\r\n\r\n        const rootElement = canvas.getRootElement();\r\n\r\n        console.log('Process Id:', rootElement.id);\r\n        rootElement.businessObject.participants.map((item, index) => {\r\n            this.listaNomi[index] = item.processRef.id\r\n            // return console.log('item', this.listaNomi[index]);\r\n        })\r\n        const formData = new FormData();\r\n        formData.append('nameList', this.listaNomi);\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', 'http://localhost:8081/uploadNames');\r\n        xhr.onload = function (e) {\r\n            console.log(\"xhr onload function\");\r\n        };\r\n        xhr.send(formData);\r\n        return rootElement.id;\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div id=\"bpmncontainer\" style={{ width: '100%', height: '100%' }} >\r\n                <div id=\"propview\" style={{ width: '25%', height: '100%', float: 'right', maxHeight: '100%', overflowX: 'auto' }}></div>\r\n                <div id=\"bpmnview\" style={{ width: '75%', height: '100%', float: 'left' }}></div>\r\n                <div className=\"modelerBPMN\">\r\n                <ExternalLink  href=\"http://localhost:8081/camunda/app/tasklist/\" className=\"link\"><button className=\"validateButton\" onClick={() => { this.Validate() }}>Validate</button></ExternalLink>\r\n                    <button className=\"downloadButton\" onClick={() => { this.Download() }}>Download</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BpmnModelerComponent;\r\n"]},"metadata":{},"sourceType":"module"}