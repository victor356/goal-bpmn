{"ast":null,"code":"function ensureImported(element, target) {\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {// ignore\n    }\n  }\n\n  return element;\n}\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\n\n\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\n\n\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n/**\n * attribute accessor utility\n */\n\n\nvar LENGTH_ATTR = 2;\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n  var names = Object.keys(attrs),\n      i,\n      name;\n\n  for (i = 0, name; name = names[i]; i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\n\n\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n/**\r\n * Clear utility\r\n */\n\n\nfunction index(arr, obj) {\n  if (arr.indexOf) {\n    return arr.indexOf(obj);\n  }\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar re = /\\s+/;\nvar toString = Object.prototype.toString;\n\nfunction defined(o) {\n  return typeof o !== 'undefined';\n}\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\n\n\nfunction classes(el) {\n  return new ClassList(el);\n}\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n\n  this.el = el;\n  this.list = el.classList;\n}\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  } // fallback\n\n\n  var arr = this.array();\n  var i = index(arr, name);\n\n  if (!~i) {\n    arr.push(name);\n  }\n\n  if (defined(this.el.className.baseVal)) {\n    this.el.className.baseVal = arr.join(' ');\n  } else {\n    this.el.className = arr.join(' ');\n  }\n\n  return this;\n};\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' === toString.call(name)) {\n    return this.removeMatching(name);\n  } // classList\n\n\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  } // fallback\n\n\n  var arr = this.array();\n  var i = index(arr, name);\n\n  if (~i) {\n    arr.splice(i, 1);\n  }\n\n  this.el.className.baseVal = arr.join(' ');\n  return this;\n};\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\n\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\n\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if (defined(force)) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n\n    return this;\n  } // fallback\n\n\n  if (defined(force)) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n\n  if ('' === arr[0]) {\n    arr.shift();\n  }\n\n  return arr;\n};\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name);\n};\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\n\n\nfunction clear(element) {\n  var child;\n\n  while (child = element.firstChild) {\n    remove(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n  var unwrap = false; // ensure we import a valid svg document\n\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n  var parser; // parse\n\n  parser = new DOMParser();\n  parser.async = false;\n  return parser.parseFromString(svg, 'text/xml');\n}\n/**\n * Create utility for SVG elements\n */\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\n\n\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n/**\n * Events handling utility\n */\n\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n/**\n * Geometry helpers\n */\n// fake node used to instantiate svg geometry elements\n\n\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i,\n      k,\n      keys = Object.keys(props);\n\n  for (i = 0; k = keys[i]; i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n    case 0:\n      return point;\n\n    case 2:\n      x = {\n        x: x,\n        y: y\n      };\n      break;\n  }\n\n  return extend(point, x);\n}\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\n\n\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n    case 0:\n      return matrix;\n\n    case 1:\n      return extend(matrix, a);\n\n    case 6:\n      return extend(matrix, {\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n        e: e,\n        f: f\n      });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}\n/**\n * Serialization util\n */\n\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n    // TEXT\n    case 3:\n      // replace special XML characters\n      output.push(escape(node.textContent, TEXT_ENTITIES));\n      break;\n    // ELEMENT\n\n    case 1:\n      output.push('<', node.tagName);\n\n      if (node.hasAttributes()) {\n        attrMap = node.attributes;\n\n        for (i = 0, len = attrMap.length; i < len; ++i) {\n          attrNode = attrMap.item(i);\n          output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n        }\n      }\n\n      if (node.hasChildNodes()) {\n        output.push('>');\n        childNodes = node.childNodes;\n\n        for (i = 0, len = childNodes.length; i < len; ++i) {\n          serialize(childNodes.item(i), output);\n        }\n\n        output.push('</', node.tagName, '>');\n      } else {\n        output.push('/>');\n      }\n\n      break;\n    // COMMENT\n\n    case 8:\n      output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n      break;\n    // CDATA\n\n    case 4:\n      output.push('<![CDATA[', node.nodeValue, ']]>');\n      break;\n\n    default:\n      throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\nfunction set(element, svg) {\n  var parsed = parse(svg); // clear element contents\n\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes); // import + append each node\n\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n  if (svg !== undefined) {\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n/**\n * Selection utilities\n */\n\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n  return [].map.call(nodes, function (element) {\n    return element;\n  });\n}\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\n\n\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\n\n\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n/**\n * Replace utility\n */\n\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n/**\n * transform accessor utility\n */\n\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n  transformList.clear();\n\n  for (i = 0; t = transforms[i]; i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\n\n\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n    if (!Array.isArray(transforms)) {\n      transforms = [transforms];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/tiny-svg/dist/index.esm.js"],"names":["ensureImported","element","target","ownerDocument","importNode","e","appendTo","appendChild","append","node","LENGTH_ATTR","CSS_PROPERTIES","getAttribute","name","style","getAttributeNS","setAttribute","value","hyphenated","replace","toLowerCase","type","String","setAttributeNS","setAttributes","attrs","names","Object","keys","i","attr","undefined","index","arr","obj","indexOf","length","re","toString","prototype","defined","o","classes","el","ClassList","nodeType","Error","list","classList","add","array","push","className","baseVal","join","remove","call","removeMatching","splice","test","toggle","force","has","str","split","shift","contains","parent","parentNode","removeChild","clear","child","firstChild","clone","cloneNode","ns","svg","SVG_START","parse","unwrap","substring","parsed","parseDocument","fragment","document","createDocumentFragment","parser","DOMParser","async","parseFromString","create","charAt","createElementNS","on","event","listener","useCapture","addEventListener","off","removeEventListener","extend","object","props","k","createPoint","x","y","point","createSVGPoint","arguments","createMatrix","a","b","c","d","f","matrix","createSVGMatrix","createTransform","createSVGTransformFromMatrix","createSVGTransform","TEXT_ENTITIES","ATTR_ENTITIES","ENTITY_REPLACEMENT","escape","pattern","replaceFn","match","entity","serialize","output","len","attrMap","attrNode","childNodes","textContent","tagName","hasAttributes","attributes","item","hasChildNodes","nodeValue","set","isFragment","documentElement","nodes","slice","get","nextSibling","nodeName","innerSVG","message","Array","select","selector","querySelector","selectAll","querySelectorAll","map","prependTo","insertBefore","prepend","replacement","replaceChild","wrapMatrix","transformList","transform","SVGMatrix","setTransforms","transforms","t","appendItem","isArray","consolidate"],"mappings":"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","sourcesContent":["function ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 1:\n    return extend(matrix, a);\n  case 6:\n    return extend(matrix, {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\nfunction set(element, svg) {\n\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n\n  return [].map.call(nodes, function(element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n\n    if (!Array.isArray(transforms)) {\n      transforms = [ transforms ];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\n"]},"metadata":{},"sourceType":"module"}