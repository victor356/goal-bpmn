{"ast":null,"code":"export default function UpdateSemanticParentHandler(bpmnUpdater) {\n  this._bpmnUpdater = bpmnUpdater;\n}\nUpdateSemanticParentHandler.$inject = ['bpmnUpdater'];\n\nUpdateSemanticParentHandler.prototype.execute = function (context) {\n  var dataStoreBo = context.dataStoreBo,\n      newSemanticParent = context.newSemanticParent,\n      newDiParent = context.newDiParent;\n  context.oldSemanticParent = dataStoreBo.$parent;\n  context.oldDiParent = dataStoreBo.di.$parent; // update semantic parent\n\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, newSemanticParent); // update DI parent\n\n\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, newDiParent);\n};\n\nUpdateSemanticParentHandler.prototype.revert = function (context) {\n  var dataStoreBo = context.dataStoreBo,\n      oldSemanticParent = context.oldSemanticParent,\n      oldDiParent = context.oldDiParent; // update semantic parent\n\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, oldSemanticParent); // update DI parent\n\n\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, oldDiParent);\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/cmd/UpdateSemanticParentHandler.js"],"names":["UpdateSemanticParentHandler","bpmnUpdater","_bpmnUpdater","$inject","prototype","execute","context","dataStoreBo","newSemanticParent","newDiParent","oldSemanticParent","$parent","oldDiParent","di","updateSemanticParent","updateDiParent","revert"],"mappings":"AAAA,eAAe,SAASA,2BAAT,CAAqCC,WAArC,EAAkD;AAC/D,OAAKC,YAAL,GAAoBD,WAApB;AACD;AAEDD,2BAA2B,CAACG,OAA5B,GAAsC,CAAE,aAAF,CAAtC;;AAGAH,2BAA2B,CAACI,SAA5B,CAAsCC,OAAtC,GAAgD,UAASC,OAAT,EAAkB;AAChE,MAAIC,WAAW,GAAGD,OAAO,CAACC,WAA1B;AAAA,MACIC,iBAAiB,GAAGF,OAAO,CAACE,iBADhC;AAAA,MAEIC,WAAW,GAAGH,OAAO,CAACG,WAF1B;AAIAH,EAAAA,OAAO,CAACI,iBAAR,GAA4BH,WAAW,CAACI,OAAxC;AACAL,EAAAA,OAAO,CAACM,WAAR,GAAsBL,WAAW,CAACM,EAAZ,CAAeF,OAArC,CANgE,CAQhE;;AACA,OAAKT,YAAL,CAAkBY,oBAAlB,CAAuCP,WAAvC,EAAoDC,iBAApD,EATgE,CAWhE;;;AACA,OAAKN,YAAL,CAAkBa,cAAlB,CAAiCR,WAAW,CAACM,EAA7C,EAAiDJ,WAAjD;AACD,CAbD;;AAeAT,2BAA2B,CAACI,SAA5B,CAAsCY,MAAtC,GAA+C,UAASV,OAAT,EAAkB;AAC/D,MAAIC,WAAW,GAAGD,OAAO,CAACC,WAA1B;AAAA,MACIG,iBAAiB,GAAGJ,OAAO,CAACI,iBADhC;AAAA,MAEIE,WAAW,GAAGN,OAAO,CAACM,WAF1B,CAD+D,CAK/D;;AACA,OAAKV,YAAL,CAAkBY,oBAAlB,CAAuCP,WAAvC,EAAoDG,iBAApD,EAN+D,CAQ/D;;;AACA,OAAKR,YAAL,CAAkBa,cAAlB,CAAiCR,WAAW,CAACM,EAA7C,EAAiDD,WAAjD;AACD,CAVD","sourcesContent":["export default function UpdateSemanticParentHandler(bpmnUpdater) {\r\n  this._bpmnUpdater = bpmnUpdater;\r\n}\r\n\r\nUpdateSemanticParentHandler.$inject = [ 'bpmnUpdater' ];\r\n\r\n\r\nUpdateSemanticParentHandler.prototype.execute = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      newSemanticParent = context.newSemanticParent,\r\n      newDiParent = context.newDiParent;\r\n\r\n  context.oldSemanticParent = dataStoreBo.$parent;\r\n  context.oldDiParent = dataStoreBo.di.$parent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, newSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, newDiParent);\r\n};\r\n\r\nUpdateSemanticParentHandler.prototype.revert = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      oldSemanticParent = context.oldSemanticParent,\r\n      oldDiParent = context.oldDiParent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, oldSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, oldDiParent);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}