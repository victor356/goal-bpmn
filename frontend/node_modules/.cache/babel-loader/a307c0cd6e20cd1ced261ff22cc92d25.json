{"ast":null,"code":"export default function IdClaimHandler(moddle) {\n  this._moddle = moddle;\n}\nIdClaimHandler.$inject = ['moddle'];\n\nIdClaimHandler.prototype.execute = function (context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.claim(id, element);\n  } else {\n    ids.unclaim(id);\n  }\n};\n/**\n * Command revert implementation.\n */\n\n\nIdClaimHandler.prototype.revert = function (context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.unclaim(id);\n  } else {\n    ids.claim(id, element);\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/cmd/IdClaimHandler.js"],"names":["IdClaimHandler","moddle","_moddle","$inject","prototype","execute","context","ids","id","element","claiming","claim","unclaim","revert"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC7C,OAAKC,OAAL,GAAeD,MAAf;AACD;AAEDD,cAAc,CAACG,OAAf,GAAyB,CAAE,QAAF,CAAzB;;AAGAH,cAAc,CAACI,SAAf,CAAyBC,OAAzB,GAAmC,UAASC,OAAT,EAAkB;AACnD,MAAIC,GAAG,GAAG,KAAKL,OAAL,CAAaK,GAAvB;AAAA,MACIC,EAAE,GAAGF,OAAO,CAACE,EADjB;AAAA,MAEIC,OAAO,GAAGH,OAAO,CAACG,OAFtB;AAAA,MAGIC,QAAQ,GAAGJ,OAAO,CAACI,QAHvB;;AAKA,MAAIA,QAAJ,EAAc;AACZH,IAAAA,GAAG,CAACI,KAAJ,CAAUH,EAAV,EAAcC,OAAd;AACD,GAFD,MAEO;AACLF,IAAAA,GAAG,CAACK,OAAJ,CAAYJ,EAAZ;AACD;AACF,CAXD;AAaA;AACA;AACA;;;AACAR,cAAc,CAACI,SAAf,CAAyBS,MAAzB,GAAkC,UAASP,OAAT,EAAkB;AAClD,MAAIC,GAAG,GAAG,KAAKL,OAAL,CAAaK,GAAvB;AAAA,MACIC,EAAE,GAAGF,OAAO,CAACE,EADjB;AAAA,MAEIC,OAAO,GAAGH,OAAO,CAACG,OAFtB;AAAA,MAGIC,QAAQ,GAAGJ,OAAO,CAACI,QAHvB;;AAKA,MAAIA,QAAJ,EAAc;AACZH,IAAAA,GAAG,CAACK,OAAJ,CAAYJ,EAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACI,KAAJ,CAAUH,EAAV,EAAcC,OAAd;AACD;AACF,CAXD","sourcesContent":["export default function IdClaimHandler(moddle) {\n  this._moddle = moddle;\n}\n\nIdClaimHandler.$inject = [ 'moddle' ];\n\n\nIdClaimHandler.prototype.execute = function(context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.claim(id, element);\n  } else {\n    ids.unclaim(id);\n  }\n};\n\n/**\n * Command revert implementation.\n */\nIdClaimHandler.prototype.revert = function(context) {\n  var ids = this._moddle.ids,\n      id = context.id,\n      element = context.element,\n      claiming = context.claiming;\n\n  if (claiming) {\n    ids.unclaim(id);\n  } else {\n    ids.claim(id, element);\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}