{"ast":null,"code":"'use strict';\n\nvar ImplementationTypeHelper = require('../../../helper/ImplementationTypeHelper'),\n    InputOutputHelper = require('../../../helper/InputOutputHelper');\n\nvar triggerClickEvent = require('../../../Utils').triggerClickEvent;\n\nvar implementationType = require('./implementation/ImplementationType'),\n    delegate = require('./implementation/Delegate'),\n    external = require('./implementation/External'),\n    callable = require('./implementation/Callable'),\n    resultVariable = require('./implementation/ResultVariable');\n\nvar entryFactory = require('../../../factory/EntryFactory');\n\nvar domQuery = require('min-dom').query,\n    domClosest = require('min-dom').closest,\n    domClasses = require('min-dom').classes;\n\nfunction getImplementationType(element) {\n  return ImplementationTypeHelper.getImplementationType(element);\n}\n\nfunction getBusinessObject(element) {\n  return ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n}\n\nfunction isDmnCapable(element) {\n  return ImplementationTypeHelper.isDmnCapable(element);\n}\n\nfunction isExternalCapable(element) {\n  return ImplementationTypeHelper.isExternalCapable(element);\n}\n\nfunction isServiceTaskLike(element) {\n  return ImplementationTypeHelper.isServiceTaskLike(element);\n}\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  if (!isServiceTaskLike(getBusinessObject(element))) {\n    return;\n  }\n\n  var hasDmnSupport = isDmnCapable(element);\n  var hasExternalSupport = isExternalCapable(getBusinessObject(element)); // implementation type ////////////////////////////////////\n\n  group.entries = group.entries.concat(implementationType(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType,\n    hasDmnSupport: hasDmnSupport,\n    hasExternalSupport: hasExternalSupport,\n    hasServiceTaskLikeSupport: true\n  }, translate)); // delegate (class, expression, delegateExpression) //////////\n\n  group.entries = group.entries.concat(delegate(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType\n  }, translate)); // result variable /////////////////////////////////////////\n\n  group.entries = group.entries.concat(resultVariable(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType,\n    hideResultVariable: function (element, node) {\n      return getImplementationType(element) !== 'expression';\n    }\n  }, translate)); // external //////////////////////////////////////////////////\n\n  if (hasExternalSupport) {\n    group.entries = group.entries.concat(external(element, bpmnFactory, {\n      getBusinessObject: getBusinessObject,\n      getImplementationType: getImplementationType\n    }, translate));\n  } // dmn ////////////////////////////////////////////////////////\n\n\n  if (hasDmnSupport) {\n    group.entries = group.entries.concat(callable(element, bpmnFactory, {\n      getCallableType: getImplementationType\n    }, translate));\n  } // connector ////////////////////////////////////////////////\n\n\n  var isConnector = function (element) {\n    return getImplementationType(element) === 'connector';\n  };\n\n  group.entries.push(entryFactory.link({\n    id: 'configureConnectorLink',\n    label: translate('Configure Connector'),\n    handleClick: function (element, node, event) {\n      var connectorTabEl = getTabNode(node, 'connector');\n\n      if (connectorTabEl) {\n        triggerClickEvent(connectorTabEl);\n      } // suppress actual link click\n\n\n      return false;\n    },\n    showLink: function (element, node) {\n      var link = domQuery('a', node);\n      link.textContent = '';\n      domClasses(link).remove('bpp-error-message');\n\n      if (isConnector(element)) {\n        var connectorId = InputOutputHelper.getConnector(element).get('connectorId');\n\n        if (connectorId) {\n          link.textContent = translate('Configure Connector');\n        } else {\n          link.innerHTML = '<span class=\"bpp-icon-warning\"></span> Must configure Connector';\n          domClasses(link).add('bpp-error-message');\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }));\n}; // helpers ///////////////////////////\n\n\nfunction getTabNode(el, id) {\n  var containerEl = domClosest(el, '.bpp-properties-panel');\n  return domQuery('a[data-tab-target=\"' + id + '\"]', containerEl);\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/ServiceTaskDelegateProps.js"],"names":["ImplementationTypeHelper","require","InputOutputHelper","triggerClickEvent","implementationType","delegate","external","callable","resultVariable","entryFactory","domQuery","query","domClosest","closest","domClasses","classes","getImplementationType","element","getBusinessObject","getServiceTaskLikeBusinessObject","isDmnCapable","isExternalCapable","isServiceTaskLike","module","exports","group","bpmnFactory","translate","hasDmnSupport","hasExternalSupport","entries","concat","hasServiceTaskLikeSupport","hideResultVariable","node","getCallableType","isConnector","push","link","id","label","handleClick","event","connectorTabEl","getTabNode","showLink","textContent","remove","connectorId","getConnector","get","innerHTML","add","el","containerEl"],"mappings":"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","sourcesContent":["'use strict';\n\nvar ImplementationTypeHelper = require('../../../helper/ImplementationTypeHelper'),\n    InputOutputHelper = require('../../../helper/InputOutputHelper');\n\nvar triggerClickEvent = require('../../../Utils').triggerClickEvent;\n\nvar implementationType = require('./implementation/ImplementationType'),\n    delegate = require('./implementation/Delegate'),\n    external = require('./implementation/External'),\n    callable = require('./implementation/Callable'),\n    resultVariable = require('./implementation/ResultVariable');\n\nvar entryFactory = require('../../../factory/EntryFactory');\n\nvar domQuery = require('min-dom').query,\n    domClosest = require('min-dom').closest,\n    domClasses = require('min-dom').classes;\n\nfunction getImplementationType(element) {\n  return ImplementationTypeHelper.getImplementationType(element);\n}\n\nfunction getBusinessObject(element) {\n  return ImplementationTypeHelper.getServiceTaskLikeBusinessObject(element);\n}\n\nfunction isDmnCapable(element) {\n  return ImplementationTypeHelper.isDmnCapable(element);\n}\n\nfunction isExternalCapable(element) {\n  return ImplementationTypeHelper.isExternalCapable(element);\n}\n\nfunction isServiceTaskLike(element) {\n  return ImplementationTypeHelper.isServiceTaskLike(element);\n}\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n\n  if (!isServiceTaskLike(getBusinessObject(element))) {\n    return;\n  }\n\n  var hasDmnSupport = isDmnCapable(element);\n  var hasExternalSupport = isExternalCapable(getBusinessObject(element));\n\n  // implementation type ////////////////////////////////////\n\n  group.entries = group.entries.concat(implementationType(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType,\n    hasDmnSupport: hasDmnSupport,\n    hasExternalSupport: hasExternalSupport,\n    hasServiceTaskLikeSupport: true\n  }, translate));\n\n\n  // delegate (class, expression, delegateExpression) //////////\n\n  group.entries = group.entries.concat(delegate(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType\n  }, translate));\n\n\n  // result variable /////////////////////////////////////////\n\n  group.entries = group.entries.concat(resultVariable(element, bpmnFactory, {\n    getBusinessObject: getBusinessObject,\n    getImplementationType: getImplementationType,\n    hideResultVariable: function(element, node) {\n      return getImplementationType(element) !== 'expression';\n    }\n  }, translate));\n\n  // external //////////////////////////////////////////////////\n\n  if (hasExternalSupport) {\n    group.entries = group.entries.concat(external(element, bpmnFactory, {\n      getBusinessObject: getBusinessObject,\n      getImplementationType: getImplementationType\n    }, translate));\n  }\n\n\n  // dmn ////////////////////////////////////////////////////////\n\n  if (hasDmnSupport) {\n    group.entries = group.entries.concat(callable(element, bpmnFactory, {\n      getCallableType: getImplementationType\n    }, translate));\n  }\n\n\n  // connector ////////////////////////////////////////////////\n\n  var isConnector = function(element) {\n    return getImplementationType(element) === 'connector';\n  };\n\n  group.entries.push(entryFactory.link({\n    id: 'configureConnectorLink',\n    label: translate('Configure Connector'),\n    handleClick: function(element, node, event) {\n\n      var connectorTabEl = getTabNode(node, 'connector');\n\n      if (connectorTabEl) {\n        triggerClickEvent(connectorTabEl);\n      }\n\n      // suppress actual link click\n      return false;\n    },\n    showLink: function(element, node) {\n      var link = domQuery('a', node);\n      link.textContent = '';\n\n      domClasses(link).remove('bpp-error-message');\n\n      if (isConnector(element)) {\n        var connectorId = InputOutputHelper.getConnector(element).get('connectorId');\n        if (connectorId) {\n          link.textContent = translate('Configure Connector');\n        } else {\n          link.innerHTML = '<span class=\"bpp-icon-warning\"></span> Must configure Connector';\n          domClasses(link).add('bpp-error-message');\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }));\n\n};\n\n\n\n// helpers ///////////////////////////\n\nfunction getTabNode(el, id) {\n  var containerEl = domClosest(el, '.bpp-properties-panel');\n\n  return domQuery('a[data-tab-target=\"' + id + '\"]', containerEl);\n}"]},"metadata":{},"sourceType":"script"}