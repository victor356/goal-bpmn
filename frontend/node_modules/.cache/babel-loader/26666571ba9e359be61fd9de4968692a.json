{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nimport { isAny } from '../util/ModelingUtil';\nimport UpdateSemanticParentHandler from '../cmd/UpdateSemanticParentHandler';\n/**\r\n * BPMN specific data store behavior\r\n */\n\nexport default function DataStoreBehavior(canvas, commandStack, elementRegistry, eventBus) {\n  CommandInterceptor.call(this, eventBus);\n  commandStack.registerHandler('dataStore.updateContainment', UpdateSemanticParentHandler);\n\n  function getFirstParticipant() {\n    return elementRegistry.filter(function (element) {\n      return is(element, 'bpmn:Participant');\n    })[0];\n  }\n\n  function getDataStores(element) {\n    return element.children.filter(function (child) {\n      return is(child, 'bpmn:DataStoreReference') && !child.labelTarget;\n    });\n  }\n\n  function updateDataStoreParent(dataStore, newDataStoreParent) {\n    var dataStoreBo = dataStore.businessObject || dataStore;\n    newDataStoreParent = newDataStoreParent || getFirstParticipant();\n\n    if (newDataStoreParent) {\n      var newDataStoreParentBo = newDataStoreParent.businessObject || newDataStoreParent;\n      commandStack.execute('dataStore.updateContainment', {\n        dataStoreBo: dataStoreBo,\n        newSemanticParent: newDataStoreParentBo.processRef || newDataStoreParentBo,\n        newDiParent: newDataStoreParentBo.di\n      });\n    }\n  } // disable auto-resize for data stores\n\n\n  this.preExecute('shape.create', function (event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:DataStoreReference') && shape.type !== 'label') {\n      if (!context.hints) {\n        context.hints = {};\n      } // prevent auto resizing\n\n\n      context.hints.autoResize = false;\n    }\n  }); // disable auto-resize for data stores\n\n  this.preExecute('elements.move', function (event) {\n    var context = event.context,\n        shapes = context.shapes;\n    var dataStoreReferences = shapes.filter(function (shape) {\n      return is(shape, 'bpmn:DataStoreReference');\n    });\n\n    if (dataStoreReferences.length) {\n      if (!context.hints) {\n        context.hints = {};\n      } // prevent auto resizing for data store references\n\n\n      context.hints.autoResize = shapes.filter(function (shape) {\n        return !is(shape, 'bpmn:DataStoreReference');\n      });\n    }\n  }); // update parent on data store created\n\n  this.postExecute('shape.create', function (event) {\n    var context = event.context,\n        shape = context.shape,\n        parent = shape.parent;\n\n    if (is(shape, 'bpmn:DataStoreReference') && shape.type !== 'label' && is(parent, 'bpmn:Collaboration')) {\n      updateDataStoreParent(shape);\n    }\n  }); // update parent on data store moved\n\n  this.postExecute('shape.move', function (event) {\n    var context = event.context,\n        shape = context.shape,\n        oldParent = context.oldParent,\n        parent = shape.parent;\n\n    if (is(oldParent, 'bpmn:Collaboration')) {\n      // do nothing if not necessary\n      return;\n    }\n\n    if (is(shape, 'bpmn:DataStoreReference') && shape.type !== 'label' && is(parent, 'bpmn:Collaboration')) {\n      var participant = is(oldParent, 'bpmn:Participant') ? oldParent : getAncestor(oldParent, 'bpmn:Participant');\n      updateDataStoreParent(shape, participant);\n    }\n  }); // update data store parents on participant or subprocess deleted\n\n  this.postExecute('shape.delete', function (event) {\n    var context = event.context,\n        shape = context.shape,\n        rootElement = canvas.getRootElement();\n\n    if (isAny(shape, ['bpmn:Participant', 'bpmn:SubProcess']) && is(rootElement, 'bpmn:Collaboration')) {\n      getDataStores(rootElement).filter(function (dataStore) {\n        return isDescendant(dataStore, shape);\n      }).forEach(function (dataStore) {\n        updateDataStoreParent(dataStore);\n      });\n    }\n  }); // update data store parents on collaboration -> process\n\n  this.postExecute('canvas.updateRoot', function (event) {\n    var context = event.context,\n        oldRoot = context.oldRoot,\n        newRoot = context.newRoot;\n    var dataStores = getDataStores(oldRoot);\n    dataStores.forEach(function (dataStore) {\n      if (is(newRoot, 'bpmn:Process')) {\n        updateDataStoreParent(dataStore, newRoot);\n      }\n    });\n  });\n}\nDataStoreBehavior.$inject = ['canvas', 'commandStack', 'elementRegistry', 'eventBus'];\ninherits(DataStoreBehavior, CommandInterceptor); // helpers //////////\n\nfunction isDescendant(descendant, ancestor) {\n  var descendantBo = descendant.businessObject || descendant,\n      ancestorBo = ancestor.businessObject || ancestor;\n\n  while (descendantBo.$parent) {\n    if (descendantBo.$parent === ancestorBo.processRef || ancestorBo) {\n      return true;\n    }\n\n    descendantBo = descendantBo.$parent;\n  }\n\n  return false;\n}\n\nfunction getAncestor(element, type) {\n  while (element.parent) {\n    if (is(element.parent, type)) {\n      return element.parent;\n    }\n\n    element = element.parent;\n  }\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js/lib/features/modeling/behavior/DataStoreBehavior.js"],"names":["inherits","CommandInterceptor","is","isAny","UpdateSemanticParentHandler","DataStoreBehavior","canvas","commandStack","elementRegistry","eventBus","call","registerHandler","getFirstParticipant","filter","element","getDataStores","children","child","labelTarget","updateDataStoreParent","dataStore","newDataStoreParent","dataStoreBo","businessObject","newDataStoreParentBo","execute","newSemanticParent","processRef","newDiParent","di","preExecute","event","context","shape","type","hints","autoResize","shapes","dataStoreReferences","length","postExecute","parent","oldParent","participant","getAncestor","rootElement","getRootElement","isDescendant","forEach","oldRoot","newRoot","dataStores","$inject","descendant","ancestor","descendantBo","ancestorBo","$parent"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nimport UpdateSemanticParentHandler from '../cmd/UpdateSemanticParentHandler';\r\n\r\n\r\n/**\r\n * BPMN specific data store behavior\r\n */\r\nexport default function DataStoreBehavior(\r\n    canvas, commandStack, elementRegistry,\r\n    eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  commandStack.registerHandler('dataStore.updateContainment', UpdateSemanticParentHandler);\r\n\r\n  function getFirstParticipant() {\r\n    return elementRegistry.filter(function(element) {\r\n      return is(element, 'bpmn:Participant');\r\n    })[0];\r\n  }\r\n\r\n  function getDataStores(element) {\r\n    return element.children.filter(function(child) {\r\n      return is(child, 'bpmn:DataStoreReference') && !child.labelTarget;\r\n    });\r\n  }\r\n\r\n  function updateDataStoreParent(dataStore, newDataStoreParent) {\r\n    var dataStoreBo = dataStore.businessObject || dataStore;\r\n\r\n    newDataStoreParent = newDataStoreParent || getFirstParticipant();\r\n\r\n    if (newDataStoreParent) {\r\n      var newDataStoreParentBo = newDataStoreParent.businessObject || newDataStoreParent;\r\n\r\n      commandStack.execute('dataStore.updateContainment', {\r\n        dataStoreBo: dataStoreBo,\r\n        newSemanticParent: newDataStoreParentBo.processRef || newDataStoreParentBo,\r\n        newDiParent: newDataStoreParentBo.di\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('shape.create', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label') {\r\n\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing\r\n      context.hints.autoResize = false;\r\n    }\r\n  });\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('elements.move', function(event) {\r\n    var context = event.context,\r\n        shapes = context.shapes;\r\n\r\n    var dataStoreReferences = shapes.filter(function(shape) {\r\n      return is(shape, 'bpmn:DataStoreReference');\r\n    });\r\n\r\n    if (dataStoreReferences.length) {\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing for data store references\r\n      context.hints.autoResize = shapes.filter(function(shape) {\r\n        return !is(shape, 'bpmn:DataStoreReference');\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store created\r\n  this.postExecute('shape.create', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      updateDataStoreParent(shape);\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store moved\r\n  this.postExecute('shape.move', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        oldParent = context.oldParent,\r\n        parent = shape.parent;\r\n\r\n    if (is(oldParent, 'bpmn:Collaboration')) {\r\n\r\n      // do nothing if not necessary\r\n      return;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      var participant = is(oldParent, 'bpmn:Participant') ?\r\n        oldParent :\r\n        getAncestor(oldParent, 'bpmn:Participant');\r\n\r\n      updateDataStoreParent(shape, participant);\r\n    }\r\n  });\r\n\r\n\r\n  // update data store parents on participant or subprocess deleted\r\n  this.postExecute('shape.delete', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    if (isAny(shape, [ 'bpmn:Participant', 'bpmn:SubProcess' ])\r\n        && is(rootElement, 'bpmn:Collaboration')) {\r\n      getDataStores(rootElement)\r\n        .filter(function(dataStore) {\r\n          return isDescendant(dataStore, shape);\r\n        })\r\n        .forEach(function(dataStore) {\r\n          updateDataStoreParent(dataStore);\r\n        });\r\n    }\r\n  });\r\n\r\n  // update data store parents on collaboration -> process\r\n  this.postExecute('canvas.updateRoot', function(event) {\r\n    var context = event.context,\r\n        oldRoot = context.oldRoot,\r\n        newRoot = context.newRoot;\r\n\r\n    var dataStores = getDataStores(oldRoot);\r\n\r\n    dataStores.forEach(function(dataStore) {\r\n\r\n      if (is(newRoot, 'bpmn:Process')) {\r\n        updateDataStoreParent(dataStore, newRoot);\r\n      }\r\n\r\n    });\r\n  });\r\n}\r\n\r\nDataStoreBehavior.$inject = [\r\n  'canvas',\r\n  'commandStack',\r\n  'elementRegistry',\r\n  'eventBus',\r\n];\r\n\r\ninherits(DataStoreBehavior, CommandInterceptor);\r\n\r\n\r\n// helpers //////////\r\n\r\nfunction isDescendant(descendant, ancestor) {\r\n  var descendantBo = descendant.businessObject || descendant,\r\n      ancestorBo = ancestor.businessObject || ancestor;\r\n\r\n  while (descendantBo.$parent) {\r\n    if (descendantBo.$parent === ancestorBo.processRef || ancestorBo) {\r\n      return true;\r\n    }\r\n\r\n    descendantBo = descendantBo.$parent;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getAncestor(element, type) {\r\n\r\n  while (element.parent) {\r\n    if (is(element.parent, type)) {\r\n      return element.parent;\r\n    }\r\n\r\n    element = element.parent;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}