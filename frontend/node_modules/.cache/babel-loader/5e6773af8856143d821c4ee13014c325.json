{"ast":null,"code":"import inherits from 'inherits';\nimport { assign } from 'min-dash';\nimport BaseLayouter from 'diagram-js/lib/layout/BaseLayouter';\nimport { repairConnection, withoutRedundantPoints } from 'diagram-js/lib/layout/ManhattanLayout';\nimport { getMid, getOrientation } from 'diagram-js/lib/layout/LayoutUtil';\nimport { isExpanded } from '../../util/DiUtil';\nimport { is } from '../../util/ModelUtil';\nexport default function BpmnLayouter() {}\ninherits(BpmnLayouter, BaseLayouter);\n\nBpmnLayouter.prototype.layoutConnection = function (connection, hints) {\n  hints = hints || {};\n  var source = connection.source,\n      target = connection.target,\n      waypoints = connection.waypoints,\n      start = hints.connectionStart,\n      end = hints.connectionEnd;\n  var manhattanOptions, updatedWaypoints;\n\n  if (!start) {\n    start = getConnectionDocking(waypoints && waypoints[0], source);\n  }\n\n  if (!end) {\n    end = getConnectionDocking(waypoints && waypoints[waypoints.length - 1], target);\n  } // TODO(nikku): support vertical modeling\n  // and invert preferredLayouts accordingly\n\n\n  if (is(connection, 'bpmn:Association') || is(connection, 'bpmn:DataAssociation')) {\n    if (waypoints && !isCompensationAssociation(connection)) {\n      return [].concat([start], waypoints.slice(1, -1), [end]);\n    }\n  } // manhattan layout sequence / message flows\n\n\n  if (is(connection, 'bpmn:MessageFlow')) {\n    manhattanOptions = getMessageFlowManhattanOptions(source, target);\n  } else // layout all connection between flow elements h:h,\n    //\n    // except for\n    //\n    // (1) outgoing of BoundaryEvents -> layout based on attach orientation and target orientation\n    // (2) incoming / outgoing of Gateway -> v:h (outgoing), h:v (incoming)\n    // (3) loops from / to the same element\n    //\n    if (is(connection, 'bpmn:SequenceFlow') || isCompensationAssociation(connection)) {\n      if (source === target) {\n        manhattanOptions = {\n          preferredLayouts: ['b:l']\n        };\n      } else if (is(source, 'bpmn:BoundaryEvent')) {\n        manhattanOptions = {\n          preferredLayouts: getBoundaryEventPreferredLayouts(source, target)\n        };\n      } else if (is(source, 'bpmn:Gateway')) {\n        manhattanOptions = {\n          preferredLayouts: ['v:h']\n        };\n      } else if (is(target, 'bpmn:Gateway')) {\n        manhattanOptions = {\n          preferredLayouts: ['h:v']\n        };\n      } else {\n        manhattanOptions = {\n          preferredLayouts: ['h:h']\n        };\n      }\n    }\n\n  if (manhattanOptions) {\n    manhattanOptions = assign(manhattanOptions, hints);\n    updatedWaypoints = withoutRedundantPoints(repairConnection(source, target, start, end, waypoints, manhattanOptions));\n  }\n\n  return updatedWaypoints || [start, end];\n};\n\nfunction getAttachOrientation(attachedElement) {\n  var hostElement = attachedElement.host,\n      padding = -10;\n  return getOrientation(getMid(attachedElement), hostElement, padding);\n}\n\nfunction getMessageFlowManhattanOptions(source, target) {\n  return {\n    preferredLayouts: ['straight', 'v:v'],\n    preserveDocking: getMessageFlowPreserveDocking(source, target)\n  };\n}\n\nfunction getMessageFlowPreserveDocking(source, target) {\n  // (1) docking element connected to participant has precedence\n  if (is(target, 'bpmn:Participant')) {\n    return 'source';\n  }\n\n  if (is(source, 'bpmn:Participant')) {\n    return 'target';\n  } // (2) docking element connected to expanded sub-process has precedence\n\n\n  if (isExpandedSubProcess(target)) {\n    return 'source';\n  }\n\n  if (isExpandedSubProcess(source)) {\n    return 'target';\n  } // (3) docking event has precedence\n\n\n  if (is(target, 'bpmn:Event')) {\n    return 'target';\n  }\n\n  if (is(source, 'bpmn:Event')) {\n    return 'source';\n  }\n\n  return null;\n}\n\nfunction getConnectionDocking(point, shape) {\n  return point ? point.original || point : getMid(shape);\n}\n\nfunction isCompensationAssociation(connection) {\n  var source = connection.source,\n      target = connection.target;\n  return is(target, 'bpmn:Activity') && is(source, 'bpmn:BoundaryEvent') && target.businessObject.isForCompensation;\n}\n\nfunction isExpandedSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction isAnyOrientation(orientation, orientations) {\n  return orientations.indexOf(orientation) !== -1;\n}\n\nvar oppositeOrientationMapping = {\n  'top': 'bottom',\n  'top-right': 'bottom-left',\n  'top-left': 'bottom-right',\n  'right': 'left',\n  'bottom': 'top',\n  'bottom-right': 'top-left',\n  'bottom-left': 'top-right',\n  'left': 'right'\n};\nvar orientationDirectionMapping = {\n  top: 't',\n  right: 'r',\n  bottom: 'b',\n  left: 'l'\n};\n\nfunction getHorizontalOrientation(orientation) {\n  var matches = /right|left/.exec(orientation);\n  return matches && matches[0];\n}\n\nfunction getVerticalOrientation(orientation) {\n  var matches = /top|bottom/.exec(orientation);\n  return matches && matches[0];\n}\n\nfunction isOppositeOrientation(a, b) {\n  return oppositeOrientationMapping[a] === b;\n}\n\nfunction isOppositeHorizontalOrientation(a, b) {\n  var horizontalOrientation = getHorizontalOrientation(a);\n  var oppositeHorizontalOrientation = oppositeOrientationMapping[horizontalOrientation];\n  return b.indexOf(oppositeHorizontalOrientation) !== -1;\n}\n\nfunction isOppositeVerticalOrientation(a, b) {\n  var verticalOrientation = getVerticalOrientation(a);\n  var oppositeVerticalOrientation = oppositeOrientationMapping[verticalOrientation];\n  return b.indexOf(oppositeVerticalOrientation) !== -1;\n}\n\nfunction isHorizontalOrientation(orientation) {\n  return orientation === 'right' || orientation === 'left';\n}\n\nfunction getBoundaryEventPreferredLayouts(source, target) {\n  var sourceMid = getMid(source),\n      targetMid = getMid(target),\n      attachOrientation = getAttachOrientation(source),\n      sourceLayout,\n      targetlayout;\n  var isLoop = isSame(source.host, target);\n  var attachedToSide = isAnyOrientation(attachOrientation, ['top', 'right', 'bottom', 'left']);\n  var isHorizontalAttachOrientation = isHorizontalOrientation(attachOrientation);\n  var targetOrientation = getOrientation(targetMid, sourceMid, {\n    x: source.width / 2 + target.width / 2,\n    y: source.height / 2 + target.height / 2\n  }); // source layout\n  // attached to either top, right, bottom or left side\n\n  if (attachedToSide) {\n    sourceLayout = orientationDirectionMapping[isHorizontalAttachOrientation ? getHorizontalOrientation(attachOrientation) : getVerticalOrientation(attachOrientation)];\n  } else // attached to either top-right, top-left, bottom-right or bottom-left corner\n    {\n      // loop, same vertical or opposite horizontal orientation\n      if (isLoop || isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) || isOppositeOrientation(getHorizontalOrientation(attachOrientation), getHorizontalOrientation(targetOrientation))) {\n        sourceLayout = orientationDirectionMapping[getVerticalOrientation(attachOrientation)];\n      } else {\n        sourceLayout = orientationDirectionMapping[getHorizontalOrientation(attachOrientation)];\n      }\n    } // target layout\n  // attached to either top, right, bottom or left side\n\n\n  if (attachedToSide) {\n    // loop or opposite horizontal/vertical orientation\n    if (isLoop || (isHorizontalAttachOrientation ? isOppositeHorizontalOrientation(attachOrientation, targetOrientation) : isOppositeVerticalOrientation(attachOrientation, targetOrientation))) {\n      targetlayout = isHorizontalAttachOrientation ? 'h' : 'v';\n    } else {\n      targetlayout = isHorizontalAttachOrientation ? 'v' : 'h';\n    }\n  } else // attached to either top-right, top-left, bottom-right or bottom-left corner\n    {\n      // orientation is 'right', 'left'\n      // or same vertical orientation but also 'right' or 'left'\n      if (isHorizontalOrientation(targetOrientation) || isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) && getHorizontalOrientation(targetOrientation)) {\n        targetlayout = 'h';\n      } else {\n        targetlayout = 'v';\n      }\n    }\n\n  return [sourceLayout + ':' + targetlayout];\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/BpmnLayouter.js"],"names":["inherits","assign","BaseLayouter","repairConnection","withoutRedundantPoints","getMid","getOrientation","isExpanded","is","BpmnLayouter","prototype","layoutConnection","connection","hints","source","target","waypoints","start","connectionStart","end","connectionEnd","manhattanOptions","updatedWaypoints","getConnectionDocking","length","isCompensationAssociation","concat","slice","getMessageFlowManhattanOptions","preferredLayouts","getBoundaryEventPreferredLayouts","getAttachOrientation","attachedElement","hostElement","host","padding","preserveDocking","getMessageFlowPreserveDocking","isExpandedSubProcess","point","shape","original","businessObject","isForCompensation","element","isSame","a","b","isAnyOrientation","orientation","orientations","indexOf","oppositeOrientationMapping","orientationDirectionMapping","top","right","bottom","left","getHorizontalOrientation","matches","exec","getVerticalOrientation","isOppositeOrientation","isOppositeHorizontalOrientation","horizontalOrientation","oppositeHorizontalOrientation","isOppositeVerticalOrientation","verticalOrientation","oppositeVerticalOrientation","isHorizontalOrientation","sourceMid","targetMid","attachOrientation","sourceLayout","targetlayout","isLoop","attachedToSide","isHorizontalAttachOrientation","targetOrientation","x","width","y","height"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\nimport {\n  assign\n} from 'min-dash';\n\nimport BaseLayouter from 'diagram-js/lib/layout/BaseLayouter';\n\nimport {\n  repairConnection,\n  withoutRedundantPoints\n} from 'diagram-js/lib/layout/ManhattanLayout';\n\nimport {\n  getMid,\n  getOrientation\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  isExpanded\n} from '../../util/DiUtil';\n\nimport { is } from '../../util/ModelUtil';\n\n\nexport default function BpmnLayouter() {}\n\ninherits(BpmnLayouter, BaseLayouter);\n\n\nBpmnLayouter.prototype.layoutConnection = function(connection, hints) {\n  hints = hints || {};\n\n  var source = connection.source,\n      target = connection.target,\n      waypoints = connection.waypoints,\n      start = hints.connectionStart,\n      end = hints.connectionEnd;\n\n  var manhattanOptions,\n      updatedWaypoints;\n\n  if (!start) {\n    start = getConnectionDocking(waypoints && waypoints[0], source);\n  }\n\n  if (!end) {\n    end = getConnectionDocking(waypoints && waypoints[waypoints.length - 1], target);\n  }\n\n  // TODO(nikku): support vertical modeling\n  // and invert preferredLayouts accordingly\n\n  if (is(connection, 'bpmn:Association') ||\n      is(connection, 'bpmn:DataAssociation')) {\n\n    if (waypoints && !isCompensationAssociation(connection)) {\n      return [].concat([ start ], waypoints.slice(1, -1), [ end ]);\n    }\n  }\n\n  // manhattan layout sequence / message flows\n  if (is(connection, 'bpmn:MessageFlow')) {\n    manhattanOptions = getMessageFlowManhattanOptions(source, target);\n\n  } else\n\n\n  // layout all connection between flow elements h:h,\n  //\n  // except for\n  //\n  // (1) outgoing of BoundaryEvents -> layout based on attach orientation and target orientation\n  // (2) incoming / outgoing of Gateway -> v:h (outgoing), h:v (incoming)\n  // (3) loops from / to the same element\n  //\n  if (is(connection, 'bpmn:SequenceFlow') ||\n      isCompensationAssociation(connection)) {\n\n    if (source === target) {\n      manhattanOptions = {\n        preferredLayouts: [ 'b:l' ]\n      };\n    } else\n\n    if (is(source, 'bpmn:BoundaryEvent')) {\n\n      manhattanOptions = {\n        preferredLayouts: getBoundaryEventPreferredLayouts(source, target)\n      };\n\n    } else\n\n    if (is(source, 'bpmn:Gateway')) {\n\n      manhattanOptions = {\n        preferredLayouts: [ 'v:h' ]\n      };\n    } else\n\n    if (is(target, 'bpmn:Gateway')) {\n\n      manhattanOptions = {\n        preferredLayouts: [ 'h:v' ]\n      };\n    }\n\n    else {\n      manhattanOptions = {\n        preferredLayouts: [ 'h:h' ]\n      };\n    }\n\n  }\n\n  if (manhattanOptions) {\n\n    manhattanOptions = assign(manhattanOptions, hints);\n\n    updatedWaypoints =\n      withoutRedundantPoints(\n        repairConnection(\n          source, target,\n          start, end,\n          waypoints,\n          manhattanOptions\n        )\n      );\n  }\n\n  return updatedWaypoints || [ start, end ];\n};\n\n\nfunction getAttachOrientation(attachedElement) {\n\n  var hostElement = attachedElement.host,\n      padding = -10;\n\n  return getOrientation(getMid(attachedElement), hostElement, padding);\n}\n\n\nfunction getMessageFlowManhattanOptions(source, target) {\n  return {\n    preferredLayouts: [ 'straight', 'v:v' ],\n    preserveDocking: getMessageFlowPreserveDocking(source, target)\n  };\n}\n\n\nfunction getMessageFlowPreserveDocking(source, target) {\n\n  // (1) docking element connected to participant has precedence\n\n  if (is(target, 'bpmn:Participant')) {\n    return 'source';\n  }\n\n  if (is(source, 'bpmn:Participant')) {\n    return 'target';\n  }\n\n  // (2) docking element connected to expanded sub-process has precedence\n\n  if (isExpandedSubProcess(target)) {\n    return 'source';\n  }\n\n  if (isExpandedSubProcess(source)) {\n    return 'target';\n  }\n\n  // (3) docking event has precedence\n\n  if (is(target, 'bpmn:Event')) {\n    return 'target';\n  }\n\n  if (is(source, 'bpmn:Event')) {\n    return 'source';\n  }\n\n  return null;\n}\n\n\nfunction getConnectionDocking(point, shape) {\n  return point ? (point.original || point) : getMid(shape);\n}\n\nfunction isCompensationAssociation(connection) {\n\n  var source = connection.source,\n      target = connection.target;\n\n  return is(target, 'bpmn:Activity') &&\n         is(source, 'bpmn:BoundaryEvent') &&\n         target.businessObject.isForCompensation;\n}\n\n\nfunction isExpandedSubProcess(element) {\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction isAnyOrientation(orientation, orientations) {\n  return orientations.indexOf(orientation) !== -1;\n}\n\nvar oppositeOrientationMapping = {\n  'top': 'bottom',\n  'top-right': 'bottom-left',\n  'top-left': 'bottom-right',\n  'right': 'left',\n  'bottom': 'top',\n  'bottom-right': 'top-left',\n  'bottom-left': 'top-right',\n  'left': 'right'\n};\n\nvar orientationDirectionMapping = {\n  top: 't',\n  right: 'r',\n  bottom: 'b',\n  left: 'l'\n};\n\nfunction getHorizontalOrientation(orientation) {\n  var matches = /right|left/.exec(orientation);\n\n  return matches && matches[0];\n}\n\nfunction getVerticalOrientation(orientation) {\n  var matches = /top|bottom/.exec(orientation);\n\n  return matches && matches[0];\n}\n\nfunction isOppositeOrientation(a, b) {\n  return oppositeOrientationMapping[a] === b;\n}\n\nfunction isOppositeHorizontalOrientation(a, b) {\n  var horizontalOrientation = getHorizontalOrientation(a);\n\n  var oppositeHorizontalOrientation = oppositeOrientationMapping[horizontalOrientation];\n\n  return b.indexOf(oppositeHorizontalOrientation) !== -1;\n}\n\nfunction isOppositeVerticalOrientation(a, b) {\n  var verticalOrientation = getVerticalOrientation(a);\n\n  var oppositeVerticalOrientation = oppositeOrientationMapping[verticalOrientation];\n\n  return b.indexOf(oppositeVerticalOrientation) !== -1;\n}\n\nfunction isHorizontalOrientation(orientation) {\n  return orientation === 'right' || orientation === 'left';\n}\n\nfunction getBoundaryEventPreferredLayouts(source, target) {\n  var sourceMid = getMid(source),\n      targetMid = getMid(target),\n      attachOrientation = getAttachOrientation(source),\n      sourceLayout,\n      targetlayout;\n\n  var isLoop = isSame(source.host, target);\n\n  var attachedToSide = isAnyOrientation(attachOrientation, [ 'top', 'right', 'bottom', 'left' ]);\n\n  var isHorizontalAttachOrientation = isHorizontalOrientation(attachOrientation);\n\n  var targetOrientation = getOrientation(targetMid, sourceMid, {\n    x: source.width / 2 + target.width / 2,\n    y: source.height / 2 + target.height / 2\n  });\n\n  // source layout\n\n  // attached to either top, right, bottom or left side\n  if (attachedToSide) {\n\n    sourceLayout = orientationDirectionMapping[\n      isHorizontalAttachOrientation ?\n        getHorizontalOrientation(attachOrientation) :\n        getVerticalOrientation(attachOrientation)\n    ];\n\n  } else\n\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\n  {\n\n    // loop, same vertical or opposite horizontal orientation\n    if (isLoop ||\n      isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) ||\n      isOppositeOrientation(getHorizontalOrientation(attachOrientation), getHorizontalOrientation(targetOrientation))\n    ) {\n      sourceLayout = orientationDirectionMapping[getVerticalOrientation(attachOrientation)];\n    } else {\n      sourceLayout = orientationDirectionMapping[getHorizontalOrientation(attachOrientation)];\n    }\n\n  }\n\n  // target layout\n\n  // attached to either top, right, bottom or left side\n  if (attachedToSide) {\n\n    // loop or opposite horizontal/vertical orientation\n    if (\n      isLoop ||\n      (isHorizontalAttachOrientation ?\n        isOppositeHorizontalOrientation(attachOrientation, targetOrientation) :\n        isOppositeVerticalOrientation(attachOrientation, targetOrientation))\n    ) {\n      targetlayout = isHorizontalAttachOrientation ? 'h' : 'v';\n    } else {\n      targetlayout = isHorizontalAttachOrientation ? 'v' : 'h';\n    }\n\n  } else\n\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\n  {\n\n    // orientation is 'right', 'left'\n    // or same vertical orientation but also 'right' or 'left'\n    if (\n      isHorizontalOrientation(targetOrientation) ||\n      (isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) &&\n        getHorizontalOrientation(targetOrientation))\n    ) {\n      targetlayout = 'h';\n    } else {\n      targetlayout = 'v';\n    }\n\n  }\n\n  return [ sourceLayout + ':' + targetlayout ];\n}"]},"metadata":{},"sourceType":"module"}