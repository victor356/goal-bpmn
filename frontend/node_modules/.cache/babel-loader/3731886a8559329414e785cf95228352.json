{"ast":null,"code":"'use strict';\n\nvar domQuery = require('min-dom').query,\n    domClear = require('min-dom').clear,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    forEach = require('lodash/forEach'),\n    domify = require('min-dom').domify,\n    Ids = require('ids');\n\nvar SPACE_REGEX = /\\s/; // for QName validation as per http://www.w3.org/TR/REC-xml/#NT-NameChar\n\nvar QNAME_REGEX = /^([a-z][\\w-.]*:)?[a-z_][\\w-.]*$/i; // for ID validation as per BPMN Schema (QName - Namespace)\n\nvar ID_REGEX = /^[a-z_][\\w-.]*$/i;\nvar PLACEHOLDER_REGEX = /\\$\\{([^}]*)\\}/g;\n\nfunction selectedOption(selectBox) {\n  if (selectBox.selectedIndex >= 0) {\n    return selectBox.options[selectBox.selectedIndex].value;\n  }\n}\n\nmodule.exports.selectedOption = selectedOption;\n\nfunction selectedType(elementSyntax, inputNode) {\n  var typeSelect = domQuery(elementSyntax, inputNode);\n  return selectedOption(typeSelect);\n}\n\nmodule.exports.selectedType = selectedType;\n/**\n * Retrieve the root element the document this\n * business object is contained in.\n *\n * @return {ModdleElement}\n */\n\nfunction getRoot(businessObject) {\n  var parent = businessObject;\n\n  while (parent.$parent) {\n    parent = parent.$parent;\n  }\n\n  return parent;\n}\n\nmodule.exports.getRoot = getRoot;\n/**\n * filters all elements in the list which have a given type.\n * removes a new list\n */\n\nfunction filterElementsByType(objectList, type) {\n  var list = objectList || [];\n  var result = [];\n  forEach(list, function (obj) {\n    if (is(obj, type)) {\n      result.push(obj);\n    }\n  });\n  return result;\n}\n\nmodule.exports.filterElementsByType = filterElementsByType;\n\nfunction findRootElementsByType(businessObject, referencedType) {\n  var root = getRoot(businessObject);\n  return filterElementsByType(root.rootElements, referencedType);\n}\n\nmodule.exports.findRootElementsByType = findRootElementsByType;\n\nfunction removeAllChildren(domElement) {\n  while (domElement.firstChild) {\n    domElement.removeChild(domElement.firstChild);\n  }\n}\n\nmodule.exports.removeAllChildren = removeAllChildren;\n/**\n * adds an empty option to the list\n */\n\nfunction addEmptyParameter(list) {\n  return list.push({\n    'label': '',\n    'value': '',\n    'name': ''\n  });\n}\n\nmodule.exports.addEmptyParameter = addEmptyParameter;\n/**\n * returns a list with all root elements for the given parameter 'referencedType'\n */\n\nfunction refreshOptionsModel(businessObject, referencedType) {\n  var model = [];\n  var referableObjects = findRootElementsByType(businessObject, referencedType);\n  forEach(referableObjects, function (obj) {\n    model.push({\n      label: (obj.name || '') + ' (id=' + obj.id + ')',\n      value: obj.id,\n      name: obj.name\n    });\n  });\n  return model;\n}\n\nmodule.exports.refreshOptionsModel = refreshOptionsModel;\n/**\n * fills the drop down with options\n */\n\nfunction updateOptionsDropDown(domSelector, businessObject, referencedType, entryNode) {\n  var options = refreshOptionsModel(businessObject, referencedType);\n  addEmptyParameter(options);\n  var selectBox = domQuery(domSelector, entryNode);\n  domClear(selectBox);\n  forEach(options, function (option) {\n    var optionEntry = domify('<option value=\"' + option.value + '\">' + option.label + '</option>');\n    selectBox.appendChild(optionEntry);\n  });\n  return options;\n}\n\nmodule.exports.updateOptionsDropDown = updateOptionsDropDown;\n/**\n * checks whether the id value is valid\n *\n * @param {ModdleElement} bo\n * @param {String} idValue\n *\n * @return {String} error message\n */\n\nfunction isIdValid(bo, idValue) {\n  var assigned = bo.$model.ids.assigned(idValue);\n  var idExists = assigned && assigned !== bo;\n\n  if (!idValue || idExists) {\n    return 'Element must have an unique id.';\n  }\n\n  return validateId(idValue);\n}\n\nmodule.exports.isIdValid = isIdValid;\n\nfunction validateId(idValue) {\n  idValue = stripPlaceholders(idValue);\n\n  if (containsSpace(idValue)) {\n    return 'Id must not contain spaces.';\n  }\n\n  if (!ID_REGEX.test(idValue)) {\n    if (QNAME_REGEX.test(idValue)) {\n      return 'Id must not contain prefix.';\n    }\n\n    return 'Id must be a valid QName.';\n  }\n}\n\nmodule.exports.validateId = validateId;\n\nfunction containsSpace(value) {\n  return SPACE_REGEX.test(value);\n}\n\nmodule.exports.containsSpace = containsSpace;\n\nfunction stripPlaceholders(idValue) {\n  // replace expression e.g. ${VERSION_TAG}\n  // use only the content between ${}\n  // for the REGEX check\n  return idValue.replace(PLACEHOLDER_REGEX, '$1');\n}\n/**\n * generate a semantic id with given prefix\n */\n\n\nfunction nextId(prefix) {\n  var ids = new Ids([32, 32, 1]);\n  return ids.nextPrefixed(prefix);\n}\n\nmodule.exports.nextId = nextId;\n\nfunction triggerClickEvent(element) {\n  var evt;\n  var eventType = 'click';\n\n  if (document.createEvent) {\n    try {\n      // Chrome, Safari, Firefox\n      evt = new MouseEvent(eventType, {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      });\n    } catch (e) {\n      // IE 11, PhantomJS (wat!)\n      evt = document.createEvent('MouseEvent');\n      evt.initEvent(eventType, true, true);\n    }\n\n    return element.dispatchEvent(evt);\n  } else {\n    // Welcome IE\n    evt = document.createEventObject();\n    return element.fireEvent('on' + eventType, evt);\n  }\n}\n\nmodule.exports.triggerClickEvent = triggerClickEvent;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/Utils.js"],"names":["domQuery","require","query","domClear","clear","is","forEach","domify","Ids","SPACE_REGEX","QNAME_REGEX","ID_REGEX","PLACEHOLDER_REGEX","selectedOption","selectBox","selectedIndex","options","value","module","exports","selectedType","elementSyntax","inputNode","typeSelect","getRoot","businessObject","parent","$parent","filterElementsByType","objectList","type","list","result","obj","push","findRootElementsByType","referencedType","root","rootElements","removeAllChildren","domElement","firstChild","removeChild","addEmptyParameter","refreshOptionsModel","model","referableObjects","label","name","id","updateOptionsDropDown","domSelector","entryNode","option","optionEntry","appendChild","isIdValid","bo","idValue","assigned","$model","ids","idExists","validateId","stripPlaceholders","containsSpace","test","replace","nextId","prefix","nextPrefixed","triggerClickEvent","element","evt","eventType","document","createEvent","MouseEvent","view","window","bubbles","cancelable","e","initEvent","dispatchEvent","createEventObject","fireEvent"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,KAAlC;AAAA,IACIC,QAAQ,GAAGF,OAAO,CAAC,SAAD,CAAP,CAAmBG,KADlC;AAAA,IAEIC,EAAE,GAAGJ,OAAO,CAAC,4BAAD,CAAP,CAAsCI,EAF/C;AAAA,IAGIC,OAAO,GAAGL,OAAO,CAAC,gBAAD,CAHrB;AAAA,IAIIM,MAAM,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBM,MAJhC;AAAA,IAKIC,GAAG,GAAGP,OAAO,CAAC,KAAD,CALjB;;AAOA,IAAIQ,WAAW,GAAG,IAAlB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,kCAAlB,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,kBAAf;AAEA,IAAIC,iBAAiB,GAAG,gBAAxB;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACjC,MAAIA,SAAS,CAACC,aAAV,IAA2B,CAA/B,EAAkC;AAChC,WAAOD,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACC,aAA5B,EAA2CE,KAAlD;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,CAAeN,cAAf,GAAgCA,cAAhC;;AAGA,SAASO,YAAT,CAAsBC,aAAtB,EAAqCC,SAArC,EAAgD;AAC9C,MAAIC,UAAU,GAAGvB,QAAQ,CAACqB,aAAD,EAAgBC,SAAhB,CAAzB;AACA,SAAOT,cAAc,CAACU,UAAD,CAArB;AACD;;AAEDL,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA8BA,YAA9B;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,OAAT,CAAiBC,cAAjB,EAAiC;AAC/B,MAAIC,MAAM,GAAGD,cAAb;;AACA,SAAOC,MAAM,CAACC,OAAd,EAAuB;AACrBD,IAAAA,MAAM,GAAGA,MAAM,CAACC,OAAhB;AACD;;AACD,SAAOD,MAAP;AACD;;AAEDR,MAAM,CAACC,OAAP,CAAeK,OAAf,GAAyBA,OAAzB;AAGA;AACA;AACA;AACA;;AACA,SAASI,oBAAT,CAA8BC,UAA9B,EAA0CC,IAA1C,EAAgD;AAC9C,MAAIC,IAAI,GAAGF,UAAU,IAAI,EAAzB;AACA,MAAIG,MAAM,GAAG,EAAb;AACA1B,EAAAA,OAAO,CAACyB,IAAD,EAAO,UAASE,GAAT,EAAc;AAC1B,QAAI5B,EAAE,CAAC4B,GAAD,EAAMH,IAAN,CAAN,EAAmB;AACjBE,MAAAA,MAAM,CAACE,IAAP,CAAYD,GAAZ;AACD;AACF,GAJM,CAAP;AAKA,SAAOD,MAAP;AACD;;AAEDd,MAAM,CAACC,OAAP,CAAeS,oBAAf,GAAsCA,oBAAtC;;AAGA,SAASO,sBAAT,CAAgCV,cAAhC,EAAgDW,cAAhD,EAAgE;AAC9D,MAAIC,IAAI,GAAGb,OAAO,CAACC,cAAD,CAAlB;AAEA,SAAOG,oBAAoB,CAACS,IAAI,CAACC,YAAN,EAAoBF,cAApB,CAA3B;AACD;;AAEDlB,MAAM,CAACC,OAAP,CAAegB,sBAAf,GAAwCA,sBAAxC;;AAGA,SAASI,iBAAT,CAA2BC,UAA3B,EAAuC;AACrC,SAAOA,UAAU,CAACC,UAAlB,EAA8B;AAC5BD,IAAAA,UAAU,CAACE,WAAX,CAAuBF,UAAU,CAACC,UAAlC;AACD;AACF;;AAEDvB,MAAM,CAACC,OAAP,CAAeoB,iBAAf,GAAmCA,iBAAnC;AAGA;AACA;AACA;;AACA,SAASI,iBAAT,CAA2BZ,IAA3B,EAAiC;AAC/B,SAAOA,IAAI,CAACG,IAAL,CAAU;AAAE,aAAS,EAAX;AAAe,aAAS,EAAxB;AAA4B,YAAQ;AAApC,GAAV,CAAP;AACD;;AAEDhB,MAAM,CAACC,OAAP,CAAewB,iBAAf,GAAmCA,iBAAnC;AAGA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BnB,cAA7B,EAA6CW,cAA7C,EAA6D;AAC3D,MAAIS,KAAK,GAAG,EAAZ;AACA,MAAIC,gBAAgB,GAAGX,sBAAsB,CAACV,cAAD,EAAiBW,cAAjB,CAA7C;AACA9B,EAAAA,OAAO,CAACwC,gBAAD,EAAmB,UAASb,GAAT,EAAc;AACtCY,IAAAA,KAAK,CAACX,IAAN,CAAW;AACTa,MAAAA,KAAK,EAAE,CAACd,GAAG,CAACe,IAAJ,IAAY,EAAb,IAAmB,OAAnB,GAA2Bf,GAAG,CAACgB,EAA/B,GAAkC,GADhC;AAEThC,MAAAA,KAAK,EAAEgB,GAAG,CAACgB,EAFF;AAGTD,MAAAA,IAAI,EAAEf,GAAG,CAACe;AAHD,KAAX;AAKD,GANM,CAAP;AAOA,SAAOH,KAAP;AACD;;AAED3B,MAAM,CAACC,OAAP,CAAeyB,mBAAf,GAAqCA,mBAArC;AAGA;AACA;AACA;;AACA,SAASM,qBAAT,CAA+BC,WAA/B,EAA4C1B,cAA5C,EAA4DW,cAA5D,EAA4EgB,SAA5E,EAAuF;AACrF,MAAIpC,OAAO,GAAG4B,mBAAmB,CAACnB,cAAD,EAAiBW,cAAjB,CAAjC;AACAO,EAAAA,iBAAiB,CAAC3B,OAAD,CAAjB;AACA,MAAIF,SAAS,GAAGd,QAAQ,CAACmD,WAAD,EAAcC,SAAd,CAAxB;AACAjD,EAAAA,QAAQ,CAACW,SAAD,CAAR;AAEAR,EAAAA,OAAO,CAACU,OAAD,EAAU,UAASqC,MAAT,EAAiB;AAChC,QAAIC,WAAW,GAAG/C,MAAM,CAAC,oBAAoB8C,MAAM,CAACpC,KAA3B,GAAmC,IAAnC,GAA0CoC,MAAM,CAACN,KAAjD,GAAyD,WAA1D,CAAxB;AACAjC,IAAAA,SAAS,CAACyC,WAAV,CAAsBD,WAAtB;AACD,GAHM,CAAP;AAIA,SAAOtC,OAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,CAAe+B,qBAAf,GAAuCA,qBAAvC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASM,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC9B,MAAIC,QAAQ,GAAGF,EAAE,CAACG,MAAH,CAAUC,GAAV,CAAcF,QAAd,CAAuBD,OAAvB,CAAf;AAEA,MAAII,QAAQ,GAAGH,QAAQ,IAAIA,QAAQ,KAAKF,EAAxC;;AAEA,MAAI,CAACC,OAAD,IAAYI,QAAhB,EAA0B;AACxB,WAAO,iCAAP;AACD;;AAED,SAAOC,UAAU,CAACL,OAAD,CAAjB;AACD;;AAEDxC,MAAM,CAACC,OAAP,CAAeqC,SAAf,GAA2BA,SAA3B;;AAGA,SAASO,UAAT,CAAoBL,OAApB,EAA6B;AAE3BA,EAAAA,OAAO,GAAGM,iBAAiB,CAACN,OAAD,CAA3B;;AAEA,MAAIO,aAAa,CAACP,OAAD,CAAjB,EAA4B;AAC1B,WAAO,6BAAP;AACD;;AAED,MAAI,CAAC/C,QAAQ,CAACuD,IAAT,CAAcR,OAAd,CAAL,EAA6B;AAE3B,QAAIhD,WAAW,CAACwD,IAAZ,CAAiBR,OAAjB,CAAJ,EAA+B;AAC7B,aAAO,6BAAP;AACD;;AAED,WAAO,2BAAP;AACD;AACF;;AAEDxC,MAAM,CAACC,OAAP,CAAe4C,UAAf,GAA4BA,UAA5B;;AAGA,SAASE,aAAT,CAAuBhD,KAAvB,EAA8B;AAC5B,SAAOR,WAAW,CAACyD,IAAZ,CAAiBjD,KAAjB,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,CAAe8C,aAAf,GAA+BA,aAA/B;;AAGA,SAASD,iBAAT,CAA2BN,OAA3B,EAAoC;AAElC;AACA;AACA;AACA,SAAOA,OAAO,CAACS,OAAR,CAAgBvD,iBAAhB,EAAmC,IAAnC,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASwD,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIR,GAAG,GAAG,IAAIrD,GAAJ,CAAQ,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAAR,CAAV;AAEA,SAAOqD,GAAG,CAACS,YAAJ,CAAiBD,MAAjB,CAAP;AACD;;AAEDnD,MAAM,CAACC,OAAP,CAAeiD,MAAf,GAAwBA,MAAxB;;AAGA,SAASG,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,MAAIC,GAAJ;AACA,MAAIC,SAAS,GAAG,OAAhB;;AAEA,MAAIC,QAAQ,CAACC,WAAb,EAA0B;AACxB,QAAI;AACF;AACAH,MAAAA,GAAG,GAAG,IAAII,UAAJ,CAAgBH,SAAhB,EAA4B;AAAEI,QAAAA,IAAI,EAAEC,MAAR;AAAgBC,QAAAA,OAAO,EAAE,IAAzB;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAA5B,CAAN;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV;AACAT,MAAAA,GAAG,GAAGE,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAN;AAEAH,MAAAA,GAAG,CAACU,SAAJ,CAAeT,SAAf,EAA2B,IAA3B,EAAiC,IAAjC;AACD;;AACD,WAAOF,OAAO,CAACY,aAAR,CAAsBX,GAAtB,CAAP;AACD,GAXD,MAWO;AACL;AACAA,IAAAA,GAAG,GAAGE,QAAQ,CAACU,iBAAT,EAAN;AAEA,WAAOb,OAAO,CAACc,SAAR,CAAkB,OAAOZ,SAAzB,EAAoCD,GAApC,CAAP;AACD;AACF;;AAEDvD,MAAM,CAACC,OAAP,CAAeoD,iBAAf,GAAmCA,iBAAnC","sourcesContent":["'use strict';\n\nvar domQuery = require('min-dom').query,\n    domClear = require('min-dom').clear,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    forEach = require('lodash/forEach'),\n    domify = require('min-dom').domify,\n    Ids = require('ids');\n\nvar SPACE_REGEX = /\\s/;\n\n// for QName validation as per http://www.w3.org/TR/REC-xml/#NT-NameChar\nvar QNAME_REGEX = /^([a-z][\\w-.]*:)?[a-z_][\\w-.]*$/i;\n\n// for ID validation as per BPMN Schema (QName - Namespace)\nvar ID_REGEX = /^[a-z_][\\w-.]*$/i;\n\nvar PLACEHOLDER_REGEX = /\\$\\{([^}]*)\\}/g;\n\nfunction selectedOption(selectBox) {\n  if (selectBox.selectedIndex >= 0) {\n    return selectBox.options[selectBox.selectedIndex].value;\n  }\n}\n\nmodule.exports.selectedOption = selectedOption;\n\n\nfunction selectedType(elementSyntax, inputNode) {\n  var typeSelect = domQuery(elementSyntax, inputNode);\n  return selectedOption(typeSelect);\n}\n\nmodule.exports.selectedType = selectedType;\n\n\n/**\n * Retrieve the root element the document this\n * business object is contained in.\n *\n * @return {ModdleElement}\n */\nfunction getRoot(businessObject) {\n  var parent = businessObject;\n  while (parent.$parent) {\n    parent = parent.$parent;\n  }\n  return parent;\n}\n\nmodule.exports.getRoot = getRoot;\n\n\n/**\n * filters all elements in the list which have a given type.\n * removes a new list\n */\nfunction filterElementsByType(objectList, type) {\n  var list = objectList || [];\n  var result = [];\n  forEach(list, function(obj) {\n    if (is(obj, type)) {\n      result.push(obj);\n    }\n  });\n  return result;\n}\n\nmodule.exports.filterElementsByType = filterElementsByType;\n\n\nfunction findRootElementsByType(businessObject, referencedType) {\n  var root = getRoot(businessObject);\n\n  return filterElementsByType(root.rootElements, referencedType);\n}\n\nmodule.exports.findRootElementsByType = findRootElementsByType;\n\n\nfunction removeAllChildren(domElement) {\n  while (domElement.firstChild) {\n    domElement.removeChild(domElement.firstChild);\n  }\n}\n\nmodule.exports.removeAllChildren = removeAllChildren;\n\n\n/**\n * adds an empty option to the list\n */\nfunction addEmptyParameter(list) {\n  return list.push({ 'label': '', 'value': '', 'name': '' });\n}\n\nmodule.exports.addEmptyParameter = addEmptyParameter;\n\n\n/**\n * returns a list with all root elements for the given parameter 'referencedType'\n */\nfunction refreshOptionsModel(businessObject, referencedType) {\n  var model = [];\n  var referableObjects = findRootElementsByType(businessObject, referencedType);\n  forEach(referableObjects, function(obj) {\n    model.push({\n      label: (obj.name || '') + ' (id='+obj.id+')',\n      value: obj.id,\n      name: obj.name\n    });\n  });\n  return model;\n}\n\nmodule.exports.refreshOptionsModel = refreshOptionsModel;\n\n\n/**\n * fills the drop down with options\n */\nfunction updateOptionsDropDown(domSelector, businessObject, referencedType, entryNode) {\n  var options = refreshOptionsModel(businessObject, referencedType);\n  addEmptyParameter(options);\n  var selectBox = domQuery(domSelector, entryNode);\n  domClear(selectBox);\n\n  forEach(options, function(option) {\n    var optionEntry = domify('<option value=\"' + option.value + '\">' + option.label + '</option>');\n    selectBox.appendChild(optionEntry);\n  });\n  return options;\n}\n\nmodule.exports.updateOptionsDropDown = updateOptionsDropDown;\n\n\n/**\n * checks whether the id value is valid\n *\n * @param {ModdleElement} bo\n * @param {String} idValue\n *\n * @return {String} error message\n */\nfunction isIdValid(bo, idValue) {\n  var assigned = bo.$model.ids.assigned(idValue);\n\n  var idExists = assigned && assigned !== bo;\n\n  if (!idValue || idExists) {\n    return 'Element must have an unique id.';\n  }\n\n  return validateId(idValue);\n}\n\nmodule.exports.isIdValid = isIdValid;\n\n\nfunction validateId(idValue) {\n\n  idValue = stripPlaceholders(idValue);\n\n  if (containsSpace(idValue)) {\n    return 'Id must not contain spaces.';\n  }\n\n  if (!ID_REGEX.test(idValue)) {\n\n    if (QNAME_REGEX.test(idValue)) {\n      return 'Id must not contain prefix.';\n    }\n\n    return 'Id must be a valid QName.';\n  }\n}\n\nmodule.exports.validateId = validateId;\n\n\nfunction containsSpace(value) {\n  return SPACE_REGEX.test(value);\n}\n\nmodule.exports.containsSpace = containsSpace;\n\n\nfunction stripPlaceholders(idValue) {\n\n  // replace expression e.g. ${VERSION_TAG}\n  // use only the content between ${}\n  // for the REGEX check\n  return idValue.replace(PLACEHOLDER_REGEX, '$1');\n}\n\n/**\n * generate a semantic id with given prefix\n */\nfunction nextId(prefix) {\n  var ids = new Ids([32,32,1]);\n\n  return ids.nextPrefixed(prefix);\n}\n\nmodule.exports.nextId = nextId;\n\n\nfunction triggerClickEvent(element) {\n  var evt;\n  var eventType = 'click';\n\n  if (document.createEvent) {\n    try {\n      // Chrome, Safari, Firefox\n      evt = new MouseEvent((eventType), { view: window, bubbles: true, cancelable: true });\n    } catch (e) {\n      // IE 11, PhantomJS (wat!)\n      evt = document.createEvent('MouseEvent');\n\n      evt.initEvent((eventType), true, true);\n    }\n    return element.dispatchEvent(evt);\n  } else {\n    // Welcome IE\n    evt = document.createEventObject();\n\n    return element.fireEvent('on' + eventType, evt);\n  }\n}\n\nmodule.exports.triggerClickEvent = triggerClickEvent;\n"]},"metadata":{},"sourceType":"script"}