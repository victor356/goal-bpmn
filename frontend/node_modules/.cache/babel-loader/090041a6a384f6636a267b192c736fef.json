{"ast":null,"code":"import { some } from 'min-dash';\nimport { is } from '../../../util/ModelUtil';\n/**\n * Return true if element has any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {Array<String>} types\n *\n * @return {Boolean}\n */\n\nexport function isAny(element, types) {\n  return some(types, function (t) {\n    return is(element, t);\n  });\n}\n/**\n * Return the parent of the element with any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {String|Array<String>} anyType\n *\n * @return {djs.model.Base}\n */\n\nexport function getParent(element, anyType) {\n  if (typeof anyType === 'string') {\n    anyType = [anyType];\n  }\n\n  while (element = element.parent) {\n    if (isAny(element, anyType)) {\n      return element;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/util/ModelingUtil.js"],"names":["some","is","isAny","element","types","t","getParent","anyType","parent"],"mappings":"AAAA,SACEA,IADF,QAEO,UAFP;AAIA,SAASC,EAAT,QAAmB,yBAAnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,KAAxB,EAA+B;AACpC,SAAOJ,IAAI,CAACI,KAAD,EAAQ,UAASC,CAAT,EAAY;AAC7B,WAAOJ,EAAE,CAACE,OAAD,EAAUE,CAAV,CAAT;AACD,GAFU,CAAX;AAGD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBH,OAAnB,EAA4BI,OAA5B,EAAqC;AAE1C,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,OAAO,GAAG,CAAEA,OAAF,CAAV;AACD;;AAED,SAAQJ,OAAO,GAAGA,OAAO,CAACK,MAA1B,EAAmC;AACjC,QAAIN,KAAK,CAACC,OAAD,EAAUI,OAAV,CAAT,EAA6B;AAC3B,aAAOJ,OAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["import {\n  some\n} from 'min-dash';\n\nimport { is } from '../../../util/ModelUtil';\n\n\n/**\n * Return true if element has any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {Array<String>} types\n *\n * @return {Boolean}\n */\nexport function isAny(element, types) {\n  return some(types, function(t) {\n    return is(element, t);\n  });\n}\n\n\n/**\n * Return the parent of the element with any of the given types.\n *\n * @param {djs.model.Base} element\n * @param {String|Array<String>} anyType\n *\n * @return {djs.model.Base}\n */\nexport function getParent(element, anyType) {\n\n  if (typeof anyType === 'string') {\n    anyType = [ anyType ];\n  }\n\n  while ((element = element.parent)) {\n    if (isAny(element, anyType)) {\n      return element;\n    }\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"module"}