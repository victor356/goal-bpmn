{"ast":null,"code":"var MARKER_RESIZING = 'djs-resizing',\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\nvar LOW_PRIORITY = 500;\nimport { attr as svgAttr, remove as svgRemove, classes as svgClasses } from 'tiny-svg';\n/**\n * Provides previews for resizing shapes when resizing.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\n\nexport default function ResizePreview(eventBus, canvas, previewSupport) {\n  /**\n   * Update resizer frame.\n   *\n   * @param {Object} context\n   */\n  function updateFrame(context) {\n    var shape = context.shape,\n        bounds = context.newBounds,\n        frame = context.frame;\n\n    if (!frame) {\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getDefaultLayer());\n      canvas.addMarker(shape, MARKER_RESIZING);\n    }\n\n    if (bounds.width > 5) {\n      svgAttr(frame, {\n        x: bounds.x,\n        width: bounds.width\n      });\n    }\n\n    if (bounds.height > 5) {\n      svgAttr(frame, {\n        y: bounds.y,\n        height: bounds.height\n      });\n    }\n\n    if (context.canExecute) {\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\n    } else {\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\n    }\n  }\n  /**\n   * Remove resizer frame.\n   *\n   * @param {Object} context\n   */\n\n\n  function removeFrame(context) {\n    var shape = context.shape,\n        frame = context.frame;\n\n    if (frame) {\n      svgRemove(context.frame);\n    }\n\n    canvas.removeMarker(shape, MARKER_RESIZING);\n  } // add and update previews\n\n\n  eventBus.on('resize.move', LOW_PRIORITY, function (event) {\n    updateFrame(event.context);\n  }); // remove previews\n\n  eventBus.on('resize.cleanup', function (event) {\n    removeFrame(event.context);\n  });\n}\nResizePreview.$inject = ['eventBus', 'canvas', 'previewSupport'];","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/resize/ResizePreview.js"],"names":["MARKER_RESIZING","MARKER_RESIZE_NOT_OK","LOW_PRIORITY","attr","svgAttr","remove","svgRemove","classes","svgClasses","ResizePreview","eventBus","canvas","previewSupport","updateFrame","context","shape","bounds","newBounds","frame","addFrame","getDefaultLayer","addMarker","width","x","height","y","canExecute","add","removeFrame","removeMarker","on","event","$inject"],"mappings":"AAAA,IAAIA,eAAe,GAAG,cAAtB;AAAA,IACIC,oBAAoB,GAAG,eAD3B;AAGA,IAAIC,YAAY,GAAG,GAAnB;AAEA,SACEC,IAAI,IAAIC,OADV,EAEEC,MAAM,IAAIC,SAFZ,EAGEC,OAAO,IAAIC,UAHb,QAIO,UAJP;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,MAAjC,EAAyCC,cAAzC,EAAyD;AAEtE;AACF;AACA;AACA;AACA;AACE,WAASC,WAAT,CAAqBC,OAArB,EAA8B;AAE5B,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QACIC,MAAM,GAAGF,OAAO,CAACG,SADrB;AAAA,QAEIC,KAAK,GAAGJ,OAAO,CAACI,KAFpB;;AAIA,QAAI,CAACA,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAGJ,OAAO,CAACI,KAAR,GAAgBN,cAAc,CAACO,QAAf,CAAwBJ,KAAxB,EAA+BJ,MAAM,CAACS,eAAP,EAA/B,CAAxB;AAEAT,MAAAA,MAAM,CAACU,SAAP,CAAiBN,KAAjB,EAAwBf,eAAxB;AACD;;AAED,QAAIgB,MAAM,CAACM,KAAP,GAAe,CAAnB,EAAsB;AACpBlB,MAAAA,OAAO,CAACc,KAAD,EAAQ;AAAEK,QAAAA,CAAC,EAAEP,MAAM,CAACO,CAAZ;AAAeD,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAA7B,OAAR,CAAP;AACD;;AAED,QAAIN,MAAM,CAACQ,MAAP,GAAgB,CAApB,EAAuB;AACrBpB,MAAAA,OAAO,CAACc,KAAD,EAAQ;AAAEO,QAAAA,CAAC,EAAET,MAAM,CAACS,CAAZ;AAAeD,QAAAA,MAAM,EAAER,MAAM,CAACQ;AAA9B,OAAR,CAAP;AACD;;AAED,QAAIV,OAAO,CAACY,UAAZ,EAAwB;AACtBlB,MAAAA,UAAU,CAACU,KAAD,CAAV,CAAkBb,MAAlB,CAAyBJ,oBAAzB;AACD,KAFD,MAEO;AACLO,MAAAA,UAAU,CAACU,KAAD,CAAV,CAAkBS,GAAlB,CAAsB1B,oBAAtB;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;AACE,WAAS2B,WAAT,CAAqBd,OAArB,EAA8B;AAC5B,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QACIG,KAAK,GAAGJ,OAAO,CAACI,KADpB;;AAGA,QAAIA,KAAJ,EAAW;AACTZ,MAAAA,SAAS,CAACQ,OAAO,CAACI,KAAT,CAAT;AACD;;AAEDP,IAAAA,MAAM,CAACkB,YAAP,CAAoBd,KAApB,EAA2Bf,eAA3B;AACD,GAhDqE,CAkDtE;;;AACAU,EAAAA,QAAQ,CAACoB,EAAT,CAAY,aAAZ,EAA2B5B,YAA3B,EAAyC,UAAS6B,KAAT,EAAgB;AACvDlB,IAAAA,WAAW,CAACkB,KAAK,CAACjB,OAAP,CAAX;AACD,GAFD,EAnDsE,CAuDtE;;AACAJ,EAAAA,QAAQ,CAACoB,EAAT,CAAY,gBAAZ,EAA8B,UAASC,KAAT,EAAgB;AAC5CH,IAAAA,WAAW,CAACG,KAAK,CAACjB,OAAP,CAAX;AACD,GAFD;AAID;AAEDL,aAAa,CAACuB,OAAd,GAAwB,CACtB,UADsB,EAEtB,QAFsB,EAGtB,gBAHsB,CAAxB","sourcesContent":["var MARKER_RESIZING = 'djs-resizing',\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  attr as svgAttr,\n  remove as svgRemove,\n  classes as svgClasses\n} from 'tiny-svg';\n\n\n/**\n * Provides previews for resizing shapes when resizing.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\nexport default function ResizePreview(eventBus, canvas, previewSupport) {\n\n  /**\n   * Update resizer frame.\n   *\n   * @param {Object} context\n   */\n  function updateFrame(context) {\n\n    var shape = context.shape,\n        bounds = context.newBounds,\n        frame = context.frame;\n\n    if (!frame) {\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getDefaultLayer());\n\n      canvas.addMarker(shape, MARKER_RESIZING);\n    }\n\n    if (bounds.width > 5) {\n      svgAttr(frame, { x: bounds.x, width: bounds.width });\n    }\n\n    if (bounds.height > 5) {\n      svgAttr(frame, { y: bounds.y, height: bounds.height });\n    }\n\n    if (context.canExecute) {\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\n    } else {\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\n    }\n  }\n\n  /**\n   * Remove resizer frame.\n   *\n   * @param {Object} context\n   */\n  function removeFrame(context) {\n    var shape = context.shape,\n        frame = context.frame;\n\n    if (frame) {\n      svgRemove(context.frame);\n    }\n\n    canvas.removeMarker(shape, MARKER_RESIZING);\n  }\n\n  // add and update previews\n  eventBus.on('resize.move', LOW_PRIORITY, function(event) {\n    updateFrame(event.context);\n  });\n\n  // remove previews\n  eventBus.on('resize.cleanup', function(event) {\n    removeFrame(event.context);\n  });\n\n}\n\nResizePreview.$inject = [\n  'eventBus',\n  'canvas',\n  'previewSupport'\n];"]},"metadata":{},"sourceType":"module"}