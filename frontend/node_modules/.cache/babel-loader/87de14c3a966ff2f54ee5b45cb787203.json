{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar getTemplate = require('./Helper').getTemplate;\n\nvar PropertiesActivator = require('../../../PropertiesActivator');\n\nvar HIGHER_PRIORITY = 1100;\n/**\n * Applies template visibility settings.\n *\n * Controlled using `entriesVisible` on template config object:\n *\n * ```json\n *     \"entriesVisible\": {\n *       \"_all\": true|false,\n *       \"entryName\": true|false,\n *       ...\n *     }\n * ```\n *\n * @param {EventBus} eventBus\n * @param {ElementTemplates} elementTemplates\n */\n\nfunction CustomElementsPropertiesActivator(eventBus, elementTemplates) {\n  PropertiesActivator.call(this, eventBus, HIGHER_PRIORITY);\n\n  this.isEntryVisible = function (entry, element) {\n    var template = getTemplate(element, elementTemplates);\n\n    if (template && !isEntryVisible(entry, template)) {\n      return false;\n    }\n  };\n\n  this.isPropertyEditable = function (entry, propertyName, element) {\n    var template = getTemplate(element, elementTemplates);\n\n    if (template && !isEntryEditable(entry, template)) {\n      return false;\n    }\n  };\n}\n\nCustomElementsPropertiesActivator.$inject = ['eventBus', 'elementTemplates'];\ninherits(CustomElementsPropertiesActivator, PropertiesActivator);\nmodule.exports = CustomElementsPropertiesActivator; // helpers ////////////////////////////////////\n\nvar CUSTOM_PROPERTIES_PATTERN = /^custom-/;\nvar DEFAULT_ENTRIES_VISIBLE = {\n  _all: false,\n  id: true,\n  name: true\n};\n\nfunction isCustomEntry(entry) {\n  return CUSTOM_PROPERTIES_PATTERN.test(entry.id);\n}\n\nfunction isEntryVisible(entry, template) {\n  var entryId = entry.id;\n\n  if (entryId === 'elementTemplate-chooser' || isCustomEntry(entry)) {\n    return true;\n  }\n\n  var entriesVisible = template.entriesVisible || DEFAULT_ENTRIES_VISIBLE;\n\n  if (typeof entriesVisible === 'boolean') {\n    return entriesVisible;\n  }\n\n  var defaultVisible = entriesVisible._all || false,\n      entryVisible = entriesVisible[entryId]; // d = true, e = false => false\n  // d = false, e = true => true\n  // d = false, e = false\n\n  return defaultVisible === true && entryVisible !== false || defaultVisible === false && entryVisible === true;\n}\n\nfunction isEntryEditable(entry, template) {\n  var property;\n\n  if (isCustomEntry(entry)) {\n    property = getProperty(template, entry);\n    return property && property.editable !== false;\n  }\n\n  return true;\n}\n\nfunction getProperty(template, entry) {\n  var index;\n  var idx = entry.id.replace('custom-' + template.id + '-', '');\n\n  if (idx.indexOf('-') !== -1) {\n    var indexes = idx.split('-');\n\n    if (indexes.length == 2) {\n      var scopeName = indexes[0].replace(/_/g, ':');\n      index = parseInt(indexes[1], 10);\n\n      if (scopeName && !isNaN(index)) {\n        return template.scopes[scopeName].properties[index];\n      }\n    }\n  } else {\n    index = parseInt(idx, 10);\n\n    if (!isNaN(index)) {\n      return template.properties[index];\n    }\n  }\n\n  throw new Error('cannot extract property index for entry <' + entry.id + '>');\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/element-templates/CustomElementsPropertiesActivator.js"],"names":["inherits","require","getTemplate","PropertiesActivator","HIGHER_PRIORITY","CustomElementsPropertiesActivator","eventBus","elementTemplates","call","isEntryVisible","entry","element","template","isPropertyEditable","propertyName","isEntryEditable","$inject","module","exports","CUSTOM_PROPERTIES_PATTERN","DEFAULT_ENTRIES_VISIBLE","_all","id","name","isCustomEntry","test","entryId","entriesVisible","defaultVisible","entryVisible","property","getProperty","editable","index","idx","replace","indexOf","indexes","split","length","scopeName","parseInt","isNaN","scopes","properties","Error"],"mappings":"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","sourcesContent":["'use strict';\n\nvar inherits = require('inherits');\n\nvar getTemplate = require('./Helper').getTemplate;\n\nvar PropertiesActivator = require('../../../PropertiesActivator');\n\nvar HIGHER_PRIORITY = 1100;\n\n/**\n * Applies template visibility settings.\n *\n * Controlled using `entriesVisible` on template config object:\n *\n * ```json\n *     \"entriesVisible\": {\n *       \"_all\": true|false,\n *       \"entryName\": true|false,\n *       ...\n *     }\n * ```\n *\n * @param {EventBus} eventBus\n * @param {ElementTemplates} elementTemplates\n */\nfunction CustomElementsPropertiesActivator(eventBus, elementTemplates) {\n  PropertiesActivator.call(this, eventBus, HIGHER_PRIORITY);\n\n  this.isEntryVisible = function(entry, element) {\n\n    var template = getTemplate(element, elementTemplates);\n\n    if (template && !isEntryVisible(entry, template)) {\n      return false;\n    }\n  };\n\n  this.isPropertyEditable = function(entry, propertyName, element) {\n\n    var template = getTemplate(element, elementTemplates);\n\n    if (template && !isEntryEditable(entry, template)) {\n      return false;\n    }\n  };\n}\n\nCustomElementsPropertiesActivator.$inject = [ 'eventBus', 'elementTemplates' ];\n\ninherits(CustomElementsPropertiesActivator, PropertiesActivator);\n\nmodule.exports = CustomElementsPropertiesActivator;\n\n\n\n// helpers ////////////////////////////////////\n\n\nvar CUSTOM_PROPERTIES_PATTERN = /^custom-/;\n\nvar DEFAULT_ENTRIES_VISIBLE = {\n  _all: false,\n  id: true,\n  name: true\n};\n\nfunction isCustomEntry(entry) {\n  return CUSTOM_PROPERTIES_PATTERN.test(entry.id);\n}\n\nfunction isEntryVisible(entry, template) {\n\n  var entryId = entry.id;\n\n  if (entryId === 'elementTemplate-chooser' || isCustomEntry(entry)) {\n    return true;\n  }\n\n  var entriesVisible = template.entriesVisible || DEFAULT_ENTRIES_VISIBLE;\n\n  if (typeof entriesVisible === 'boolean') {\n    return entriesVisible;\n  }\n\n  var defaultVisible = entriesVisible._all || false,\n      entryVisible = entriesVisible[entryId];\n\n  // d = true, e = false => false\n  // d = false, e = true => true\n  // d = false, e = false\n  return (\n    (defaultVisible === true && entryVisible !== false) ||\n    (defaultVisible === false && entryVisible === true)\n  );\n}\n\nfunction isEntryEditable(entry, template) {\n\n  var property;\n\n  if (isCustomEntry(entry)) {\n    property = getProperty(template, entry);\n\n    return property && property.editable !== false;\n  }\n\n  return true;\n}\n\nfunction getProperty(template, entry) {\n\n  var index;\n  var idx = entry.id.replace('custom-' + template.id + '-', '');\n  if (idx.indexOf('-') !== -1) {\n    var indexes = idx.split('-');\n    if (indexes.length == 2) {\n      var scopeName = indexes[0].replace(/_/g, ':');\n      index = parseInt(indexes[1], 10);\n      if (scopeName && !isNaN(index)) {\n        return template.scopes[scopeName].properties[index];\n      }\n    }\n  } else {\n    index = parseInt(idx, 10);\n    if (!isNaN(index)) {\n      return template.properties[index];\n    }\n  }\n\n  throw new Error('cannot extract property index for entry <' + entry.id + '>');\n}\n"]},"metadata":{},"sourceType":"script"}