{"ast":null,"code":"'use strict';\n\nvar elementHelper = require('../../../../helper/ElementHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n/**\r\n * Get the timer definition type for a given timer event definition.\r\n *\r\n * @param {ModdleElement<bpmn:TimerEventDefinition>} timer\r\n *\r\n * @return {string|undefined} the timer definition type\r\n */\n\n\nfunction getTimerDefinitionType(timer) {\n  var timeDate = timer.get('timeDate');\n\n  if (typeof timeDate !== 'undefined') {\n    return 'timeDate';\n  }\n\n  var timeCycle = timer.get('timeCycle');\n\n  if (typeof timeCycle !== 'undefined') {\n    return 'timeCycle';\n  }\n\n  var timeDuration = timer.get('timeDuration');\n\n  if (typeof timeDuration !== 'undefined') {\n    return 'timeDuration';\n  }\n}\n/**\r\n * Creates 'bpmn:FormalExpression' element.\r\n *\r\n * @param {ModdleElement} parent\r\n * @param {string} body\r\n * @param {BpmnFactory} bpmnFactory\r\n *\r\n * @return {ModdleElement<bpmn:FormalExpression>} a formal expression\r\n */\n\n\nfunction createFormalExpression(parent, body, bpmnFactory) {\n  body = body || undefined;\n  return elementHelper.createElement('bpmn:FormalExpression', {\n    body: body\n  }, parent, bpmnFactory);\n}\n\nfunction TimerEventDefinition(group, element, bpmnFactory, timerEventDefinition) {\n  var selectOptions = [{\n    value: 'timeDate',\n    name: 'Date'\n  }, {\n    value: 'timeDuration',\n    name: 'Duration'\n  }, {\n    value: 'timeCycle',\n    name: 'Cycle'\n  }];\n  group.entries.push(entryFactory.selectBox({\n    id: 'timer-event-definition-type',\n    label: 'Timer Definition Type',\n    selectOptions: selectOptions,\n    emptyParameter: true,\n    modelProperty: 'timerDefinitionType',\n    get: function (element, node) {\n      return {\n        timerDefinitionType: getTimerDefinitionType(timerEventDefinition) || ''\n      };\n    },\n    set: function (element, values) {\n      var props = {\n        timeDuration: undefined,\n        timeDate: undefined,\n        timeCycle: undefined\n      };\n      var newType = values.timerDefinitionType;\n\n      if (values.timerDefinitionType) {\n        var oldType = getTimerDefinitionType(timerEventDefinition);\n        var value;\n\n        if (oldType) {\n          var definition = timerEventDefinition.get(oldType);\n          value = definition.get('body');\n        }\n\n        props[newType] = createFormalExpression(timerEventDefinition, value, bpmnFactory);\n      }\n\n      return cmdHelper.updateBusinessObject(element, timerEventDefinition, props);\n    }\n  }));\n  group.entries.push(entryFactory.textField({\n    id: 'timer-event-definition',\n    label: 'Timer Definition',\n    modelProperty: 'timerDefinition',\n    get: function (element, node) {\n      var type = getTimerDefinitionType(timerEventDefinition);\n      var definition = type && timerEventDefinition.get(type);\n      var value = definition && definition.get('body');\n      return {\n        timerDefinition: value\n      };\n    },\n    set: function (element, values) {\n      var type = getTimerDefinitionType(timerEventDefinition);\n      var definition = type && timerEventDefinition.get(type);\n\n      if (definition) {\n        return cmdHelper.updateBusinessObject(element, definition, {\n          body: values.timerDefinition || undefined\n        });\n      }\n    },\n    validate: function (element) {\n      var type = getTimerDefinitionType(timerEventDefinition);\n      var definition = type && timerEventDefinition.get(type);\n\n      if (definition) {\n        var value = definition.get('body');\n\n        if (!value) {\n          return {\n            timerDefinition: 'Must provide a value'\n          };\n        }\n      }\n    },\n    hidden: function (element) {\n      return !getTimerDefinitionType(timerEventDefinition);\n    }\n  }));\n}\n\nmodule.exports = TimerEventDefinition;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/bpmn/parts/implementation/TimerEventDefinition.js"],"names":["elementHelper","require","cmdHelper","entryFactory","getTimerDefinitionType","timer","timeDate","get","timeCycle","timeDuration","createFormalExpression","parent","body","bpmnFactory","undefined","createElement","TimerEventDefinition","group","element","timerEventDefinition","selectOptions","value","name","entries","push","selectBox","id","label","emptyParameter","modelProperty","node","timerDefinitionType","set","values","props","newType","oldType","definition","updateBusinessObject","textField","type","timerDefinition","validate","hidden","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar elementHelper = require('../../../../helper/ElementHelper'),\r\n    cmdHelper = require('../../../../helper/CmdHelper');\r\n\r\nvar entryFactory = require('../../../../factory/EntryFactory');\r\n\r\n/**\r\n * Get the timer definition type for a given timer event definition.\r\n *\r\n * @param {ModdleElement<bpmn:TimerEventDefinition>} timer\r\n *\r\n * @return {string|undefined} the timer definition type\r\n */\r\nfunction getTimerDefinitionType(timer) {\r\n  var timeDate = timer.get('timeDate');\r\n  if (typeof timeDate !== 'undefined') {\r\n    return 'timeDate';\r\n  }\r\n\r\n  var timeCycle = timer.get('timeCycle');\r\n  if (typeof timeCycle !== 'undefined') {\r\n    return 'timeCycle';\r\n  }\r\n\r\n  var timeDuration = timer.get('timeDuration');\r\n  if (typeof timeDuration !== 'undefined') {\r\n    return 'timeDuration';\r\n  }\r\n}\r\n\r\n/**\r\n * Creates 'bpmn:FormalExpression' element.\r\n *\r\n * @param {ModdleElement} parent\r\n * @param {string} body\r\n * @param {BpmnFactory} bpmnFactory\r\n *\r\n * @return {ModdleElement<bpmn:FormalExpression>} a formal expression\r\n */\r\nfunction createFormalExpression(parent, body, bpmnFactory) {\r\n  body = body || undefined;\r\n  return elementHelper.createElement('bpmn:FormalExpression', { body: body }, parent, bpmnFactory);\r\n}\r\n\r\nfunction TimerEventDefinition(group, element, bpmnFactory, timerEventDefinition) {\r\n\r\n  var selectOptions = [\r\n    { value: 'timeDate', name: 'Date' },\r\n    { value: 'timeDuration', name: 'Duration' },\r\n    { value: 'timeCycle', name: 'Cycle' }\r\n  ];\r\n\r\n  group.entries.push(entryFactory.selectBox({\r\n    id: 'timer-event-definition-type',\r\n    label: 'Timer Definition Type',\r\n    selectOptions: selectOptions,\r\n    emptyParameter: true,\r\n    modelProperty: 'timerDefinitionType',\r\n\r\n    get: function(element, node) {\r\n      return {\r\n        timerDefinitionType: getTimerDefinitionType(timerEventDefinition) || ''\r\n      };\r\n    },\r\n\r\n    set: function(element, values) {\r\n      var props = {\r\n        timeDuration: undefined,\r\n        timeDate: undefined,\r\n        timeCycle: undefined\r\n      };\r\n\r\n      var newType = values.timerDefinitionType;\r\n      if (values.timerDefinitionType) {\r\n        var oldType = getTimerDefinitionType(timerEventDefinition);\r\n\r\n        var value;\r\n        if (oldType) {\r\n          var definition = timerEventDefinition.get(oldType);\r\n          value = definition.get('body');\r\n        }\r\n\r\n        props[newType] = createFormalExpression(timerEventDefinition, value, bpmnFactory);\r\n      }\r\n\r\n      return cmdHelper.updateBusinessObject(element, timerEventDefinition, props);\r\n    }\r\n\r\n  }));\r\n\r\n\r\n  group.entries.push(entryFactory.textField({\r\n    id: 'timer-event-definition',\r\n    label: 'Timer Definition',\r\n    modelProperty: 'timerDefinition',\r\n\r\n    get: function(element, node) {\r\n      var type = getTimerDefinitionType(timerEventDefinition);\r\n      var definition = type && timerEventDefinition.get(type);\r\n      var value = definition && definition.get('body');\r\n      return {\r\n        timerDefinition: value\r\n      };\r\n    },\r\n\r\n    set: function(element, values) {\r\n      var type = getTimerDefinitionType(timerEventDefinition);\r\n      var definition = type && timerEventDefinition.get(type);\r\n\r\n      if (definition) {\r\n        return cmdHelper.updateBusinessObject(element, definition, {\r\n          body: values.timerDefinition || undefined\r\n        });\r\n      }\r\n    },\r\n\r\n    validate: function(element) {\r\n      var type = getTimerDefinitionType(timerEventDefinition);\r\n      var definition = type && timerEventDefinition.get(type);\r\n      if (definition) {\r\n        var value = definition.get('body');\r\n        if (!value) {\r\n          return {\r\n            timerDefinition: 'Must provide a value'\r\n          };\r\n        }\r\n      }\r\n    },\r\n\r\n    hidden: function(element) {\r\n      return !getTimerDefinitionType(timerEventDefinition);\r\n    }\r\n\r\n  }));\r\n\r\n}\r\n\r\nmodule.exports = TimerEventDefinition;\r\n"]},"metadata":{},"sourceType":"script"}