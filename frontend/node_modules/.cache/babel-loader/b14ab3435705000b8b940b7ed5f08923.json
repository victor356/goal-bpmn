{"ast":null,"code":"'use strict';\n\nvar ChangeElementTemplateHandler = require('./ChangeElementTemplateHandler');\n\nvar getTemplate = require('../Helper').getTemplate,\n    getDefaultTemplate = require('../Helper').getDefaultTemplate;\n\nfunction registerHandlers(commandStack, elementTemplates, eventBus, elementRegistry) {\n  commandStack.registerHandler('propertiesPanel.camunda.changeTemplate', ChangeElementTemplateHandler); // apply default element templates on shape creation\n\n  eventBus.on(['commandStack.shape.create.postExecuted'], function (context) {\n    applyDefaultTemplate(context.context.shape, elementTemplates, commandStack);\n  }); // apply default element templates on connection creation\n\n  eventBus.on(['commandStack.connection.create.postExecuted'], function (context) {\n    applyDefaultTemplate(context.context.connection, elementTemplates, commandStack);\n  });\n}\n\nregisterHandlers.$inject = ['commandStack', 'elementTemplates', 'eventBus', 'elementRegistry'];\nmodule.exports = {\n  __init__: [registerHandlers]\n};\n\nfunction applyDefaultTemplate(element, elementTemplates, commandStack) {\n  if (!getTemplate(element, elementTemplates) && getDefaultTemplate(element, elementTemplates)) {\n    var command = 'propertiesPanel.camunda.changeTemplate';\n    var commandContext = {\n      element: element,\n      newTemplate: getDefaultTemplate(element, elementTemplates)\n    };\n    commandStack.execute(command, commandContext);\n  }\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/element-templates/cmd/index.js"],"names":["ChangeElementTemplateHandler","require","getTemplate","getDefaultTemplate","registerHandlers","commandStack","elementTemplates","eventBus","elementRegistry","registerHandler","on","context","applyDefaultTemplate","shape","connection","$inject","module","exports","__init__","element","command","commandContext","newTemplate","execute"],"mappings":"AAAA;;AAEA,IAAIA,4BAA4B,GAAGC,OAAO,CAAC,gCAAD,CAA1C;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBC,WAAvC;AAAA,IACIC,kBAAkB,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,kBAD9C;;AAGA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,gBAAxC,EAA0DC,QAA1D,EAAoEC,eAApE,EAAqF;AACnFH,EAAAA,YAAY,CAACI,eAAb,CACE,wCADF,EAEET,4BAFF,EADmF,CAMnF;;AACAO,EAAAA,QAAQ,CAACG,EAAT,CAAY,CAAE,wCAAF,CAAZ,EAA0D,UAASC,OAAT,EAAkB;AAC1EC,IAAAA,oBAAoB,CAACD,OAAO,CAACA,OAAR,CAAgBE,KAAjB,EAAwBP,gBAAxB,EAA0CD,YAA1C,CAApB;AACD,GAFD,EAPmF,CAWnF;;AACAE,EAAAA,QAAQ,CAACG,EAAT,CAAY,CAAE,6CAAF,CAAZ,EAA+D,UAASC,OAAT,EAAkB;AAC/EC,IAAAA,oBAAoB,CAACD,OAAO,CAACA,OAAR,CAAgBG,UAAjB,EAA6BR,gBAA7B,EAA+CD,YAA/C,CAApB;AACD,GAFD;AAGD;;AAEDD,gBAAgB,CAACW,OAAjB,GAA2B,CAAE,cAAF,EAAkB,kBAAlB,EAAsC,UAAtC,EAAkD,iBAAlD,CAA3B;AAGAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,CAAEd,gBAAF;AADK,CAAjB;;AAKA,SAASQ,oBAAT,CAA8BO,OAA9B,EAAuCb,gBAAvC,EAAyDD,YAAzD,EAAuE;AAErE,MAAI,CAACH,WAAW,CAACiB,OAAD,EAAUb,gBAAV,CAAZ,IACGH,kBAAkB,CAACgB,OAAD,EAAUb,gBAAV,CADzB,EACsD;AAEpD,QAAIc,OAAO,GAAG,wCAAd;AACA,QAAIC,cAAc,GAAG;AACnBF,MAAAA,OAAO,EAAEA,OADU;AAEnBG,MAAAA,WAAW,EAAEnB,kBAAkB,CAACgB,OAAD,EAAUb,gBAAV;AAFZ,KAArB;AAKAD,IAAAA,YAAY,CAACkB,OAAb,CAAqBH,OAArB,EAA8BC,cAA9B;AACD;AACF","sourcesContent":["'use strict';\n\nvar ChangeElementTemplateHandler = require('./ChangeElementTemplateHandler');\n\nvar getTemplate = require('../Helper').getTemplate,\n    getDefaultTemplate = require('../Helper').getDefaultTemplate;\n\nfunction registerHandlers(commandStack, elementTemplates, eventBus, elementRegistry) {\n  commandStack.registerHandler(\n    'propertiesPanel.camunda.changeTemplate',\n    ChangeElementTemplateHandler\n  );\n\n  // apply default element templates on shape creation\n  eventBus.on([ 'commandStack.shape.create.postExecuted' ], function(context) {\n    applyDefaultTemplate(context.context.shape, elementTemplates, commandStack);\n  });\n\n  // apply default element templates on connection creation\n  eventBus.on([ 'commandStack.connection.create.postExecuted' ], function(context) {\n    applyDefaultTemplate(context.context.connection, elementTemplates, commandStack);\n  });\n}\n\nregisterHandlers.$inject = [ 'commandStack', 'elementTemplates', 'eventBus', 'elementRegistry' ];\n\n\nmodule.exports = {\n  __init__: [ registerHandlers ]\n};\n\n\nfunction applyDefaultTemplate(element, elementTemplates, commandStack) {\n\n  if (!getTemplate(element, elementTemplates)\n      && getDefaultTemplate(element, elementTemplates)) {\n\n    var command = 'propertiesPanel.camunda.changeTemplate';\n    var commandContext = {\n      element: element,\n      newTemplate: getDefaultTemplate(element, elementTemplates)\n    };\n\n    commandStack.execute(command, commandContext);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}