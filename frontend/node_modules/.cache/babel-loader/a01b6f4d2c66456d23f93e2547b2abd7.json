{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getImplementationType = options.getImplementationType,\n      getBusinessObject = options.getBusinessObject;\n\n  function isExternal(element) {\n    return getImplementationType(element) === 'external';\n  }\n\n  var topicEntry = entryFactory.textField({\n    id: 'externalTopic',\n    label: translate('Topic'),\n    modelProperty: 'externalTopic',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        externalTopic: bo.get('camunda:topic')\n      };\n    },\n    set: function (element, values, node) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:topic': values.externalTopic\n      });\n    },\n    validate: function (element, values, node) {\n      return isExternal(element) && !values.externalTopic ? {\n        externalTopic: 'Must provide a value'\n      } : {};\n    },\n    hidden: function (element, node) {\n      return !isExternal(element);\n    }\n  });\n  return [topicEntry];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/External.js"],"names":["entryFactory","require","cmdHelper","module","exports","element","bpmnFactory","options","translate","getImplementationType","getBusinessObject","isExternal","topicEntry","textField","id","label","modelProperty","get","node","bo","externalTopic","set","values","updateBusinessObject","validate","hidden"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kCAAD,CAA1B;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,8BAAD,CADvB;;AAGAE,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,SAAxC,EAAmD;AAElE,MAAIC,qBAAqB,GAAGF,OAAO,CAACE,qBAApC;AAAA,MACIC,iBAAiB,GAAGH,OAAO,CAACG,iBADhC;;AAGA,WAASC,UAAT,CAAoBN,OAApB,EAA6B;AAC3B,WAAOI,qBAAqB,CAACJ,OAAD,CAArB,KAAmC,UAA1C;AACD;;AAED,MAAIO,UAAU,GAAGZ,YAAY,CAACa,SAAb,CAAuB;AACtCC,IAAAA,EAAE,EAAE,eADkC;AAEtCC,IAAAA,KAAK,EAAEP,SAAS,CAAC,OAAD,CAFsB;AAGtCQ,IAAAA,aAAa,EAAE,eAHuB;AAKtCC,IAAAA,GAAG,EAAE,UAASZ,OAAT,EAAkBa,IAAlB,EAAwB;AAC3B,UAAIC,EAAE,GAAGT,iBAAiB,CAACL,OAAD,CAA1B;AACA,aAAO;AAAEe,QAAAA,aAAa,EAAED,EAAE,CAACF,GAAH,CAAO,eAAP;AAAjB,OAAP;AACD,KARqC;AAUtCI,IAAAA,GAAG,EAAE,UAAShB,OAAT,EAAkBiB,MAAlB,EAA0BJ,IAA1B,EAAgC;AACnC,UAAIC,EAAE,GAAGT,iBAAiB,CAACL,OAAD,CAA1B;AACA,aAAOH,SAAS,CAACqB,oBAAV,CAA+BlB,OAA/B,EAAwCc,EAAxC,EAA4C;AACjD,yBAAiBG,MAAM,CAACF;AADyB,OAA5C,CAAP;AAGD,KAfqC;AAiBtCI,IAAAA,QAAQ,EAAE,UAASnB,OAAT,EAAkBiB,MAAlB,EAA0BJ,IAA1B,EAAgC;AACxC,aAAOP,UAAU,CAACN,OAAD,CAAV,IAAuB,CAACiB,MAAM,CAACF,aAA/B,GAA+C;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OAA/C,GAA2F,EAAlG;AACD,KAnBqC;AAqBtCK,IAAAA,MAAM,EAAE,UAASpB,OAAT,EAAkBa,IAAlB,EAAwB;AAC9B,aAAO,CAACP,UAAU,CAACN,OAAD,CAAlB;AACD;AAvBqC,GAAvB,CAAjB;AA2BA,SAAO,CAAEO,UAAF,CAAP;AAED,CAtCD","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getImplementationType = options.getImplementationType,\n      getBusinessObject = options.getBusinessObject;\n\n  function isExternal(element) {\n    return getImplementationType(element) === 'external';\n  }\n\n  var topicEntry = entryFactory.textField({\n    id: 'externalTopic',\n    label: translate('Topic'),\n    modelProperty: 'externalTopic',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      return { externalTopic: bo.get('camunda:topic') };\n    },\n\n    set: function(element, values, node) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:topic': values.externalTopic\n      });\n    },\n\n    validate: function(element, values, node) {\n      return isExternal(element) && !values.externalTopic ? { externalTopic: 'Must provide a value' } : {};\n    },\n\n    hidden: function(element, node) {\n      return !isExternal(element);\n    }\n\n  });\n\n  return [ topicEntry ];\n\n};\n"]},"metadata":{},"sourceType":"script"}