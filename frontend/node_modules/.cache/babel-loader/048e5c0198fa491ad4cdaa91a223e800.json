{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { event as domEvent, query as domQuery, queryAll as domQueryAll } from 'min-dom';\nimport { BENDPOINT_CLS, SEGMENT_DRAGGER_CLS, addBendpoint, addSegmentDragger, toCanvasCoordinates } from './BendpointUtil';\nimport { escapeCSS } from '../../util/EscapeUtil';\nimport { pointsAligned, getMidPoint } from '../../util/Geometry';\nimport { getApproxIntersection } from '../../util/LineIntersection';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { translate } from '../../util/SvgTransformUtil';\n/**\n * A service that adds editable bendpoints to connections.\n */\n\nexport default function Bendpoints(eventBus, canvas, interactionEvents, bendpointMove, connectionSegmentMove) {\n  function getConnectionIntersection(waypoints, event) {\n    var localPosition = toCanvasCoordinates(canvas, event),\n        intersection = getApproxIntersection(waypoints, localPosition);\n    return intersection;\n  }\n\n  function isIntersectionMiddle(intersection, waypoints, treshold) {\n    var idx = intersection.index,\n        p = intersection.point,\n        p0,\n        p1,\n        mid,\n        aligned,\n        xDelta,\n        yDelta;\n\n    if (idx <= 0 || intersection.bendpoint) {\n      return false;\n    }\n\n    p0 = waypoints[idx - 1];\n    p1 = waypoints[idx];\n    mid = getMidPoint(p0, p1), aligned = pointsAligned(p0, p1);\n    xDelta = Math.abs(p.x - mid.x);\n    yDelta = Math.abs(p.y - mid.y);\n    return aligned && xDelta <= treshold && yDelta <= treshold;\n  }\n\n  function activateBendpointMove(event, connection) {\n    var waypoints = connection.waypoints,\n        intersection = getConnectionIntersection(waypoints, event);\n\n    if (!intersection) {\n      return;\n    }\n\n    if (isIntersectionMiddle(intersection, waypoints, 10)) {\n      connectionSegmentMove.start(event, connection, intersection.index);\n    } else {\n      bendpointMove.start(event, connection, intersection.index, !intersection.bendpoint);\n    } // we've handled the event\n\n\n    return true;\n  }\n\n  function bindInteractionEvents(node, eventName, element) {\n    domEvent.bind(node, eventName, function (event) {\n      interactionEvents.triggerMouseEvent(eventName, event, element);\n      event.stopPropagation();\n    });\n  }\n\n  function getBendpointsContainer(element, create) {\n    var layer = canvas.getLayer('overlays'),\n        gfx = domQuery('.djs-bendpoints[data-element-id=\"' + escapeCSS(element.id) + '\"]', layer);\n\n    if (!gfx && create) {\n      gfx = svgCreate('g');\n      svgAttr(gfx, {\n        'data-element-id': element.id\n      });\n      svgClasses(gfx).add('djs-bendpoints');\n      svgAppend(layer, gfx);\n      bindInteractionEvents(gfx, 'mousedown', element);\n      bindInteractionEvents(gfx, 'click', element);\n      bindInteractionEvents(gfx, 'dblclick', element);\n    }\n\n    return gfx;\n  }\n\n  function createBendpoints(gfx, connection) {\n    connection.waypoints.forEach(function (p, idx) {\n      var bendpoint = addBendpoint(gfx);\n      svgAppend(gfx, bendpoint);\n      translate(bendpoint, p.x, p.y);\n    }); // add floating bendpoint\n\n    addBendpoint(gfx, 'floating');\n  }\n\n  function createSegmentDraggers(gfx, connection) {\n    var waypoints = connection.waypoints;\n    var segmentStart, segmentEnd;\n\n    for (var i = 1; i < waypoints.length; i++) {\n      segmentStart = waypoints[i - 1];\n      segmentEnd = waypoints[i];\n\n      if (pointsAligned(segmentStart, segmentEnd)) {\n        addSegmentDragger(gfx, segmentStart, segmentEnd);\n      }\n    }\n  }\n\n  function clearBendpoints(gfx) {\n    forEach(domQueryAll('.' + BENDPOINT_CLS, gfx), function (node) {\n      svgRemove(node);\n    });\n  }\n\n  function clearSegmentDraggers(gfx) {\n    forEach(domQueryAll('.' + SEGMENT_DRAGGER_CLS, gfx), function (node) {\n      svgRemove(node);\n    });\n  }\n\n  function addHandles(connection) {\n    var gfx = getBendpointsContainer(connection);\n\n    if (!gfx) {\n      gfx = getBendpointsContainer(connection, true);\n      createBendpoints(gfx, connection);\n      createSegmentDraggers(gfx, connection);\n    }\n\n    return gfx;\n  }\n\n  function updateHandles(connection) {\n    var gfx = getBendpointsContainer(connection);\n\n    if (gfx) {\n      clearSegmentDraggers(gfx);\n      clearBendpoints(gfx);\n      createSegmentDraggers(gfx, connection);\n      createBendpoints(gfx, connection);\n    }\n  }\n\n  eventBus.on('connection.changed', function (event) {\n    updateHandles(event.element);\n  });\n  eventBus.on('connection.remove', function (event) {\n    var gfx = getBendpointsContainer(event.element);\n\n    if (gfx) {\n      svgRemove(gfx);\n    }\n  });\n  eventBus.on('element.marker.update', function (event) {\n    var element = event.element,\n        bendpointsGfx;\n\n    if (!element.waypoints) {\n      return;\n    }\n\n    bendpointsGfx = addHandles(element);\n\n    if (event.add) {\n      svgClasses(bendpointsGfx).add(event.marker);\n    } else {\n      svgClasses(bendpointsGfx).remove(event.marker);\n    }\n  });\n  eventBus.on('element.mousemove', function (event) {\n    var element = event.element,\n        waypoints = element.waypoints,\n        bendpointsGfx,\n        floating,\n        intersection;\n\n    if (waypoints) {\n      bendpointsGfx = getBendpointsContainer(element, true);\n      floating = domQuery('.floating', bendpointsGfx);\n\n      if (!floating) {\n        return;\n      }\n\n      intersection = getConnectionIntersection(waypoints, event.originalEvent);\n\n      if (intersection) {\n        translate(floating, intersection.point.x, intersection.point.y);\n      }\n    }\n  });\n  eventBus.on('element.mousedown', function (event) {\n    var originalEvent = event.originalEvent,\n        element = event.element,\n        waypoints = element.waypoints;\n\n    if (!waypoints) {\n      return;\n    }\n\n    return activateBendpointMove(originalEvent, element, waypoints);\n  });\n  eventBus.on('selection.changed', function (event) {\n    var newSelection = event.newSelection,\n        primary = newSelection[0];\n\n    if (primary && primary.waypoints) {\n      addHandles(primary);\n    }\n  });\n  eventBus.on('element.hover', function (event) {\n    var element = event.element;\n\n    if (element.waypoints) {\n      addHandles(element);\n      interactionEvents.registerEvent(event.gfx, 'mousemove', 'element.mousemove');\n    }\n  });\n  eventBus.on('element.out', function (event) {\n    interactionEvents.unregisterEvent(event.gfx, 'mousemove', 'element.mousemove');\n  }); // update bendpoint container data attribute on element ID change\n\n  eventBus.on('element.updateId', function (context) {\n    var element = context.element,\n        newId = context.newId;\n\n    if (element.waypoints) {\n      var bendpointContainer = getBendpointsContainer(element);\n\n      if (bendpointContainer) {\n        svgAttr(bendpointContainer, {\n          'data-element-id': newId\n        });\n      }\n    }\n  }); // API\n\n  this.addHandles = addHandles;\n  this.updateHandles = updateHandles;\n  this.getBendpointsContainer = getBendpointsContainer;\n}\nBendpoints.$inject = ['eventBus', 'canvas', 'interactionEvents', 'bendpointMove', 'connectionSegmentMove'];","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/bendpoints/Bendpoints.js"],"names":["forEach","event","domEvent","query","domQuery","queryAll","domQueryAll","BENDPOINT_CLS","SEGMENT_DRAGGER_CLS","addBendpoint","addSegmentDragger","toCanvasCoordinates","escapeCSS","pointsAligned","getMidPoint","getApproxIntersection","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","translate","Bendpoints","eventBus","canvas","interactionEvents","bendpointMove","connectionSegmentMove","getConnectionIntersection","waypoints","localPosition","intersection","isIntersectionMiddle","treshold","idx","index","p","point","p0","p1","mid","aligned","xDelta","yDelta","bendpoint","Math","abs","x","y","activateBendpointMove","connection","start","bindInteractionEvents","node","eventName","element","bind","triggerMouseEvent","stopPropagation","getBendpointsContainer","layer","getLayer","gfx","id","add","createBendpoints","createSegmentDraggers","segmentStart","segmentEnd","i","length","clearBendpoints","clearSegmentDraggers","addHandles","updateHandles","on","bendpointsGfx","marker","floating","originalEvent","newSelection","primary","registerEvent","unregisterEvent","context","newId","bendpointContainer","$inject"],"mappings":"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","sourcesContent":["import { forEach } from 'min-dash';\n\nimport {\n  event as domEvent,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport {\n  BENDPOINT_CLS,\n  SEGMENT_DRAGGER_CLS,\n  addBendpoint,\n  addSegmentDragger,\n  toCanvasCoordinates\n} from './BendpointUtil';\n\nimport {\n  escapeCSS\n} from '../../util/EscapeUtil';\n\nimport {\n  pointsAligned,\n  getMidPoint\n} from '../../util/Geometry';\n\nimport {\n  getApproxIntersection\n} from '../../util/LineIntersection';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport { translate } from '../../util/SvgTransformUtil';\n\n\n/**\n * A service that adds editable bendpoints to connections.\n */\nexport default function Bendpoints(\n    eventBus, canvas, interactionEvents,\n    bendpointMove, connectionSegmentMove) {\n\n  function getConnectionIntersection(waypoints, event) {\n    var localPosition = toCanvasCoordinates(canvas, event),\n        intersection = getApproxIntersection(waypoints, localPosition);\n\n    return intersection;\n  }\n\n  function isIntersectionMiddle(intersection, waypoints, treshold) {\n    var idx = intersection.index,\n        p = intersection.point,\n        p0, p1, mid, aligned, xDelta, yDelta;\n\n    if (idx <= 0 || intersection.bendpoint) {\n      return false;\n    }\n\n    p0 = waypoints[idx - 1];\n    p1 = waypoints[idx];\n    mid = getMidPoint(p0, p1),\n    aligned = pointsAligned(p0, p1);\n    xDelta = Math.abs(p.x - mid.x);\n    yDelta = Math.abs(p.y - mid.y);\n\n    return aligned && xDelta <= treshold && yDelta <= treshold;\n  }\n\n  function activateBendpointMove(event, connection) {\n    var waypoints = connection.waypoints,\n        intersection = getConnectionIntersection(waypoints, event);\n\n    if (!intersection) {\n      return;\n    }\n\n    if (isIntersectionMiddle(intersection, waypoints, 10)) {\n      connectionSegmentMove.start(event, connection, intersection.index);\n    } else {\n      bendpointMove.start(event, connection, intersection.index, !intersection.bendpoint);\n    }\n\n    // we've handled the event\n    return true;\n  }\n\n  function bindInteractionEvents(node, eventName, element) {\n\n    domEvent.bind(node, eventName, function(event) {\n      interactionEvents.triggerMouseEvent(eventName, event, element);\n      event.stopPropagation();\n    });\n  }\n\n  function getBendpointsContainer(element, create) {\n\n    var layer = canvas.getLayer('overlays'),\n        gfx = domQuery('.djs-bendpoints[data-element-id=\"' + escapeCSS(element.id) + '\"]', layer);\n\n    if (!gfx && create) {\n      gfx = svgCreate('g');\n      svgAttr(gfx, { 'data-element-id': element.id });\n      svgClasses(gfx).add('djs-bendpoints');\n\n      svgAppend(layer, gfx);\n\n      bindInteractionEvents(gfx, 'mousedown', element);\n      bindInteractionEvents(gfx, 'click', element);\n      bindInteractionEvents(gfx, 'dblclick', element);\n    }\n\n    return gfx;\n  }\n\n  function createBendpoints(gfx, connection) {\n    connection.waypoints.forEach(function(p, idx) {\n      var bendpoint = addBendpoint(gfx);\n\n      svgAppend(gfx, bendpoint);\n\n      translate(bendpoint, p.x, p.y);\n    });\n\n    // add floating bendpoint\n    addBendpoint(gfx, 'floating');\n  }\n\n  function createSegmentDraggers(gfx, connection) {\n\n    var waypoints = connection.waypoints;\n\n    var segmentStart,\n        segmentEnd;\n\n    for (var i = 1; i < waypoints.length; i++) {\n\n      segmentStart = waypoints[i - 1];\n      segmentEnd = waypoints[i];\n\n      if (pointsAligned(segmentStart, segmentEnd)) {\n        addSegmentDragger(gfx, segmentStart, segmentEnd);\n      }\n    }\n  }\n\n  function clearBendpoints(gfx) {\n    forEach(domQueryAll('.' + BENDPOINT_CLS, gfx), function(node) {\n      svgRemove(node);\n    });\n  }\n\n  function clearSegmentDraggers(gfx) {\n    forEach(domQueryAll('.' + SEGMENT_DRAGGER_CLS, gfx), function(node) {\n      svgRemove(node);\n    });\n  }\n\n  function addHandles(connection) {\n\n    var gfx = getBendpointsContainer(connection);\n\n    if (!gfx) {\n      gfx = getBendpointsContainer(connection, true);\n\n      createBendpoints(gfx, connection);\n      createSegmentDraggers(gfx, connection);\n    }\n\n    return gfx;\n  }\n\n  function updateHandles(connection) {\n\n    var gfx = getBendpointsContainer(connection);\n\n    if (gfx) {\n      clearSegmentDraggers(gfx);\n      clearBendpoints(gfx);\n      createSegmentDraggers(gfx, connection);\n      createBendpoints(gfx, connection);\n    }\n  }\n\n  eventBus.on('connection.changed', function(event) {\n    updateHandles(event.element);\n  });\n\n  eventBus.on('connection.remove', function(event) {\n    var gfx = getBendpointsContainer(event.element);\n\n    if (gfx) {\n      svgRemove(gfx);\n    }\n  });\n\n  eventBus.on('element.marker.update', function(event) {\n\n    var element = event.element,\n        bendpointsGfx;\n\n    if (!element.waypoints) {\n      return;\n    }\n\n    bendpointsGfx = addHandles(element);\n\n    if (event.add) {\n      svgClasses(bendpointsGfx).add(event.marker);\n    } else {\n      svgClasses(bendpointsGfx).remove(event.marker);\n    }\n  });\n\n  eventBus.on('element.mousemove', function(event) {\n\n    var element = event.element,\n        waypoints = element.waypoints,\n        bendpointsGfx,\n        floating,\n        intersection;\n\n    if (waypoints) {\n      bendpointsGfx = getBendpointsContainer(element, true);\n      floating = domQuery('.floating', bendpointsGfx);\n\n      if (!floating) {\n        return;\n      }\n\n      intersection = getConnectionIntersection(waypoints, event.originalEvent);\n\n      if (intersection) {\n        translate(floating, intersection.point.x, intersection.point.y);\n      }\n    }\n  });\n\n  eventBus.on('element.mousedown', function(event) {\n\n    var originalEvent = event.originalEvent,\n        element = event.element,\n        waypoints = element.waypoints;\n\n    if (!waypoints) {\n      return;\n    }\n\n    return activateBendpointMove(originalEvent, element, waypoints);\n  });\n\n  eventBus.on('selection.changed', function(event) {\n    var newSelection = event.newSelection,\n        primary = newSelection[0];\n\n    if (primary && primary.waypoints) {\n      addHandles(primary);\n    }\n  });\n\n  eventBus.on('element.hover', function(event) {\n    var element = event.element;\n\n    if (element.waypoints) {\n      addHandles(element);\n      interactionEvents.registerEvent(event.gfx, 'mousemove', 'element.mousemove');\n    }\n  });\n\n  eventBus.on('element.out', function(event) {\n    interactionEvents.unregisterEvent(event.gfx, 'mousemove', 'element.mousemove');\n  });\n\n  // update bendpoint container data attribute on element ID change\n  eventBus.on('element.updateId', function(context) {\n    var element = context.element,\n        newId = context.newId;\n\n    if (element.waypoints) {\n      var bendpointContainer = getBendpointsContainer(element);\n\n      if (bendpointContainer) {\n        svgAttr(bendpointContainer, { 'data-element-id': newId });\n      }\n    }\n  });\n\n  // API\n\n  this.addHandles = addHandles;\n  this.updateHandles = updateHandles;\n  this.getBendpointsContainer = getBendpointsContainer;\n}\n\nBendpoints.$inject = [\n  'eventBus',\n  'canvas',\n  'interactionEvents',\n  'bendpointMove',\n  'connectionSegmentMove'\n];\n"]},"metadata":{},"sourceType":"module"}