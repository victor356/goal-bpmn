{"ast":null,"code":"import { isString, assign, forEach } from 'min-dash';\nimport { domify, attr as domAttr, classes as domClasses, remove as domRemove, delegate as domDelegate } from 'min-dom';\nimport Ids from '../../util/IdGenerator'; // document wide unique tooltip ids\n\nvar ids = new Ids('tt');\n\nfunction createRoot(parentNode) {\n  var root = domify('<div class=\"djs-tooltip-container\" style=\"position: absolute; width: 0; height: 0;\" />');\n  parentNode.insertBefore(root, parentNode.firstChild);\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, {\n    left: x + 'px',\n    top: y + 'px'\n  });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nvar tooltipClass = 'djs-tooltip',\n    tooltipSelector = '.' + tooltipClass;\n/**\n * A service that allows users to render tool tips on the diagram.\n *\n * The tooltip service will take care of updating the tooltip positioning\n * during navigation + zooming.\n *\n * @example\n *\n * ```javascript\n *\n * // add a pink badge on the top left of the shape\n * tooltips.add({\n *   position: {\n *     x: 50,\n *     y: 100\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or with optional life span\n * tooltips.add({\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>',\n *   ttl: 2000\n * });\n *\n * // remove a tool tip\n * var id = tooltips.add(...);\n * tooltips.remove(id);\n * ```\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\n\nexport default function Tooltips(eventBus, canvas) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._ids = ids;\n  this._tooltipDefaults = {\n    show: {\n      minZoom: 0.7,\n      maxZoom: 5.0\n    }\n  };\n  /**\n   * Mapping tooltipId -> tooltip\n   */\n\n  this._tooltips = {}; // root html element for all tooltips\n\n  this._tooltipRoot = createRoot(canvas.getContainer());\n  var self = this;\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mousedown', function (event) {\n    event.stopPropagation();\n  });\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseover', function (event) {\n    self.trigger('mouseover', event);\n  });\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseout', function (event) {\n    self.trigger('mouseout', event);\n  });\n\n  this._init();\n}\nTooltips.$inject = ['eventBus', 'canvas'];\n/**\n * Adds a HTML tooltip to the diagram\n *\n * @param {Object}               tooltip   the tooltip configuration\n *\n * @param {String|DOMElement}    tooltip.html                 html element to use as an tooltip\n * @param {Object}               [tooltip.show]               show configuration\n * @param {Number}               [tooltip.show.minZoom]       minimal zoom level to show the tooltip\n * @param {Number}               [tooltip.show.maxZoom]       maximum zoom level to show the tooltip\n * @param {Object}               tooltip.position             where to attach the tooltip\n * @param {Number}               [tooltip.position.left]      relative to element bbox left attachment\n * @param {Number}               [tooltip.position.top]       relative to element bbox top attachment\n * @param {Number}               [tooltip.position.bottom]    relative to element bbox bottom attachment\n * @param {Number}               [tooltip.position.right]     relative to element bbox right attachment\n * @param {Number}               [tooltip.timeout=-1]\n *\n * @return {String}              id that may be used to reference the tooltip for update or removal\n */\n\nTooltips.prototype.add = function (tooltip) {\n  if (!tooltip.position) {\n    throw new Error('must specifiy tooltip position');\n  }\n\n  if (!tooltip.html) {\n    throw new Error('must specifiy tooltip html');\n  }\n\n  var id = this._ids.next();\n\n  tooltip = assign({}, this._tooltipDefaults, tooltip, {\n    id: id\n  });\n\n  this._addTooltip(tooltip);\n\n  if (tooltip.timeout) {\n    this.setTimeout(tooltip);\n  }\n\n  return id;\n};\n\nTooltips.prototype.trigger = function (action, event) {\n  var node = event.delegateTarget || event.target;\n  var tooltip = this.get(domAttr(node, 'data-tooltip-id'));\n\n  if (!tooltip) {\n    return;\n  }\n\n  if (action === 'mouseover' && tooltip.timeout) {\n    this.clearTimeout(tooltip);\n  }\n\n  if (action === 'mouseout' && tooltip.timeout) {\n    // cut timeout after mouse out\n    tooltip.timeout = 1000;\n    this.setTimeout(tooltip);\n  }\n};\n/**\n * Get a tooltip with the given id\n *\n * @param {String} id\n */\n\n\nTooltips.prototype.get = function (id) {\n  if (typeof id !== 'string') {\n    id = id.id;\n  }\n\n  return this._tooltips[id];\n};\n\nTooltips.prototype.clearTimeout = function (tooltip) {\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  var removeTimer = tooltip.removeTimer;\n\n  if (removeTimer) {\n    clearTimeout(removeTimer);\n    tooltip.removeTimer = null;\n  }\n};\n\nTooltips.prototype.setTimeout = function (tooltip) {\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  this.clearTimeout(tooltip);\n  var self = this;\n  tooltip.removeTimer = setTimeout(function () {\n    self.remove(tooltip);\n  }, tooltip.timeout);\n};\n/**\n * Remove an tooltip with the given id\n *\n * @param {String} id\n */\n\n\nTooltips.prototype.remove = function (id) {\n  var tooltip = this.get(id);\n\n  if (tooltip) {\n    domRemove(tooltip.html);\n    domRemove(tooltip.htmlContainer);\n    delete tooltip.htmlContainer;\n    delete this._tooltips[tooltip.id];\n  }\n};\n\nTooltips.prototype.show = function () {\n  setVisible(this._tooltipRoot);\n};\n\nTooltips.prototype.hide = function () {\n  setVisible(this._tooltipRoot, false);\n};\n\nTooltips.prototype._updateRoot = function (viewbox) {\n  var a = viewbox.scale || 1;\n  var d = viewbox.scale || 1;\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + -1 * viewbox.x * a + ',' + -1 * viewbox.y * d + ')';\n  this._tooltipRoot.style.transform = matrix;\n  this._tooltipRoot.style['-ms-transform'] = matrix;\n};\n\nTooltips.prototype._addTooltip = function (tooltip) {\n  var id = tooltip.id,\n      html = tooltip.html,\n      htmlContainer,\n      tooltipRoot = this._tooltipRoot; // unwrap jquery (for those who need it)\n\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  } // create proper html elements from\n  // tooltip HTML strings\n\n\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  htmlContainer = domify('<div data-tooltip-id=\"' + id + '\" class=\"' + tooltipClass + '\" style=\"position: absolute\">');\n  htmlContainer.appendChild(html);\n\n  if (tooltip.type) {\n    domClasses(htmlContainer).add('djs-tooltip-' + tooltip.type);\n  }\n\n  if (tooltip.className) {\n    domClasses(htmlContainer).add(tooltip.className);\n  }\n\n  tooltip.htmlContainer = htmlContainer;\n  tooltipRoot.appendChild(htmlContainer);\n  this._tooltips[id] = tooltip;\n\n  this._updateTooltip(tooltip);\n};\n\nTooltips.prototype._updateTooltip = function (tooltip) {\n  var position = tooltip.position,\n      htmlContainer = tooltip.htmlContainer; // update overlay html based on tooltip x, y\n\n  setPosition(htmlContainer, position.x, position.y);\n};\n\nTooltips.prototype._updateTooltipVisibilty = function (viewbox) {\n  forEach(this._tooltips, function (tooltip) {\n    var show = tooltip.show,\n        htmlContainer = tooltip.htmlContainer,\n        visible = true;\n\n    if (show) {\n      if (show.minZoom > viewbox.scale || show.maxZoom < viewbox.scale) {\n        visible = false;\n      }\n\n      setVisible(htmlContainer, visible);\n    }\n  });\n};\n\nTooltips.prototype._init = function () {\n  var self = this; // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n\n    self._updateTooltipVisibilty(viewbox);\n\n    self.show();\n  }\n\n  this._eventBus.on('canvas.viewbox.changing', function (event) {\n    self.hide();\n  });\n\n  this._eventBus.on('canvas.viewbox.changed', function (event) {\n    updateViewbox(event.viewbox);\n  });\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/tooltips/Tooltips.js"],"names":["isString","assign","forEach","domify","attr","domAttr","classes","domClasses","remove","domRemove","delegate","domDelegate","Ids","ids","createRoot","parentNode","root","insertBefore","firstChild","setPosition","el","x","y","style","left","top","setVisible","visible","display","tooltipClass","tooltipSelector","Tooltips","eventBus","canvas","_eventBus","_canvas","_ids","_tooltipDefaults","show","minZoom","maxZoom","_tooltips","_tooltipRoot","getContainer","self","bind","event","stopPropagation","trigger","_init","$inject","prototype","add","tooltip","position","Error","html","id","next","_addTooltip","timeout","setTimeout","action","node","delegateTarget","target","get","clearTimeout","removeTimer","htmlContainer","hide","_updateRoot","viewbox","a","scale","d","matrix","transform","tooltipRoot","constructor","jquery","appendChild","type","className","_updateTooltip","_updateTooltipVisibilty","updateViewbox","on"],"mappings":"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","sourcesContent":["import {\n  isString,\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  domify,\n  attr as domAttr,\n  classes as domClasses,\n  remove as domRemove,\n  delegate as domDelegate\n} from 'min-dom';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique tooltip ids\nvar ids = new Ids('tt');\n\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-tooltip-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\n\nvar tooltipClass = 'djs-tooltip',\n    tooltipSelector = '.' + tooltipClass;\n\n/**\n * A service that allows users to render tool tips on the diagram.\n *\n * The tooltip service will take care of updating the tooltip positioning\n * during navigation + zooming.\n *\n * @example\n *\n * ```javascript\n *\n * // add a pink badge on the top left of the shape\n * tooltips.add({\n *   position: {\n *     x: 50,\n *     y: 100\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or with optional life span\n * tooltips.add({\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>',\n *   ttl: 2000\n * });\n *\n * // remove a tool tip\n * var id = tooltips.add(...);\n * tooltips.remove(id);\n * ```\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function Tooltips(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._ids = ids;\n\n  this._tooltipDefaults = {\n    show: {\n      minZoom: 0.7,\n      maxZoom: 5.0\n    }\n  };\n\n  /**\n   * Mapping tooltipId -> tooltip\n   */\n  this._tooltips = {};\n\n  // root html element for all tooltips\n  this._tooltipRoot = createRoot(canvas.getContainer());\n\n\n  var self = this;\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseover', function(event) {\n    self.trigger('mouseover', event);\n  });\n\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseout', function(event) {\n    self.trigger('mouseout', event);\n  });\n\n  this._init();\n}\n\n\nTooltips.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Adds a HTML tooltip to the diagram\n *\n * @param {Object}               tooltip   the tooltip configuration\n *\n * @param {String|DOMElement}    tooltip.html                 html element to use as an tooltip\n * @param {Object}               [tooltip.show]               show configuration\n * @param {Number}               [tooltip.show.minZoom]       minimal zoom level to show the tooltip\n * @param {Number}               [tooltip.show.maxZoom]       maximum zoom level to show the tooltip\n * @param {Object}               tooltip.position             where to attach the tooltip\n * @param {Number}               [tooltip.position.left]      relative to element bbox left attachment\n * @param {Number}               [tooltip.position.top]       relative to element bbox top attachment\n * @param {Number}               [tooltip.position.bottom]    relative to element bbox bottom attachment\n * @param {Number}               [tooltip.position.right]     relative to element bbox right attachment\n * @param {Number}               [tooltip.timeout=-1]\n *\n * @return {String}              id that may be used to reference the tooltip for update or removal\n */\nTooltips.prototype.add = function(tooltip) {\n\n  if (!tooltip.position) {\n    throw new Error('must specifiy tooltip position');\n  }\n\n  if (!tooltip.html) {\n    throw new Error('must specifiy tooltip html');\n  }\n\n  var id = this._ids.next();\n\n  tooltip = assign({}, this._tooltipDefaults, tooltip, {\n    id: id\n  });\n\n  this._addTooltip(tooltip);\n\n  if (tooltip.timeout) {\n    this.setTimeout(tooltip);\n  }\n\n  return id;\n};\n\nTooltips.prototype.trigger = function(action, event) {\n\n  var node = event.delegateTarget || event.target;\n\n  var tooltip = this.get(domAttr(node, 'data-tooltip-id'));\n\n  if (!tooltip) {\n    return;\n  }\n\n  if (action === 'mouseover' && tooltip.timeout) {\n    this.clearTimeout(tooltip);\n  }\n\n  if (action === 'mouseout' && tooltip.timeout) {\n    // cut timeout after mouse out\n    tooltip.timeout = 1000;\n\n    this.setTimeout(tooltip);\n  }\n};\n\n/**\n * Get a tooltip with the given id\n *\n * @param {String} id\n */\nTooltips.prototype.get = function(id) {\n\n  if (typeof id !== 'string') {\n    id = id.id;\n  }\n\n  return this._tooltips[id];\n};\n\nTooltips.prototype.clearTimeout = function(tooltip) {\n\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  var removeTimer = tooltip.removeTimer;\n\n  if (removeTimer) {\n    clearTimeout(removeTimer);\n    tooltip.removeTimer = null;\n  }\n};\n\nTooltips.prototype.setTimeout = function(tooltip) {\n\n  tooltip = this.get(tooltip);\n\n  if (!tooltip) {\n    return;\n  }\n\n  this.clearTimeout(tooltip);\n\n  var self = this;\n\n  tooltip.removeTimer = setTimeout(function() {\n    self.remove(tooltip);\n  }, tooltip.timeout);\n};\n\n/**\n * Remove an tooltip with the given id\n *\n * @param {String} id\n */\nTooltips.prototype.remove = function(id) {\n\n  var tooltip = this.get(id);\n\n  if (tooltip) {\n    domRemove(tooltip.html);\n    domRemove(tooltip.htmlContainer);\n\n    delete tooltip.htmlContainer;\n\n    delete this._tooltips[tooltip.id];\n  }\n};\n\n\nTooltips.prototype.show = function() {\n  setVisible(this._tooltipRoot);\n};\n\n\nTooltips.prototype.hide = function() {\n  setVisible(this._tooltipRoot, false);\n};\n\n\nTooltips.prototype._updateRoot = function(viewbox) {\n  var a = viewbox.scale || 1;\n  var d = viewbox.scale || 1;\n\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\n\n  this._tooltipRoot.style.transform = matrix;\n  this._tooltipRoot.style['-ms-transform'] = matrix;\n};\n\n\nTooltips.prototype._addTooltip = function(tooltip) {\n\n  var id = tooltip.id,\n      html = tooltip.html,\n      htmlContainer,\n      tooltipRoot = this._tooltipRoot;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // tooltip HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  htmlContainer = domify('<div data-tooltip-id=\"' + id + '\" class=\"' + tooltipClass + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (tooltip.type) {\n    domClasses(htmlContainer).add('djs-tooltip-' + tooltip.type);\n  }\n\n  if (tooltip.className) {\n    domClasses(htmlContainer).add(tooltip.className);\n  }\n\n  tooltip.htmlContainer = htmlContainer;\n\n  tooltipRoot.appendChild(htmlContainer);\n\n  this._tooltips[id] = tooltip;\n\n  this._updateTooltip(tooltip);\n};\n\n\nTooltips.prototype._updateTooltip = function(tooltip) {\n\n  var position = tooltip.position,\n      htmlContainer = tooltip.htmlContainer;\n\n  // update overlay html based on tooltip x, y\n\n  setPosition(htmlContainer, position.x, position.y);\n};\n\n\nTooltips.prototype._updateTooltipVisibilty = function(viewbox) {\n\n  forEach(this._tooltips, function(tooltip) {\n    var show = tooltip.show,\n        htmlContainer = tooltip.htmlContainer,\n        visible = true;\n\n    if (show) {\n      if (show.minZoom > viewbox.scale ||\n          show.maxZoom < viewbox.scale) {\n        visible = false;\n      }\n\n      setVisible(htmlContainer, visible);\n    }\n  });\n};\n\nTooltips.prototype._init = function() {\n\n  var self = this;\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateTooltipVisibilty(viewbox);\n\n    self.show();\n  }\n\n  this._eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  this._eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}