{"ast":null,"code":"/**\n * BPMN 2.0 specific key bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nexport default function BpmnKeyBindings(keyboard, editorActions) {\n  keyboard.addListener(function (key, modifiers) {\n    // ctrl + a -> select all elements\n    if (key === 65 && keyboard.isCmd(modifiers)) {\n      editorActions.trigger('selectElements');\n      return true;\n    } // ctrl + f -> search labels\n\n\n    if (key === 70 && keyboard.isCmd(modifiers)) {\n      editorActions.trigger('find');\n      return true;\n    }\n\n    if (keyboard.hasModifier(modifiers)) {\n      return;\n    } // s -> activate space tool\n\n\n    if (key === 83) {\n      editorActions.trigger('spaceTool');\n      return true;\n    } // l -> activate lasso tool\n\n\n    if (key === 76) {\n      editorActions.trigger('lassoTool');\n      return true;\n    } // h -> activate hand tool\n\n\n    if (key === 72) {\n      editorActions.trigger('handTool');\n      return true;\n    } // c -> activate global connect tool\n\n\n    if (key === 67) {\n      editorActions.trigger('globalConnectTool');\n      return true;\n    } // e -> activate direct editing\n\n\n    if (key === 69) {\n      editorActions.trigger('directEditing');\n      return true;\n    }\n  });\n}\nBpmnKeyBindings.$inject = ['keyboard', 'editorActions'];","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/keyboard/BpmnKeyBindings.js"],"names":["BpmnKeyBindings","keyboard","editorActions","addListener","key","modifiers","isCmd","trigger","hasModifier","$inject"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,aAAnC,EAAkD;AAE/DD,EAAAA,QAAQ,CAACE,WAAT,CAAqB,UAASC,GAAT,EAAcC,SAAd,EAAyB;AAE5C;AACA,QAAID,GAAG,KAAK,EAAR,IAAcH,QAAQ,CAACK,KAAT,CAAeD,SAAf,CAAlB,EAA6C;AAC3CH,MAAAA,aAAa,CAACK,OAAd,CAAsB,gBAAtB;AAEA,aAAO,IAAP;AACD,KAP2C,CAS5C;;;AACA,QAAIH,GAAG,KAAK,EAAR,IAAcH,QAAQ,CAACK,KAAT,CAAeD,SAAf,CAAlB,EAA6C;AAC3CH,MAAAA,aAAa,CAACK,OAAd,CAAsB,MAAtB;AAEA,aAAO,IAAP;AACD;;AAED,QAAIN,QAAQ,CAACO,WAAT,CAAqBH,SAArB,CAAJ,EAAqC;AACnC;AACD,KAlB2C,CAoB5C;;;AACA,QAAID,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,aAAa,CAACK,OAAd,CAAsB,WAAtB;AAEA,aAAO,IAAP;AACD,KAzB2C,CA2B5C;;;AACA,QAAIH,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,aAAa,CAACK,OAAd,CAAsB,WAAtB;AAEA,aAAO,IAAP;AACD,KAhC2C,CAkC5C;;;AACA,QAAIH,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,aAAa,CAACK,OAAd,CAAsB,UAAtB;AAEA,aAAO,IAAP;AACD,KAvC2C,CAyC5C;;;AACA,QAAIH,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,aAAa,CAACK,OAAd,CAAsB,mBAAtB;AAEA,aAAO,IAAP;AACD,KA9C2C,CAgD5C;;;AACA,QAAIH,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,aAAa,CAACK,OAAd,CAAsB,eAAtB;AAEA,aAAO,IAAP;AACD;AACF,GAtDD;AAuDD;AAEDP,eAAe,CAACS,OAAhB,GAA0B,CACxB,UADwB,EAExB,eAFwB,CAA1B","sourcesContent":["/**\n * BPMN 2.0 specific key bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nexport default function BpmnKeyBindings(keyboard, editorActions) {\n\n  keyboard.addListener(function(key, modifiers) {\n\n    // ctrl + a -> select all elements\n    if (key === 65 && keyboard.isCmd(modifiers)) {\n      editorActions.trigger('selectElements');\n\n      return true;\n    }\n\n    // ctrl + f -> search labels\n    if (key === 70 && keyboard.isCmd(modifiers)) {\n      editorActions.trigger('find');\n\n      return true;\n    }\n\n    if (keyboard.hasModifier(modifiers)) {\n      return;\n    }\n\n    // s -> activate space tool\n    if (key === 83) {\n      editorActions.trigger('spaceTool');\n\n      return true;\n    }\n\n    // l -> activate lasso tool\n    if (key === 76) {\n      editorActions.trigger('lassoTool');\n\n      return true;\n    }\n\n    // h -> activate hand tool\n    if (key === 72) {\n      editorActions.trigger('handTool');\n\n      return true;\n    }\n\n    // c -> activate global connect tool\n    if (key === 67) {\n      editorActions.trigger('globalConnectTool');\n\n      return true;\n    }\n\n    // e -> activate direct editing\n    if (key === 69) {\n      editorActions.trigger('directEditing');\n\n      return true;\n    }\n  });\n}\n\nBpmnKeyBindings.$inject = [\n  'keyboard',\n  'editorActions'\n];"]},"metadata":{},"sourceType":"module"}