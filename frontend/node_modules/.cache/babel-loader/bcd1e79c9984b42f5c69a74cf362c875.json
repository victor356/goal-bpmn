{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getBusinessObject = options.getBusinessObject;\n  var historyTimeToLiveEntry = entryFactory.textField({\n    id: 'historyTimeToLive',\n    label: translate('History Time To Live'),\n    modelProperty: 'historyTimeToLive',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      var historyTimeToLive = bo.get('camunda:historyTimeToLive');\n      return {\n        historyTimeToLive: historyTimeToLive ? historyTimeToLive : ''\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:historyTimeToLive': values.historyTimeToLive || undefined\n      });\n    }\n  });\n  return [historyTimeToLiveEntry];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/HistoryTimeToLive.js"],"names":["entryFactory","require","cmdHelper","module","exports","element","bpmnFactory","options","translate","getBusinessObject","historyTimeToLiveEntry","textField","id","label","modelProperty","get","node","bo","historyTimeToLive","set","values","updateBusinessObject","undefined"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kCAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,8BAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,SAAxC,EAAmD;AAElE,MAAIC,iBAAiB,GAAGF,OAAO,CAACE,iBAAhC;AAEA,MAAIC,sBAAsB,GAAGV,YAAY,CAACW,SAAb,CAAuB;AAClDC,IAAAA,EAAE,EAAE,mBAD8C;AAElDC,IAAAA,KAAK,EAAEL,SAAS,CAAC,sBAAD,CAFkC;AAGlDM,IAAAA,aAAa,EAAE,mBAHmC;AAKlDC,IAAAA,GAAG,EAAE,UAASV,OAAT,EAAkBW,IAAlB,EAAwB;AAC3B,UAAIC,EAAE,GAAGR,iBAAiB,CAACJ,OAAD,CAA1B;AACA,UAAIa,iBAAiB,GAAGD,EAAE,CAACF,GAAH,CAAO,2BAAP,CAAxB;AAEA,aAAO;AACLG,QAAAA,iBAAiB,EAAEA,iBAAiB,GAAGA,iBAAH,GAAuB;AADtD,OAAP;AAGD,KAZiD;AAclDC,IAAAA,GAAG,EAAE,UAASd,OAAT,EAAkBe,MAAlB,EAA0B;AAC7B,UAAIH,EAAE,GAAGR,iBAAiB,CAACJ,OAAD,CAA1B;AACA,aAAOH,SAAS,CAACmB,oBAAV,CAA+BhB,OAA/B,EAAwCY,EAAxC,EAA4C;AACjD,qCAA6BG,MAAM,CAACF,iBAAP,IAA4BI;AADR,OAA5C,CAAP;AAGD;AAnBiD,GAAvB,CAA7B;AAuBA,SAAO,CAAEZ,sBAAF,CAAP;AACD,CA5BD","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getBusinessObject = options.getBusinessObject;\n\n  var historyTimeToLiveEntry = entryFactory.textField({\n    id: 'historyTimeToLive',\n    label: translate('History Time To Live'),\n    modelProperty: 'historyTimeToLive',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      var historyTimeToLive = bo.get('camunda:historyTimeToLive');\n\n      return {\n        historyTimeToLive: historyTimeToLive ? historyTimeToLive : ''\n      };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:historyTimeToLive': values.historyTimeToLive || undefined\n      });\n    }\n\n  });\n\n  return [ historyTimeToLiveEntry ];\n};\n"]},"metadata":{},"sourceType":"script"}