{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar multiInstanceLoopCharacteristics = require('./implementation/MultiInstanceLoopCharacteristics');\n\nvar jobRetryTimeCycle = require('./implementation/JobRetryTimeCycle'),\n    asyncContinuation = require('./implementation/AsyncContinuation');\n\nfunction getLoopCharacteristics(element) {\n  var bo = getBusinessObject(element);\n  return bo.loopCharacteristics;\n}\n\nfunction ensureMultiInstanceSupported(element) {\n  var loopCharacteristics = getLoopCharacteristics(element);\n  return !!loopCharacteristics && is(loopCharacteristics, 'camunda:Collectable');\n}\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  if (!ensureMultiInstanceSupported(element)) {\n    return;\n  } // multi instance properties\n\n\n  group.entries = group.entries.concat(multiInstanceLoopCharacteristics(element, bpmnFactory, translate)); // async continuation ///////////////////////////////////////////////////////\n\n  group.entries = group.entries.concat(asyncContinuation(element, bpmnFactory, {\n    getBusinessObject: getLoopCharacteristics,\n    idPrefix: 'multiInstance-',\n    labelPrefix: translate('Multi Instance ')\n  }, translate)); // retry time cycle //////////////////////////////////////////////////////////\n\n  group.entries = group.entries.concat(jobRetryTimeCycle(element, bpmnFactory, {\n    getBusinessObject: getLoopCharacteristics,\n    idPrefix: 'multiInstance-',\n    labelPrefix: translate('Multi Instance ')\n  }, translate));\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/MultiInstanceLoopProps.js"],"names":["getBusinessObject","require","is","multiInstanceLoopCharacteristics","jobRetryTimeCycle","asyncContinuation","getLoopCharacteristics","element","bo","loopCharacteristics","ensureMultiInstanceSupported","module","exports","group","bpmnFactory","translate","entries","concat","idPrefix","labelPrefix"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCD,iBAA9D;AAAA,IACIE,EAAE,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCC,EAD/C;;AAGA,IAAIC,gCAAgC,GAAGF,OAAO,CAAC,mDAAD,CAA9C;;AAEA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,oCAAD,CAA/B;AAAA,IACII,iBAAiB,GAAGJ,OAAO,CAAC,oCAAD,CAD/B;;AAIA,SAASK,sBAAT,CAAgCC,OAAhC,EAAyC;AACvC,MAAIC,EAAE,GAAGR,iBAAiB,CAACO,OAAD,CAA1B;AACA,SAAOC,EAAE,CAACC,mBAAV;AACD;;AAGD,SAASC,4BAAT,CAAsCH,OAAtC,EAA+C;AAC7C,MAAIE,mBAAmB,GAAGH,sBAAsB,CAACC,OAAD,CAAhD;AACA,SAAO,CAAC,CAACE,mBAAF,IAAyBP,EAAE,CAACO,mBAAD,EAAsB,qBAAtB,CAAlC;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBN,OAAhB,EAAyBO,WAAzB,EAAsCC,SAAtC,EAAiD;AAEhE,MAAI,CAACL,4BAA4B,CAACH,OAAD,CAAjC,EAA4C;AAC1C;AACD,GAJ+D,CAMhE;;;AACAM,EAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBd,gCAAgC,CAACI,OAAD,EAAUO,WAAV,EAAuBC,SAAvB,CAArD,CAAhB,CAPgE,CAShE;;AACAF,EAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBZ,iBAAiB,CAACE,OAAD,EAAUO,WAAV,EAAuB;AAC3Ed,IAAAA,iBAAiB,EAAEM,sBADwD;AAE3EY,IAAAA,QAAQ,EAAE,gBAFiE;AAG3EC,IAAAA,WAAW,EAAEJ,SAAS,CAAC,iBAAD;AAHqD,GAAvB,EAInDA,SAJmD,CAAtC,CAAhB,CAVgE,CAiBhE;;AACAF,EAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBb,iBAAiB,CAACG,OAAD,EAAUO,WAAV,EAAuB;AAC3Ed,IAAAA,iBAAiB,EAAEM,sBADwD;AAE3EY,IAAAA,QAAQ,EAAE,gBAFiE;AAG3EC,IAAAA,WAAW,EAAEJ,SAAS,CAAC,iBAAD;AAHqD,GAAvB,EAInDA,SAJmD,CAAtC,CAAhB;AAKD,CAvBD","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar multiInstanceLoopCharacteristics = require('./implementation/MultiInstanceLoopCharacteristics');\n\nvar jobRetryTimeCycle = require('./implementation/JobRetryTimeCycle'),\n    asyncContinuation = require('./implementation/AsyncContinuation');\n\n\nfunction getLoopCharacteristics(element) {\n  var bo = getBusinessObject(element);\n  return bo.loopCharacteristics;\n}\n\n\nfunction ensureMultiInstanceSupported(element) {\n  var loopCharacteristics = getLoopCharacteristics(element);\n  return !!loopCharacteristics && is(loopCharacteristics, 'camunda:Collectable');\n}\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n\n  if (!ensureMultiInstanceSupported(element)) {\n    return;\n  }\n\n  // multi instance properties\n  group.entries = group.entries.concat(multiInstanceLoopCharacteristics(element, bpmnFactory, translate));\n\n  // async continuation ///////////////////////////////////////////////////////\n  group.entries = group.entries.concat(asyncContinuation(element, bpmnFactory, {\n    getBusinessObject: getLoopCharacteristics,\n    idPrefix: 'multiInstance-',\n    labelPrefix: translate('Multi Instance ')\n  }, translate));\n\n\n  // retry time cycle //////////////////////////////////////////////////////////\n  group.entries = group.entries.concat(jobRetryTimeCycle(element, bpmnFactory, {\n    getBusinessObject: getLoopCharacteristics,\n    idPrefix: 'multiInstance-',\n    labelPrefix: translate('Multi Instance ')\n  }, translate));\n};\n"]},"metadata":{},"sourceType":"script"}