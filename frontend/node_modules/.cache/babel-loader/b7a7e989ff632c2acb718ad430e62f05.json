{"ast":null,"code":"import { filter, isNumber } from 'min-dash';\nvar max = Math.max,\n    min = Math.min;\nvar DEFAULT_CHILD_BOX_PADDING = 20;\nimport { getBBox } from '../../util/Elements';\nimport { asTRBL, asBounds } from '../../layout/LayoutUtil';\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\n\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {String} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\n\nexport function resizeBounds(bounds, direction, delta) {\n  var dx = delta.x,\n      dy = delta.y;\n\n  switch (direction) {\n    case 'nw':\n      return {\n        x: bounds.x + dx,\n        y: bounds.y + dy,\n        width: bounds.width - dx,\n        height: bounds.height - dy\n      };\n\n    case 'sw':\n      return {\n        x: bounds.x + dx,\n        y: bounds.y,\n        width: bounds.width - dx,\n        height: bounds.height + dy\n      };\n\n    case 'ne':\n      return {\n        x: bounds.x,\n        y: bounds.y + dy,\n        width: bounds.width + dx,\n        height: bounds.height - dy\n      };\n\n    case 'se':\n      return {\n        x: bounds.x,\n        y: bounds.y,\n        width: bounds.width + dx,\n        height: bounds.height + dy\n      };\n\n    default:\n      throw new Error('unrecognized direction: ' + direction);\n  }\n}\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\n\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\nexport function reattachPoint(bounds, newBounds, point) {\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n  return {\n    x: Math.round(newBounds.x + newBounds.width / 2) - Math.floor((bounds.x + bounds.width / 2 - point.x) / sx),\n    y: Math.round(newBounds.y + newBounds.height / 2) - Math.floor((bounds.y + bounds.height / 2 - point.y) / sy)\n  };\n}\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n  var currentBox = asTRBL(currentBounds);\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\n\nfunction isBBoxChild(element) {\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  } // exclude labels\n\n\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {Number|Object} padding\n *\n * @return {Bounds}\n */\n\n\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n  var elements; // compute based on shape\n\n  if (shapeOrChildren.length === undefined) {\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/resize/ResizeUtil.js"],"names":["filter","isNumber","max","Math","min","DEFAULT_CHILD_BOX_PADDING","getBBox","asTRBL","asBounds","substractTRBL","trblA","trblB","top","right","bottom","left","resizeBounds","bounds","direction","delta","dx","x","dy","y","width","height","Error","resizeTRBL","resize","reattachPoint","newBounds","point","sx","sy","round","floor","applyConstraints","attr","trbl","resizeConstraints","value","minValue","maxValue","test","ensureConstraints","currentBounds","currentTrbl","getMinResizeBounds","minDimensions","childrenBounds","currentBox","minBox","childrenBox","combinedBox","asPadding","mayBePadding","defaultValue","addPadding","bbox","padding","isBBoxChild","element","waypoints","type","computeChildrenBBox","shapeOrChildren","elements","length","undefined","children"],"mappings":"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","sourcesContent":["import {\n  filter,\n  isNumber\n} from 'min-dash';\n\nvar max = Math.max,\n    min = Math.min;\n\nvar DEFAULT_CHILD_BOX_PADDING = 20;\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport {\n  asTRBL,\n  asBounds\n} from '../../layout/LayoutUtil';\n\n\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {String} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\nexport function resizeBounds(bounds, direction, delta) {\n\n  var dx = delta.x,\n      dy = delta.y;\n\n  switch (direction) {\n\n  case 'nw':\n    return {\n      x: bounds.x + dx,\n      y: bounds.y + dy,\n      width: bounds.width - dx,\n      height: bounds.height - dy\n    };\n\n  case 'sw':\n    return {\n      x: bounds.x + dx,\n      y: bounds.y,\n      width: bounds.width - dx,\n      height: bounds.height + dy\n    };\n\n  case 'ne':\n    return {\n      x: bounds.x,\n      y: bounds.y + dy,\n      width: bounds.width + dx,\n      height: bounds.height - dy\n    };\n\n  case 'se':\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width + dx,\n      height: bounds.height + dy\n    };\n\n  default:\n    throw new Error('unrecognized direction: ' + direction);\n  }\n}\n\n\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\n\n\nexport function reattachPoint(bounds, newBounds, point) {\n\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n\n  return {\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\n  };\n}\n\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\n\n\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n\n  var currentBox = asTRBL(currentBounds);\n\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n\n\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\nfunction isBBoxChild(element) {\n\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  }\n\n  // exclude labels\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {Number|Object} padding\n *\n * @return {Bounds}\n */\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n\n  var elements;\n\n  // compute based on shape\n  if (shapeOrChildren.length === undefined) {\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}