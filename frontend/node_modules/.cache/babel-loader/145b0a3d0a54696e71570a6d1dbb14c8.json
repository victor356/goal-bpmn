{"ast":null,"code":"import { assign } from 'min-dash';\n/**\n * A palette provider for BPMN 2.0 elements.\n */\n\nexport default function PaletteProvider(palette, create, elementFactory, spaceTool, lassoTool, handTool, globalConnect, translate) {\n  this._palette = palette;\n  this._create = create;\n  this._elementFactory = elementFactory;\n  this._spaceTool = spaceTool;\n  this._lassoTool = lassoTool;\n  this._handTool = handTool;\n  this._globalConnect = globalConnect;\n  this._translate = translate;\n  palette.registerProvider(this);\n}\nPaletteProvider.$inject = ['palette', 'create', 'elementFactory', 'spaceTool', 'lassoTool', 'handTool', 'globalConnect', 'translate'];\n\nPaletteProvider.prototype.getPaletteEntries = function (element) {\n  var actions = {},\n      create = this._create,\n      elementFactory = this._elementFactory,\n      spaceTool = this._spaceTool,\n      lassoTool = this._lassoTool,\n      handTool = this._handTool,\n      globalConnect = this._globalConnect,\n      translate = this._translate;\n\n  function createAction(type, group, className, title, options) {\n    function createListener(event) {\n      var shape = elementFactory.createShape(assign({\n        type: type\n      }, options));\n\n      if (options) {\n        shape.businessObject.di.isExpanded = options.isExpanded;\n      }\n\n      create.start(event, shape);\n    }\n\n    var shortType = type.replace(/^bpmn:/, '');\n    return {\n      group: group,\n      className: className,\n      title: title || translate('Create {type}', {\n        type: shortType\n      }),\n      action: {\n        dragstart: createListener,\n        click: createListener\n      }\n    };\n  }\n\n  function createParticipant(event, collapsed) {\n    create.start(event, elementFactory.createParticipantShape(collapsed));\n  }\n\n  assign(actions, {\n    'hand-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-hand-tool',\n      title: translate('Activate the hand tool'),\n      action: {\n        click: function (event) {\n          handTool.activateHand(event);\n        }\n      }\n    },\n    'lasso-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-lasso-tool',\n      title: translate('Activate the lasso tool'),\n      action: {\n        click: function (event) {\n          lassoTool.activateSelection(event);\n        }\n      }\n    },\n    'space-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-space-tool',\n      title: translate('Activate the create/remove space tool'),\n      action: {\n        click: function (event) {\n          spaceTool.activateSelection(event);\n        }\n      }\n    },\n    'global-connect-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-connection-multi',\n      title: translate('Activate the global connect tool'),\n      action: {\n        click: function (event) {\n          globalConnect.toggle(event);\n        }\n      }\n    },\n    'tool-separator': {\n      group: 'tools',\n      separator: true\n    },\n    'create.start-event': createAction('bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none'),\n    'create.intermediate-event': createAction('bpmn:IntermediateThrowEvent', 'event', 'bpmn-icon-intermediate-event-none', translate('Create Intermediate/Boundary Event')),\n    'create.end-event': createAction('bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none'),\n    'create.exclusive-gateway': createAction('bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-none', translate('Create Gateway')),\n    'create.task': createAction('bpmn:Task', 'activity', 'bpmn-icon-task'),\n    'create.data-object': createAction('bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object'),\n    'create.data-store': createAction('bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store'),\n    'create.subprocess-expanded': createAction('bpmn:SubProcess', 'activity', 'bpmn-icon-subprocess-expanded', translate('Create expanded SubProcess'), {\n      isExpanded: true\n    }),\n    'create.participant-expanded': {\n      group: 'collaboration',\n      className: 'bpmn-icon-participant',\n      title: translate('Create Pool/Participant'),\n      action: {\n        dragstart: createParticipant,\n        click: createParticipant\n      }\n    }\n  });\n  return actions;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/palette/PaletteProvider.js"],"names":["assign","PaletteProvider","palette","create","elementFactory","spaceTool","lassoTool","handTool","globalConnect","translate","_palette","_create","_elementFactory","_spaceTool","_lassoTool","_handTool","_globalConnect","_translate","registerProvider","$inject","prototype","getPaletteEntries","element","actions","createAction","type","group","className","title","options","createListener","event","shape","createShape","businessObject","di","isExpanded","start","shortType","replace","action","dragstart","click","createParticipant","collapsed","createParticipantShape","activateHand","activateSelection","toggle","separator"],"mappings":"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","sourcesContent":["import {\n  assign\n} from 'min-dash';\n\n\n/**\n * A palette provider for BPMN 2.0 elements.\n */\nexport default function PaletteProvider(\n    palette, create, elementFactory,\n    spaceTool, lassoTool, handTool,\n    globalConnect, translate) {\n\n  this._palette = palette;\n  this._create = create;\n  this._elementFactory = elementFactory;\n  this._spaceTool = spaceTool;\n  this._lassoTool = lassoTool;\n  this._handTool = handTool;\n  this._globalConnect = globalConnect;\n  this._translate = translate;\n\n  palette.registerProvider(this);\n}\n\nPaletteProvider.$inject = [\n  'palette',\n  'create',\n  'elementFactory',\n  'spaceTool',\n  'lassoTool',\n  'handTool',\n  'globalConnect',\n  'translate'\n];\n\n\nPaletteProvider.prototype.getPaletteEntries = function(element) {\n\n  var actions = {},\n      create = this._create,\n      elementFactory = this._elementFactory,\n      spaceTool = this._spaceTool,\n      lassoTool = this._lassoTool,\n      handTool = this._handTool,\n      globalConnect = this._globalConnect,\n      translate = this._translate;\n\n  function createAction(type, group, className, title, options) {\n\n    function createListener(event) {\n      var shape = elementFactory.createShape(assign({ type: type }, options));\n\n      if (options) {\n        shape.businessObject.di.isExpanded = options.isExpanded;\n      }\n\n      create.start(event, shape);\n    }\n\n    var shortType = type.replace(/^bpmn:/, '');\n\n    return {\n      group: group,\n      className: className,\n      title: title || translate('Create {type}', { type: shortType }),\n      action: {\n        dragstart: createListener,\n        click: createListener\n      }\n    };\n  }\n\n  function createParticipant(event, collapsed) {\n    create.start(event, elementFactory.createParticipantShape(collapsed));\n  }\n\n  assign(actions, {\n    'hand-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-hand-tool',\n      title: translate('Activate the hand tool'),\n      action: {\n        click: function(event) {\n          handTool.activateHand(event);\n        }\n      }\n    },\n    'lasso-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-lasso-tool',\n      title: translate('Activate the lasso tool'),\n      action: {\n        click: function(event) {\n          lassoTool.activateSelection(event);\n        }\n      }\n    },\n    'space-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-space-tool',\n      title: translate('Activate the create/remove space tool'),\n      action: {\n        click: function(event) {\n          spaceTool.activateSelection(event);\n        }\n      }\n    },\n    'global-connect-tool': {\n      group: 'tools',\n      className: 'bpmn-icon-connection-multi',\n      title: translate('Activate the global connect tool'),\n      action: {\n        click: function(event) {\n          globalConnect.toggle(event);\n        }\n      }\n    },\n    'tool-separator': {\n      group: 'tools',\n      separator: true\n    },\n    'create.start-event': createAction(\n      'bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none'\n    ),\n    'create.intermediate-event': createAction(\n      'bpmn:IntermediateThrowEvent', 'event', 'bpmn-icon-intermediate-event-none',\n      translate('Create Intermediate/Boundary Event')\n    ),\n    'create.end-event': createAction(\n      'bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none'\n    ),\n    'create.exclusive-gateway': createAction(\n      'bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-none',\n      translate('Create Gateway')\n    ),\n    'create.task': createAction(\n      'bpmn:Task', 'activity', 'bpmn-icon-task'\n    ),\n    'create.data-object': createAction(\n      'bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object'\n    ),\n    'create.data-store': createAction(\n      'bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store'\n    ),\n    'create.subprocess-expanded': createAction(\n      'bpmn:SubProcess', 'activity', 'bpmn-icon-subprocess-expanded',\n      translate('Create expanded SubProcess'),\n      { isExpanded: true }\n    ),\n    'create.participant-expanded': {\n      group: 'collaboration',\n      className: 'bpmn-icon-participant',\n      title: translate('Create Pool/Participant'),\n      action: {\n        dragstart: createParticipant,\n        click: createParticipant\n      }\n    }\n  });\n\n  return actions;\n};\n"]},"metadata":{},"sourceType":"module"}