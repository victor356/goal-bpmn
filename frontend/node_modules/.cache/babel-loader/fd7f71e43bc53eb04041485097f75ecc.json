{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    forEach = require('lodash/forEach');\n\nvar EventDefinitionHelper = {};\nmodule.exports = EventDefinitionHelper;\n\nEventDefinitionHelper.getEventDefinition = function (element, eventType) {\n  var bo = getBusinessObject(element),\n      eventDefinition = null;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function (event) {\n      if (is(event, eventType)) {\n        eventDefinition = event;\n      }\n    });\n  }\n\n  return eventDefinition;\n};\n\nEventDefinitionHelper.getTimerEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:TimerEventDefinition');\n};\n\nEventDefinitionHelper.getMessageEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:MessageEventDefinition');\n};\n\nEventDefinitionHelper.getSignalEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:SignalEventDefinition');\n};\n\nEventDefinitionHelper.getErrorEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:ErrorEventDefinition');\n};\n\nEventDefinitionHelper.getEscalationEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:EscalationEventDefinition');\n};\n\nEventDefinitionHelper.getCompensateEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:CompensateEventDefinition');\n};\n\nEventDefinitionHelper.getLinkEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:LinkEventDefinition');\n};\n\nEventDefinitionHelper.getConditionalEventDefinition = function (element) {\n  return this.getEventDefinition(element, 'bpmn:ConditionalEventDefinition');\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/helper/EventDefinitionHelper.js"],"names":["getBusinessObject","require","is","forEach","EventDefinitionHelper","module","exports","getEventDefinition","element","eventType","bo","eventDefinition","eventDefinitions","event","getTimerEventDefinition","getMessageEventDefinition","getSignalEventDefinition","getErrorEventDefinition","getEscalationEventDefinition","getCompensateEventDefinition","getLinkEventDefinition","getConditionalEventDefinition"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCD,iBAA9D;AAAA,IACIE,EAAE,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCC,EAD/C;AAAA,IAEIC,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAFrB;;AAIA,IAAIG,qBAAqB,GAAG,EAA5B;AAEAC,MAAM,CAACC,OAAP,GAAiBF,qBAAjB;;AAEAA,qBAAqB,CAACG,kBAAtB,GAA2C,UAASC,OAAT,EAAkBC,SAAlB,EAA6B;AAEtE,MAAIC,EAAE,GAAGV,iBAAiB,CAACQ,OAAD,CAA1B;AAAA,MACIG,eAAe,GAAG,IADtB;;AAGA,MAAID,EAAE,CAACE,gBAAP,EAAyB;AACvBT,IAAAA,OAAO,CAACO,EAAE,CAACE,gBAAJ,EAAsB,UAASC,KAAT,EAAgB;AAC3C,UAAIX,EAAE,CAACW,KAAD,EAAQJ,SAAR,CAAN,EAA0B;AACxBE,QAAAA,eAAe,GAAGE,KAAlB;AACD;AACF,KAJM,CAAP;AAKD;;AAED,SAAOF,eAAP;AACD,CAdD;;AAgBAP,qBAAqB,CAACU,uBAAtB,GAAgD,UAASN,OAAT,EAAkB;AAChE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,2BAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACW,yBAAtB,GAAkD,UAASP,OAAT,EAAkB;AAClE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,6BAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACY,wBAAtB,GAAiD,UAASR,OAAT,EAAkB;AACjE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,4BAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACa,uBAAtB,GAAgD,UAAST,OAAT,EAAkB;AAChE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,2BAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACc,4BAAtB,GAAqD,UAASV,OAAT,EAAkB;AACrE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,gCAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACe,4BAAtB,GAAqD,UAASX,OAAT,EAAkB;AACrE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,gCAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACgB,sBAAtB,GAA+C,UAASZ,OAAT,EAAkB;AAC/D,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,0BAAjC,CAAP;AACD,CAFD;;AAIAJ,qBAAqB,CAACiB,6BAAtB,GAAsD,UAASb,OAAT,EAAkB;AACtE,SAAO,KAAKD,kBAAL,CAAwBC,OAAxB,EAAiC,iCAAjC,CAAP;AACD,CAFD","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    forEach = require('lodash/forEach');\n\nvar EventDefinitionHelper = {};\n\nmodule.exports = EventDefinitionHelper;\n\nEventDefinitionHelper.getEventDefinition = function(element, eventType) {\n\n  var bo = getBusinessObject(element),\n      eventDefinition = null;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function(event) {\n      if (is(event, eventType)) {\n        eventDefinition = event;\n      }\n    });\n  }\n\n  return eventDefinition;\n};\n\nEventDefinitionHelper.getTimerEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:TimerEventDefinition');\n};\n\nEventDefinitionHelper.getMessageEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:MessageEventDefinition');\n};\n\nEventDefinitionHelper.getSignalEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:SignalEventDefinition');\n};\n\nEventDefinitionHelper.getErrorEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:ErrorEventDefinition');\n};\n\nEventDefinitionHelper.getEscalationEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:EscalationEventDefinition');\n};\n\nEventDefinitionHelper.getCompensateEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:CompensateEventDefinition');\n};\n\nEventDefinitionHelper.getLinkEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:LinkEventDefinition');\n};\n\nEventDefinitionHelper.getConditionalEventDefinition = function(element) {\n  return this.getEventDefinition(element, 'bpmn:ConditionalEventDefinition');\n};\n"]},"metadata":{},"sourceType":"script"}