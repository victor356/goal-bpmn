{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar jobPriority = require('./implementation/JobPriority'),\n    jobRetryTimeCycle = require('./implementation/JobRetryTimeCycle');\n\nmodule.exports = function (group, element, bpmnFactory, translate) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'camunda:JobPriorized') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    group.entries = group.entries.concat(jobPriority(element, bpmnFactory, {\n      getBusinessObject: function (element) {\n        var bo = getBusinessObject(element);\n\n        if (!is(bo, 'bpmn:Participant')) {\n          return bo;\n        }\n\n        return bo.get('processRef');\n      }\n    }, translate));\n  }\n\n  if (is(element, 'camunda:AsyncCapable')) {\n    group.entries = group.entries.concat(jobRetryTimeCycle(element, bpmnFactory, {\n      getBusinessObject: getBusinessObject\n    }, translate));\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/JobConfigurationProps.js"],"names":["is","require","getBusinessObject","jobPriority","jobRetryTimeCycle","module","exports","group","element","bpmnFactory","translate","businessObject","get","entries","concat","bo"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,4BAAD,CAAP,CAAsCD,EAA/C;AAAA,IACIE,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCC,iBAD9D;;AAGA,IAAIC,WAAW,GAAGF,OAAO,CAAC,8BAAD,CAAzB;AAAA,IACIG,iBAAiB,GAAGH,OAAO,CAAC,oCAAD,CAD/B;;AAGAI,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiD;AAChE,MAAIC,cAAc,GAAGT,iBAAiB,CAACM,OAAD,CAAtC;;AAEA,MAAIR,EAAE,CAACQ,OAAD,EAAU,sBAAV,CAAF,IACAR,EAAE,CAACQ,OAAD,EAAU,kBAAV,CAAF,IAAmCG,cAAc,CAACC,GAAf,CAAmB,YAAnB,CADvC,EACyE;AAEvEL,IAAAA,KAAK,CAACM,OAAN,GAAgBN,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBX,WAAW,CAACK,OAAD,EAAUC,WAAV,EAAuB;AACrEP,MAAAA,iBAAiB,EAAE,UAASM,OAAT,EAAkB;AACnC,YAAIO,EAAE,GAAGb,iBAAiB,CAACM,OAAD,CAA1B;;AAEA,YAAI,CAACR,EAAE,CAACe,EAAD,EAAK,kBAAL,CAAP,EAAiC;AAC/B,iBAAOA,EAAP;AACD;;AAED,eAAOA,EAAE,CAACH,GAAH,CAAO,YAAP,CAAP;AACD;AAToE,KAAvB,EAU7CF,SAV6C,CAAhC,CAAhB;AAWD;;AAED,MAAIV,EAAE,CAACQ,OAAD,EAAU,sBAAV,CAAN,EAAyC;AACvCD,IAAAA,KAAK,CAACM,OAAN,GAAgBN,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBV,iBAAiB,CAACI,OAAD,EAAUC,WAAV,EAAuB;AAC3EP,MAAAA,iBAAiB,EAAEA;AADwD,KAAvB,EAEnDQ,SAFmD,CAAtC,CAAhB;AAGD;AAEF,CAzBD","sourcesContent":["'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar jobPriority = require('./implementation/JobPriority'),\n    jobRetryTimeCycle = require('./implementation/JobRetryTimeCycle');\n\nmodule.exports = function(group, element, bpmnFactory, translate) {\n  var businessObject = getBusinessObject(element);\n\n  if (is(element, 'camunda:JobPriorized') ||\n      is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n\n    group.entries = group.entries.concat(jobPriority(element, bpmnFactory, {\n      getBusinessObject: function(element) {\n        var bo = getBusinessObject(element);\n\n        if (!is(bo, 'bpmn:Participant')) {\n          return bo;\n        }\n\n        return bo.get('processRef');\n      }\n    }, translate));\n  }\n\n  if (is(element, 'camunda:AsyncCapable')) {\n    group.entries = group.entries.concat(jobRetryTimeCycle(element, bpmnFactory, {\n      getBusinessObject: getBusinessObject\n    }, translate));\n  }\n\n};\n"]},"metadata":{},"sourceType":"script"}