{"ast":null,"code":"import { isAny } from '../modeling/util/ModelingUtil';\nimport { isLabel } from '../../util/LabelUtil';\n/**\n * Extention of GlobalConnect tool that implements BPMN specific rules about\n * connection start elements.\n */\n\nexport default function BpmnGlobalConnect(globalConnect) {\n  globalConnect.registerProvider(this);\n}\nBpmnGlobalConnect.$inject = ['globalConnect'];\n/**\n * Checks if given element can be used for starting connection.\n *\n * @param  {Element} source\n * @return {Boolean}\n */\n\nBpmnGlobalConnect.prototype.canStartConnect = function (source) {\n  if (nonExistantOrLabel(source)) {\n    return null;\n  }\n\n  var businessObject = source.businessObject;\n  return isAny(businessObject, ['bpmn:FlowNode', 'bpmn:InteractionNode', 'bpmn:DataObjectReference', 'bpmn:DataStoreReference']);\n};\n\nfunction nonExistantOrLabel(element) {\n  return !element || isLabel(element);\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/global-connect/BpmnGlobalConnect.js"],"names":["isAny","isLabel","BpmnGlobalConnect","globalConnect","registerProvider","$inject","prototype","canStartConnect","source","nonExistantOrLabel","businessObject","element"],"mappings":"AAAA,SACEA,KADF,QAEO,+BAFP;AAIA,SACEC,OADF,QAEO,sBAFP;AAIA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,CAA2BC,aAA3B,EAA0C;AACvDA,EAAAA,aAAa,CAACC,gBAAd,CAA+B,IAA/B;AACD;AAEDF,iBAAiB,CAACG,OAAlB,GAA4B,CAAE,eAAF,CAA5B;AAGA;AACA;AACA;AACA;AACA;AACA;;AACAH,iBAAiB,CAACI,SAAlB,CAA4BC,eAA5B,GAA8C,UAASC,MAAT,EAAiB;AAE7D,MAAIC,kBAAkB,CAACD,MAAD,CAAtB,EAAgC;AAC9B,WAAO,IAAP;AACD;;AAED,MAAIE,cAAc,GAAGF,MAAM,CAACE,cAA5B;AAEA,SAAOV,KAAK,CAACU,cAAD,EAAiB,CAC3B,eAD2B,EAE3B,sBAF2B,EAG3B,0BAH2B,EAI3B,yBAJ2B,CAAjB,CAAZ;AAMD,CAdD;;AAiBA,SAASD,kBAAT,CAA4BE,OAA5B,EAAqC;AACnC,SAAO,CAACA,OAAD,IAAYV,OAAO,CAACU,OAAD,CAA1B;AACD","sourcesContent":["import {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isLabel\n} from '../../util/LabelUtil';\n\n/**\n * Extention of GlobalConnect tool that implements BPMN specific rules about\n * connection start elements.\n */\nexport default function BpmnGlobalConnect(globalConnect) {\n  globalConnect.registerProvider(this);\n}\n\nBpmnGlobalConnect.$inject = [ 'globalConnect' ];\n\n\n/**\n * Checks if given element can be used for starting connection.\n *\n * @param  {Element} source\n * @return {Boolean}\n */\nBpmnGlobalConnect.prototype.canStartConnect = function(source) {\n\n  if (nonExistantOrLabel(source)) {\n    return null;\n  }\n\n  var businessObject = source.businessObject;\n\n  return isAny(businessObject, [\n    'bpmn:FlowNode',\n    'bpmn:InteractionNode',\n    'bpmn:DataObjectReference',\n    'bpmn:DataStoreReference'\n  ]);\n};\n\n\nfunction nonExistantOrLabel(element) {\n  return !element || isLabel(element);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}