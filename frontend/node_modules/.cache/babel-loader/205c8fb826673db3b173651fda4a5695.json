{"ast":null,"code":"export default function CreateConnectionHandler(canvas, layouter) {\n  this._canvas = canvas;\n  this._layouter = layouter;\n}\nCreateConnectionHandler.$inject = ['canvas', 'layouter']; // api //////////////////////\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.element.Base} context.source the source object\n * @param {djs.element.Base} context.target the parent object\n * @param {Point} context.position position of the new element\n */\n\nCreateConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n      source = context.source,\n      target = context.target,\n      parent = context.parent,\n      parentIndex = context.parentIndex,\n      hints = context.hints;\n\n  if (!source || !target) {\n    throw new Error('source and target required');\n  }\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  connection.source = source;\n  connection.target = target;\n\n  if (!connection.waypoints) {\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\n  } // add connection\n\n\n  this._canvas.addConnection(connection, parent, parentIndex);\n\n  return connection;\n};\n\nCreateConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/modeling/cmd/CreateConnectionHandler.js"],"names":["CreateConnectionHandler","canvas","layouter","_canvas","_layouter","$inject","prototype","execute","context","connection","source","target","parent","parentIndex","hints","Error","waypoints","layoutConnection","addConnection","revert","removeConnection"],"mappings":"AAAA,eAAe,SAASA,uBAAT,CAAiCC,MAAjC,EAAyCC,QAAzC,EAAmD;AAChE,OAAKC,OAAL,GAAeF,MAAf;AACA,OAAKG,SAAL,GAAiBF,QAAjB;AACD;AAEDF,uBAAuB,CAACK,OAAxB,GAAkC,CAAE,QAAF,EAAY,UAAZ,CAAlC,C,CAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,uBAAuB,CAACM,SAAxB,CAAkCC,OAAlC,GAA4C,UAASC,OAAT,EAAkB;AAE5D,MAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,MACIC,MAAM,GAAGF,OAAO,CAACE,MADrB;AAAA,MAEIC,MAAM,GAAGH,OAAO,CAACG,MAFrB;AAAA,MAGIC,MAAM,GAAGJ,OAAO,CAACI,MAHrB;AAAA,MAIIC,WAAW,GAAGL,OAAO,CAACK,WAJ1B;AAAA,MAKIC,KAAK,GAAGN,OAAO,CAACM,KALpB;;AAOA,MAAI,CAACJ,MAAD,IAAW,CAACC,MAAhB,EAAwB;AACtB,UAAM,IAAII,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,MAAI,CAACH,MAAL,EAAa;AACX,UAAM,IAAIG,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAEDN,EAAAA,UAAU,CAACC,MAAX,GAAoBA,MAApB;AACAD,EAAAA,UAAU,CAACE,MAAX,GAAoBA,MAApB;;AAEA,MAAI,CAACF,UAAU,CAACO,SAAhB,EAA2B;AACzBP,IAAAA,UAAU,CAACO,SAAX,GAAuB,KAAKZ,SAAL,CAAea,gBAAf,CAAgCR,UAAhC,EAA4CK,KAA5C,CAAvB;AACD,GAtB2D,CAwB5D;;;AACA,OAAKX,OAAL,CAAae,aAAb,CAA2BT,UAA3B,EAAuCG,MAAvC,EAA+CC,WAA/C;;AAEA,SAAOJ,UAAP;AACD,CA5BD;;AA8BAT,uBAAuB,CAACM,SAAxB,CAAkCa,MAAlC,GAA2C,UAASX,OAAT,EAAkB;AAC3D,MAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;;AAEA,OAAKN,OAAL,CAAaiB,gBAAb,CAA8BX,UAA9B;;AAEAA,EAAAA,UAAU,CAACC,MAAX,GAAoB,IAApB;AACAD,EAAAA,UAAU,CAACE,MAAX,GAAoB,IAApB;AACD,CAPD","sourcesContent":["export default function CreateConnectionHandler(canvas, layouter) {\n  this._canvas = canvas;\n  this._layouter = layouter;\n}\n\nCreateConnectionHandler.$inject = [ 'canvas', 'layouter' ];\n\n\n// api //////////////////////\n\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.element.Base} context.source the source object\n * @param {djs.element.Base} context.target the parent object\n * @param {Point} context.position position of the new element\n */\nCreateConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      source = context.source,\n      target = context.target,\n      parent = context.parent,\n      parentIndex = context.parentIndex,\n      hints = context.hints;\n\n  if (!source || !target) {\n    throw new Error('source and target required');\n  }\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  connection.source = source;\n  connection.target = target;\n\n  if (!connection.waypoints) {\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\n  }\n\n  // add connection\n  this._canvas.addConnection(connection, parent, parentIndex);\n\n  return connection;\n};\n\nCreateConnectionHandler.prototype.revert = function(context) {\n  var connection = context.connection;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n};"]},"metadata":{},"sourceType":"module"}