{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vittorio\\\\Documents\\\\GitHub\\\\SPM2021-MTV\\\\frontend\\\\src\\\\components\\\\deployments\\\\Deployments.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./deployments.scss\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUser } from '../util/APIUtils';\nimport $ from 'jquery';\nimport { _urlNuovo, _urlResources } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deployments() {\n  _s();\n\n  const [id, setId] = useState();\n  const [myDeployments, setMyDeployments] = useState([]);\n  const [myProcessDefinitions, setMyProcessDefinitions] = useState([]);\n  const [listaImmagini, setMyListaImmagini] = useState([]);\n  useEffect(() => {\n    getId();\n    getAllMyProcessDefinitions();\n  }, []);\n\n  function getId() {\n    const supp = getCurrentUser().then(response => {\n      setId(response.id);\n      getAllMyDeployments(response.id);\n      getAllMyProcessDefinitions(response.id); //console.log(\"response\", response.id);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }\n\n  function getAllMyProcessDefinitions(id) {\n    $.ajax({\n      method: \"GET\",\n      url: _urlNuovo + \"/rest/process-definition?tenantIdIn=\" + id,\n      success: function (data) {\n        setMyProcessDefinitions(data);\n        console.log(\"ProcessDefinition\", data);\n        setMyListaImmagini(data);\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        console.log(\"funzione chiamata quando la chiamata fallisce\", jqXHR, textStatus, errorThrown);\n      }\n    });\n  }\n\n  function getAllMyDeployments(id) {\n    $.ajax({\n      method: \"GET\",\n      url: _urlNuovo + \"/rest/deployment?tenantIdIn=\" + id,\n      success: function (data) {\n        setMyDeployments(data);\n        console.log(\"deployments\", data);\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        console.log(\"funzione chiamata quando la chiamata fallisce\", jqXHR, textStatus, errorThrown);\n      }\n    });\n  }\n\n  const [task, setTask] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deployments\",\n    id: \"deployments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deployments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colonna1\",\n          style: {\n            maxHeight: '100%',\n            overflow: 'auto'\n          },\n          children: myDeployments.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"item\",\n              style: {\n                marginTop: index == 0 ? 10 : 0\n              },\n              onClick: () => setTask(item),\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: item.deploymentTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: item.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: item.tenantId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colonna2\",\n          children: task ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: task.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: task.deploymentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: task.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: task.tenantId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colonna3\",\n          children: task ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), listaImmagini.map((item, index) => {\n              return task.id == item.deploymentId ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: _urlResources + item.resource.toString().substring(6).replace(\".bpmn\", \".svg\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this) : null;\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/cockpit',\n        className: \"link\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cockpitButton\",\n          onClick: () => {},\n          children: \"Cockpit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deployments, \"vMdotJSqd4Z95UDmJsf0T7uSJqM=\");\n\n_c = Deployments;\nexport default Deployments;\nconst data = [{\n  codice: 'xxxxxxxxxx',\n  name: 'Paoletto Maldini',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://img.ilgcdn.com/sites/default/files/styles/xl/public/foto/2019/12/15/1576423805-2287683.jpg?_=1576773755'\n}, {\n  codice: 'yyyyyyyyyy',\n  name: 'Francesco Totti',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://tmssl.akamaized.net/images/foto/galerie/francesco-totti-abschied-winken-1601021419-47804.jpg?lm=1601021441'\n}, {\n  codice: 'yyyyyyyyyy',\n  name: 'Aereoplanino Montella',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://i.pinimg.com/originals/d6/53/cc/d653ccd7ca5143bc31f064cf44b698f4.jpg'\n}, {\n  codice: 'xxxxxxxxxx',\n  name: 'Paoletto Maldini',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://img.ilgcdn.com/sites/default/files/styles/xl/public/foto/2019/12/15/1576423805-2287683.jpg?_=1576773755'\n}, {\n  codice: 'yyyyyyyyyy',\n  name: 'Francesco Totti',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://tmssl.akamaized.net/images/foto/galerie/francesco-totti-abschied-winken-1601021419-47804.jpg?lm=1601021441'\n}, {\n  codice: 'yyyyyyyyyy',\n  name: 'Aereoplanino Montella',\n  time: '2022-01-18Txxxx',\n  source: 'null',\n  tenantId: 1,\n  img: 'https://i.pinimg.com/originals/d6/53/cc/d653ccd7ca5143bc31f064cf44b698f4.jpg'\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Deployments\");","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/src/components/deployments/Deployments.jsx"],"names":["React","useEffect","useRef","useState","Link","getCurrentUser","$","_urlNuovo","_urlResources","Deployments","id","setId","myDeployments","setMyDeployments","myProcessDefinitions","setMyProcessDefinitions","listaImmagini","setMyListaImmagini","getId","getAllMyProcessDefinitions","supp","then","response","getAllMyDeployments","catch","error","console","log","ajax","method","url","success","data","jqXHR","textStatus","errorThrown","task","setTask","maxHeight","overflow","map","item","index","marginTop","deploymentTime","source","tenantId","name","deploymentId","resource","toString","substring","replace","codice","time","img"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,WAAzC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAErB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcR,QAAQ,EAA5B;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,oBAAD,EAAuBC,uBAAvB,IAAkDZ,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACa,aAAD,EAAgBC,kBAAhB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK;AACLC,IAAAA,0BAA0B;AAC3B,GAHQ,EAGN,EAHM,CAAT;;AAMA,WAASD,KAAT,GAAiB;AACf,UAAME,IAAI,GAAGf,cAAc,GACxBgB,IADU,CACLC,QAAQ,IAAI;AAChBX,MAAAA,KAAK,CAACW,QAAQ,CAACZ,EAAV,CAAL;AACAa,MAAAA,mBAAmB,CAACD,QAAQ,CAACZ,EAAV,CAAnB;AACAS,MAAAA,0BAA0B,CAACG,QAAQ,CAACZ,EAAV,CAA1B,CAHgB,CAIhB;AACD,KANU,EAMRc,KANQ,CAMFC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KARU,CAAb;AASD;;AAED,WAASN,0BAAT,CAAoCT,EAApC,EAAwC;AACtCJ,IAAAA,CAAC,CAACsB,IAAF,CAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAEvB,SAAS,GAAG,sCAAZ,GAAqDG,EAFrD;AAGLqB,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACvBjB,QAAAA,uBAAuB,CAACiB,IAAD,CAAvB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,IAAjC;AACAf,QAAAA,kBAAkB,CAACe,IAAD,CAAlB;AACD,OAPI;AAQLP,MAAAA,KAAK,EAAE,UAAUQ,KAAV,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0C;AAC/CT,QAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DM,KAA7D,EAAoEC,UAApE,EAAgFC,WAAhF;AACD;AAVI,KAAP;AAaD;;AAED,WAASZ,mBAAT,CAA6Bb,EAA7B,EAAiC;AAE/BJ,IAAAA,CAAC,CAACsB,IAAF,CAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAEvB,SAAS,GAAG,8BAAZ,GAA6CG,EAF7C;AAGLqB,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACvBnB,QAAAA,gBAAgB,CAACmB,IAAD,CAAhB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,IAA3B;AACD,OANI;AAOLP,MAAAA,KAAK,EAAE,UAAUQ,KAAV,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0C;AAC/CT,QAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DM,KAA7D,EAAoEC,UAApE,EAAgFC,WAAhF;AACD;AATI,KAAP;AAYD;;AAGD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,EAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,EAAE,EAAC,aAAhC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAE;AAAEmC,YAAAA,SAAS,EAAE,MAAb;AAAqBC,YAAAA,QAAQ,EAAE;AAA/B,WAAjC;AAAA,oBAEI3B,aAAa,CAAC4B,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,gCACE;AAAQ,cAAA,SAAS,EAAC,MAAlB;AAAyB,cAAA,KAAK,EAAE;AAC9BC,gBAAAA,SAAS,EAAED,KAAK,IAAI,CAAT,GAAa,EAAb,GAAkB;AADC,eAAhC;AAGE,cAAA,OAAO,EAAE,MAAML,OAAO,CAACI,IAAD,CAHxB;AAAA,sCAKE;AAAA,0BAAKA,IAAI,CAAC/B;AAAV;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA,0BAAK+B,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAA,0BAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAA,0BAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAoBE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAEIV,IAAI,gBACA;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACA;AAAA,wBAAKA,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKX,IAAI,CAAC1B;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAK0B,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,wBAAKR,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA,wBAAKT,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAQA;AAVR;AAAA;AAAA;AAAA;AAAA,gBApBF,eAiCE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAEIV,IAAI,gBACA;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACA;AAAA,wBAAKA,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,oBADA,EAGE/B,aAAa,CAACwB,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,qBACEN,IAAI,CAAC1B,EAAL,IAAW+B,IAAI,CAACO,YAAhB,gBACA;AAAK,gBAAA,GAAG,EAAExC,aAAa,GAACiC,IAAI,CAACQ,QAAL,CAAcC,QAAd,GAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,OAAtC,CAA8C,OAA9C,EAAuD,MAAvD;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADA,GAEK,IAHP;AAKH,aANC,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAaA;AAfR;AAAA;AAAA;AAAA;AAAA,gBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwDE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,UAAV;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAE,MAAM,CAAG,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GAhIQ3C,W;;KAAAA,W;AAkIT,eAAeA,WAAf;AAEA,MAAMuB,IAAI,GAAG,CACX;AACEqB,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,kBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CADW,EASX;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,iBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CATW,EAiBX;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,uBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CAjBW,EAyBX;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,kBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CAzBW,EAiCX;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,iBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CAjCW,EAyCX;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEN,EAAAA,IAAI,EAAE,uBAFR;AAGEO,EAAAA,IAAI,EAAE,iBAHR;AAIET,EAAAA,MAAM,EAAE,MAJV;AAKEC,EAAAA,QAAQ,EAAE,CALZ;AAMES,EAAAA,GAAG,EAAE;AANP,CAzCW,CAAb","sourcesContent":["import \"./deployments.scss\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport $ from 'jquery';\r\nimport { _urlNuovo, _urlResources } from \"../config\";\r\n\r\nfunction Deployments() {\r\n\r\n  const [id, setId] = useState();\r\n  const [myDeployments, setMyDeployments] = useState([]);\r\n  const [myProcessDefinitions, setMyProcessDefinitions] = useState([]);\r\n  const [listaImmagini, setMyListaImmagini] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    getId();\r\n    getAllMyProcessDefinitions();\r\n  }, [])\r\n\r\n\r\n  function getId() {\r\n    const supp = getCurrentUser()\r\n      .then(response => {\r\n        setId(response.id);\r\n        getAllMyDeployments(response.id);\r\n        getAllMyProcessDefinitions(response.id);\r\n        //console.log(\"response\", response.id);\r\n      }).catch(error => {\r\n        console.log(\"error\", error);\r\n      })\r\n  }\r\n\r\n  function getAllMyProcessDefinitions(id) {\r\n    $.ajax({\r\n      method: \"GET\",\r\n      url: _urlNuovo + \"/rest/process-definition?tenantIdIn=\" + id,\r\n      success: function (data) {\r\n        setMyProcessDefinitions(data);\r\n        console.log(\"ProcessDefinition\", data);\r\n        setMyListaImmagini(data);\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        console.log(\"funzione chiamata quando la chiamata fallisce\", jqXHR, textStatus, errorThrown);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  function getAllMyDeployments(id) {\r\n\r\n    $.ajax({\r\n      method: \"GET\",\r\n      url: _urlNuovo + \"/rest/deployment?tenantIdIn=\" + id,\r\n      success: function (data) {\r\n        setMyDeployments(data);\r\n        console.log(\"deployments\", data);\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        console.log(\"funzione chiamata quando la chiamata fallisce\", jqXHR, textStatus, errorThrown);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const [task, setTask] = useState();\r\n\r\n  return (\r\n    <div className=\"deployments\" id=\"deployments\">\r\n      <h1>Deployments</h1>\r\n\r\n      <div className=\"container\">\r\n\r\n        <div className=\"container2\">\r\n\r\n          <div className=\"colonna1\" style={{ maxHeight: '100%', overflow: 'auto' }}>\r\n            {\r\n              myDeployments.map((item, index) => {\r\n                return (\r\n                  <button className=\"item\" style={{\r\n                    marginTop: index == 0 ? 10 : 0\r\n                  }}\r\n                    onClick={() => setTask(item)}\r\n                  >\r\n                    <h5>{item.id}</h5>\r\n                    <h5>{item.deploymentTime}</h5>\r\n                    <h5>{item.source}</h5>\r\n                    <h5>{item.tenantId}</h5>\r\n                  </button>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n          <div className=\"colonna2\">\r\n            {\r\n              task\r\n                ? <div className=\"item\" >\r\n                  <h4>{task.name}</h4>\r\n                  <h5>{task.id}</h5>\r\n                  <h5>{task.deploymentTime}</h5>\r\n                  <h5>{task.source}</h5>\r\n                  <h5>{task.tenantId}</h5>\r\n                </div>\r\n                : null\r\n            }\r\n          </div>\r\n          <div className=\"colonna3\">\r\n            {\r\n              task\r\n                ? <div className=\"item\" >\r\n                  <h4>{task.name}</h4>\r\n                  {\r\n                    listaImmagini.map((item, index) => {\r\n                      return (\r\n                        task.id == item.deploymentId ?\r\n                        <img src={_urlResources+item.resource.toString().substring(6).replace(\".bpmn\", \".svg\")} />\r\n                           : null   \r\n                    )\r\n                  })\r\n                  }\r\n                </div>\r\n                : null\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Link to={'/cockpit'} className=\"link\" >\r\n          <button className=\"cockpitButton\" onClick={() => { }}>Cockpit</button>\r\n        </Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Deployments;\r\n\r\nconst data = [\r\n  {\r\n    codice: 'xxxxxxxxxx',\r\n    name: 'Paoletto Maldini',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://img.ilgcdn.com/sites/default/files/styles/xl/public/foto/2019/12/15/1576423805-2287683.jpg?_=1576773755'\r\n  },\r\n  {\r\n    codice: 'yyyyyyyyyy',\r\n    name: 'Francesco Totti',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://tmssl.akamaized.net/images/foto/galerie/francesco-totti-abschied-winken-1601021419-47804.jpg?lm=1601021441'\r\n  },\r\n  {\r\n    codice: 'yyyyyyyyyy',\r\n    name: 'Aereoplanino Montella',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://i.pinimg.com/originals/d6/53/cc/d653ccd7ca5143bc31f064cf44b698f4.jpg'\r\n  },\r\n  {\r\n    codice: 'xxxxxxxxxx',\r\n    name: 'Paoletto Maldini',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://img.ilgcdn.com/sites/default/files/styles/xl/public/foto/2019/12/15/1576423805-2287683.jpg?_=1576773755'\r\n  },\r\n  {\r\n    codice: 'yyyyyyyyyy',\r\n    name: 'Francesco Totti',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://tmssl.akamaized.net/images/foto/galerie/francesco-totti-abschied-winken-1601021419-47804.jpg?lm=1601021441'\r\n  },\r\n  {\r\n    codice: 'yyyyyyyyyy',\r\n    name: 'Aereoplanino Montella',\r\n    time: '2022-01-18Txxxx',\r\n    source: 'null',\r\n    tenantId: 1,\r\n    img: 'https://i.pinimg.com/originals/d6/53/cc/d653ccd7ca5143bc31f064cf44b698f4.jpg'\r\n  },\r\n]\r\n"]},"metadata":{},"sourceType":"module"}