{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar asyncCapableHelper = require('../../../../helper/AsyncCapableHelper'),\n    eventDefinitionHelper = require('../../../../helper/EventDefinitionHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nfunction isAsyncBefore(bo) {\n  return asyncCapableHelper.isAsyncBefore(bo);\n}\n\nfunction isAsyncAfter(bo) {\n  return asyncCapableHelper.isAsyncAfter(bo);\n}\n\nfunction isExclusive(bo) {\n  return asyncCapableHelper.isExclusive(bo);\n}\n\nfunction removeFailedJobRetryTimeCycle(bo, element) {\n  return asyncCapableHelper.removeFailedJobRetryTimeCycle(bo, element);\n}\n\nfunction canRemoveFailedJobRetryTimeCycle(element) {\n  return !eventDefinitionHelper.getTimerEventDefinition(element);\n}\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getBusinessObject = options.getBusinessObject;\n  var idPrefix = options.idPrefix || '',\n      labelPrefix = options.labelPrefix || '';\n  var asyncBeforeEntry = entryFactory.checkbox({\n    id: idPrefix + 'asyncBefore',\n    label: labelPrefix + translate('Asynchronous Before'),\n    modelProperty: 'asyncBefore',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        asyncBefore: isAsyncBefore(bo)\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      var asyncBefore = !!values.asyncBefore;\n      var props = {\n        'camunda:asyncBefore': asyncBefore,\n        'camunda:async': false\n      };\n      var commands = [];\n\n      if (!isAsyncAfter(bo) && !asyncBefore) {\n        props = assign({\n          'camunda:exclusive': true\n        }, props);\n\n        if (canRemoveFailedJobRetryTimeCycle(element)) {\n          commands.push(removeFailedJobRetryTimeCycle(bo, element));\n        }\n      }\n\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n      return commands;\n    }\n  });\n  var asyncAfterEntry = entryFactory.checkbox({\n    id: idPrefix + 'asyncAfter',\n    label: labelPrefix + translate('Asynchronous After'),\n    modelProperty: 'asyncAfter',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        asyncAfter: isAsyncAfter(bo)\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      var asyncAfter = !!values.asyncAfter;\n      var props = {\n        'camunda:asyncAfter': asyncAfter\n      };\n      var commands = [];\n\n      if (!isAsyncBefore(bo) && !asyncAfter) {\n        props = assign({\n          'camunda:exclusive': true\n        }, props);\n\n        if (canRemoveFailedJobRetryTimeCycle(element)) {\n          commands.push(removeFailedJobRetryTimeCycle(bo, element));\n        }\n      }\n\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n      return commands;\n    }\n  });\n  var exclusiveEntry = entryFactory.checkbox({\n    id: idPrefix + 'exclusive',\n    label: labelPrefix + translate('Exclusive'),\n    modelProperty: 'exclusive',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        exclusive: isExclusive(bo)\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:exclusive': !!values.exclusive\n      });\n    },\n    hidden: function (element) {\n      var bo = getBusinessObject(element);\n      return bo && !isAsyncAfter(bo) && !isAsyncBefore(bo);\n    }\n  });\n  return [asyncBeforeEntry, asyncAfterEntry, exclusiveEntry];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/AsyncContinuation.js"],"names":["assign","require","entryFactory","asyncCapableHelper","eventDefinitionHelper","cmdHelper","isAsyncBefore","bo","isAsyncAfter","isExclusive","removeFailedJobRetryTimeCycle","element","canRemoveFailedJobRetryTimeCycle","getTimerEventDefinition","module","exports","bpmnFactory","options","translate","getBusinessObject","idPrefix","labelPrefix","asyncBeforeEntry","checkbox","id","label","modelProperty","get","node","asyncBefore","set","values","props","commands","push","updateBusinessObject","asyncAfterEntry","asyncAfter","exclusiveEntry","exclusive","hidden"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assign = require('lodash/assign');\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar asyncCapableHelper = require('../../../../helper/AsyncCapableHelper'),\n    eventDefinitionHelper = require('../../../../helper/EventDefinitionHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nfunction isAsyncBefore(bo) {\n  return asyncCapableHelper.isAsyncBefore(bo);\n}\n\nfunction isAsyncAfter(bo) {\n  return asyncCapableHelper.isAsyncAfter(bo);\n}\n\nfunction isExclusive(bo) {\n  return asyncCapableHelper.isExclusive(bo);\n}\n\nfunction removeFailedJobRetryTimeCycle(bo, element) {\n  return asyncCapableHelper.removeFailedJobRetryTimeCycle(bo, element);\n}\n\nfunction canRemoveFailedJobRetryTimeCycle(element) {\n  return !eventDefinitionHelper.getTimerEventDefinition(element);\n}\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getBusinessObject = options.getBusinessObject;\n\n  var idPrefix = options.idPrefix || '',\n      labelPrefix = options.labelPrefix || '';\n\n\n  var asyncBeforeEntry = entryFactory.checkbox({\n    id: idPrefix + 'asyncBefore',\n    label: labelPrefix + translate('Asynchronous Before'),\n    modelProperty: 'asyncBefore',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        asyncBefore: isAsyncBefore(bo)\n      };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      var asyncBefore = !!values.asyncBefore;\n\n      var props = {\n        'camunda:asyncBefore': asyncBefore,\n        'camunda:async': false\n      };\n\n      var commands = [];\n      if (!isAsyncAfter(bo) && !asyncBefore) {\n        props = assign({ 'camunda:exclusive' : true }, props);\n        if (canRemoveFailedJobRetryTimeCycle(element)) {\n          commands.push(removeFailedJobRetryTimeCycle(bo, element));\n        }\n      }\n\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n      return commands;\n    }\n  });\n\n\n  var asyncAfterEntry = entryFactory.checkbox({\n    id: idPrefix + 'asyncAfter',\n    label: labelPrefix + translate('Asynchronous After'),\n    modelProperty: 'asyncAfter',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      return {\n        asyncAfter: isAsyncAfter(bo)\n      };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      var asyncAfter = !!values.asyncAfter;\n\n      var props = {\n        'camunda:asyncAfter': asyncAfter\n      };\n\n      var commands = [];\n      if (!isAsyncBefore(bo) && !asyncAfter) {\n        props = assign({ 'camunda:exclusive' : true }, props);\n        if (canRemoveFailedJobRetryTimeCycle(element)) {\n          commands.push(removeFailedJobRetryTimeCycle(bo, element));\n        }\n      }\n\n      commands.push(cmdHelper.updateBusinessObject(element, bo, props));\n      return commands;\n    }\n  });\n\n\n  var exclusiveEntry = entryFactory.checkbox({\n    id: idPrefix + 'exclusive',\n    label: labelPrefix + translate('Exclusive'),\n    modelProperty: 'exclusive',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      return { exclusive: isExclusive(bo) };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, { 'camunda:exclusive': !!values.exclusive });\n    },\n\n    hidden: function(element) {\n      var bo = getBusinessObject(element);\n      return bo && !isAsyncAfter(bo) && !isAsyncBefore(bo);\n    }\n  });\n\n  return [ asyncBeforeEntry, asyncAfterEntry, exclusiveEntry ];\n};\n"]},"metadata":{},"sourceType":"script"}