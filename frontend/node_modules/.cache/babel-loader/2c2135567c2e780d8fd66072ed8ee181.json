{"ast":null,"code":"import { assign, forEach } from 'min-dash';\nimport inherits from 'inherits';\nimport { is } from '../../util/ModelUtil';\nimport { isExpanded } from '../../util/DiUtil';\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\nimport { DEFAULT_LABEL_SIZE } from '../../util/LabelUtil';\n/**\n * A bpmn-aware factory for diagram-js shapes\n */\n\nexport default function ElementFactory(bpmnFactory, moddle, translate) {\n  BaseElementFactory.call(this);\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n  this._translate = translate;\n}\ninherits(ElementFactory, BaseElementFactory);\nElementFactory.$inject = ['bpmnFactory', 'moddle', 'translate'];\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\n\nElementFactory.prototype.create = function (elementType, attrs) {\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    return this.baseCreate(elementType, assign({\n      type: 'label'\n    }, DEFAULT_LABEL_SIZE, attrs));\n  }\n\n  return this.createBpmnElement(elementType, attrs);\n};\n\nElementFactory.prototype.createBpmnElement = function (elementType, attrs) {\n  var size,\n      translate = this._translate;\n  attrs = attrs || {};\n  var businessObject = attrs.businessObject;\n\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error(translate('no shape type specified'));\n    }\n\n    businessObject = this._bpmnFactory.create(attrs.type);\n  }\n\n  if (!businessObject.di) {\n    if (elementType === 'root') {\n      businessObject.di = this._bpmnFactory.createDiPlane(businessObject, [], {\n        id: businessObject.id + '_di'\n      });\n    } else if (elementType === 'connection') {\n      businessObject.di = this._bpmnFactory.createDiEdge(businessObject, [], {\n        id: businessObject.id + '_di'\n      });\n    } else {\n      businessObject.di = this._bpmnFactory.createDiShape(businessObject, {}, {\n        id: businessObject.id + '_di'\n      });\n    }\n  }\n\n  if (attrs.colors) {\n    assign(businessObject.di, attrs.colors);\n    delete attrs.colors;\n  }\n\n  applyAttributes(businessObject, attrs, ['processRef', 'isInterrupting', 'associationDirection', 'isForCompensation']);\n\n  if (attrs.isExpanded) {\n    applyAttribute(businessObject.di, attrs, 'isExpanded');\n  }\n\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    businessObject.di.isMarkerVisible = true;\n  }\n\n  var eventDefinitions, newEventDefinition;\n\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._moddle.create(attrs.eventDefinitionType);\n\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._moddle.create('bpmn:FormalExpression');\n    }\n\n    eventDefinitions.push(newEventDefinition);\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n    delete attrs.eventDefinitionType;\n  }\n\n  size = this._getDefaultSize(businessObject);\n  attrs = assign({\n    businessObject: businessObject,\n    id: businessObject.id\n  }, size, attrs);\n  return this.baseCreate(elementType, attrs);\n};\n\nElementFactory.prototype._getDefaultSize = function (semantic) {\n  if (is(semantic, 'bpmn:SubProcess')) {\n    if (isExpanded(semantic)) {\n      return {\n        width: 350,\n        height: 200\n      };\n    } else {\n      return {\n        width: 100,\n        height: 80\n      };\n    }\n  }\n\n  if (is(semantic, 'bpmn:Task')) {\n    return {\n      width: 100,\n      height: 80\n    };\n  }\n\n  if (is(semantic, 'bpmn:Gateway')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n\n  if (is(semantic, 'bpmn:Event')) {\n    return {\n      width: 36,\n      height: 36\n    };\n  }\n\n  if (is(semantic, 'bpmn:Participant')) {\n    if (!isExpanded(semantic)) {\n      return {\n        width: 400,\n        height: 100\n      };\n    } else {\n      return {\n        width: 600,\n        height: 250\n      };\n    }\n  }\n\n  if (is(semantic, 'bpmn:Lane')) {\n    return {\n      width: 400,\n      height: 100\n    };\n  }\n\n  if (is(semantic, 'bpmn:DataObjectReference')) {\n    return {\n      width: 36,\n      height: 50\n    };\n  }\n\n  if (is(semantic, 'bpmn:DataStoreReference')) {\n    return {\n      width: 50,\n      height: 50\n    };\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return {\n      width: 100,\n      height: 30\n    };\n  }\n\n  return {\n    width: 100,\n    height: 80\n  };\n};\n\nElementFactory.prototype.createParticipantShape = function (collapsed) {\n  var attrs = {\n    type: 'bpmn:Participant'\n  };\n\n  if (!collapsed) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n\n  return this.createShape(attrs);\n}; // helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element,\n * remove attribute from the map on application.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {Array<String>} attributeNames name of attributes to apply\n */\n\n\nfunction applyAttributes(element, attrs, attributeNames) {\n  forEach(attributeNames, function (property) {\n    if (attrs[property] !== undefined) {\n      applyAttribute(element, attrs, property);\n    }\n  });\n}\n/**\n * Apply named property to element and drain it from the attrs\n * collection.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {String} attributeName to apply\n */\n\n\nfunction applyAttribute(element, attrs, attributeName) {\n  element[attributeName] = attrs[attributeName];\n  delete attrs[attributeName];\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/lib/features/modeling/ElementFactory.js"],"names":["assign","forEach","inherits","is","isExpanded","BaseElementFactory","DEFAULT_LABEL_SIZE","ElementFactory","bpmnFactory","moddle","translate","call","_bpmnFactory","_moddle","_translate","$inject","prototype","baseCreate","create","elementType","attrs","type","createBpmnElement","size","businessObject","Error","di","createDiPlane","id","createDiEdge","createDiShape","colors","applyAttributes","applyAttribute","isMarkerVisible","eventDefinitions","newEventDefinition","eventDefinitionType","get","condition","push","$parent","_getDefaultSize","semantic","width","height","createParticipantShape","collapsed","processRef","createShape","element","attributeNames","property","undefined","attributeName"],"mappings":"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","sourcesContent":["import {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport { is } from '../../util/ModelUtil';\n\nimport {\n  isExpanded\n} from '../../util/DiUtil';\n\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\n\nimport {\n  DEFAULT_LABEL_SIZE\n} from '../../util/LabelUtil';\n\n\n/**\n * A bpmn-aware factory for diagram-js shapes\n */\nexport default function ElementFactory(bpmnFactory, moddle, translate) {\n  BaseElementFactory.call(this);\n\n  this._bpmnFactory = bpmnFactory;\n  this._moddle = moddle;\n  this._translate = translate;\n}\n\ninherits(ElementFactory, BaseElementFactory);\n\nElementFactory.$inject = [\n  'bpmnFactory',\n  'moddle',\n  'translate'\n];\n\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\n\nElementFactory.prototype.create = function(elementType, attrs) {\n  // no special magic for labels,\n  // we assume their businessObjects have already been created\n  // and wired via attrs\n  if (elementType === 'label') {\n    return this.baseCreate(elementType, assign({ type: 'label' }, DEFAULT_LABEL_SIZE, attrs));\n  }\n\n  return this.createBpmnElement(elementType, attrs);\n};\n\nElementFactory.prototype.createBpmnElement = function(elementType, attrs) {\n  var size,\n      translate = this._translate;\n\n  attrs = attrs || {};\n\n  var businessObject = attrs.businessObject;\n\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error(translate('no shape type specified'));\n    }\n\n    businessObject = this._bpmnFactory.create(attrs.type);\n  }\n\n  if (!businessObject.di) {\n    if (elementType === 'root') {\n      businessObject.di = this._bpmnFactory.createDiPlane(businessObject, [], {\n        id: businessObject.id + '_di'\n      });\n    } else\n    if (elementType === 'connection') {\n      businessObject.di = this._bpmnFactory.createDiEdge(businessObject, [], {\n        id: businessObject.id + '_di'\n      });\n    } else {\n      businessObject.di = this._bpmnFactory.createDiShape(businessObject, {}, {\n        id: businessObject.id + '_di'\n      });\n    }\n  }\n\n  if (attrs.colors) {\n    assign(businessObject.di, attrs.colors);\n\n    delete attrs.colors;\n  }\n\n  applyAttributes(businessObject, attrs, [\n    'processRef',\n    'isInterrupting',\n    'associationDirection',\n    'isForCompensation'\n  ]);\n\n  if (attrs.isExpanded) {\n    applyAttribute(businessObject.di, attrs, 'isExpanded');\n  }\n\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\n    businessObject.di.isMarkerVisible = true;\n  }\n\n  var eventDefinitions,\n      newEventDefinition;\n\n  if (attrs.eventDefinitionType) {\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\n    newEventDefinition = this._moddle.create(attrs.eventDefinitionType);\n\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\n      newEventDefinition.condition = this._moddle.create('bpmn:FormalExpression');\n    }\n\n    eventDefinitions.push(newEventDefinition);\n\n    newEventDefinition.$parent = businessObject;\n    businessObject.eventDefinitions = eventDefinitions;\n\n    delete attrs.eventDefinitionType;\n  }\n\n  size = this._getDefaultSize(businessObject);\n\n  attrs = assign({\n    businessObject: businessObject,\n    id: businessObject.id\n  }, size, attrs);\n\n  return this.baseCreate(elementType, attrs);\n};\n\n\nElementFactory.prototype._getDefaultSize = function(semantic) {\n\n  if (is(semantic, 'bpmn:SubProcess')) {\n\n    if (isExpanded(semantic)) {\n      return { width: 350, height: 200 };\n    } else {\n      return { width: 100, height: 80 };\n    }\n  }\n\n  if (is(semantic, 'bpmn:Task')) {\n    return { width: 100, height: 80 };\n  }\n\n  if (is(semantic, 'bpmn:Gateway')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(semantic, 'bpmn:Event')) {\n    return { width: 36, height: 36 };\n  }\n\n  if (is(semantic, 'bpmn:Participant')) {\n    if (!isExpanded(semantic)) {\n      return { width: 400, height: 100 };\n    } else {\n      return { width: 600, height: 250 };\n    }\n  }\n\n  if (is(semantic, 'bpmn:Lane')) {\n    return { width: 400, height: 100 };\n  }\n\n  if (is(semantic, 'bpmn:DataObjectReference')) {\n    return { width: 36, height: 50 };\n  }\n\n  if (is(semantic, 'bpmn:DataStoreReference')) {\n    return { width: 50, height: 50 };\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return { width: 100, height: 30 };\n  }\n\n  return { width: 100, height: 80 };\n};\n\n\nElementFactory.prototype.createParticipantShape = function(collapsed) {\n\n  var attrs = { type: 'bpmn:Participant' };\n\n  if (!collapsed) {\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\n  }\n\n  return this.createShape(attrs);\n};\n\n\n// helpers //////////////////////\n\n/**\n * Apply attributes from a map to the given element,\n * remove attribute from the map on application.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {Array<String>} attributeNames name of attributes to apply\n */\nfunction applyAttributes(element, attrs, attributeNames) {\n\n  forEach(attributeNames, function(property) {\n    if (attrs[property] !== undefined) {\n      applyAttribute(element, attrs, property);\n    }\n  });\n}\n\n/**\n * Apply named property to element and drain it from the attrs\n * collection.\n *\n * @param {Base} element\n * @param {Object} attrs (in/out map of attributes)\n * @param {String} attributeName to apply\n */\nfunction applyAttribute(element, attrs, attributeName) {\n  element[attributeName] = attrs[attributeName];\n\n  delete attrs[attributeName];\n}"]},"metadata":{},"sourceType":"module"}