{"ast":null,"code":"'use strict';\n\nvar Collection = require('./collection');\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n  var collection = Collection.extend(target[property.name] || [], ref, property, target);\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: collection\n  });\n\n  if (collection.length) {\n    collection.forEach(function (o) {\n      ref.set(o, property.inverse, target);\n    });\n  }\n}\n\nfunction defineProperty(ref, property, target) {\n  var inverseProperty = property.inverse;\n  var _value = target[property.name];\n  Object.defineProperty(target, property.name, {\n    configurable: property.configurable,\n    enumerable: property.enumerable,\n    get: function () {\n      return _value;\n    },\n    set: function (value) {\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value; // temporary set null\n\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      } // set new value\n\n\n      _value = value; // set inverse value\n\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n}\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\n\n\nfunction Refs(a, b) {\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  } // link\n\n\n  a.inverse = b;\n  b.inverse = a;\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\n\n\nRefs.prototype.bind = function (target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function (target, property) {\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function (target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function (target, property, value) {\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function (target, property, value) {\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/object-refs/lib/refs.js"],"names":["Collection","require","hasOwnProperty","e","property","Object","prototype","call","name","defineCollectionProperty","ref","target","collection","extend","defineProperty","enumerable","value","length","forEach","o","set","inverse","inverseProperty","_value","configurable","get","old","unset","Refs","a","b","props","bind","Error","ensureRefsCollection","isExtended","ensureBound","remove","undefined","add","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Collection = require('./collection');\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n\n  var collection = Collection.extend(target[property.name] || [], ref, property, target);\n\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: collection\n  });\n\n  if (collection.length) {\n\n    collection.forEach(function(o) {\n      ref.set(o, property.inverse, target);\n    });\n  }\n}\n\n\nfunction defineProperty(ref, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  var _value = target[property.name];\n\n  Object.defineProperty(target, property.name, {\n    configurable: property.configurable,\n    enumerable: property.enumerable,\n\n    get: function() {\n      return _value;\n    },\n\n    set: function(value) {\n\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function(target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function(target, property) {\n\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function(target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */"]},"metadata":{},"sourceType":"script"}