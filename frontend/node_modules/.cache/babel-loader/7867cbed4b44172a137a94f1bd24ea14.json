{"ast":null,"code":"import { hasPrimaryModifier } from '../../util/Mouse';\nimport { find } from 'min-dash';\nexport default function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n  eventBus.on('create.end', 500, function (e) {\n    // select the created shape after a\n    // successful create operation\n    if (e.context.canExecute) {\n      selection.select(e.context.shape);\n    }\n  });\n  eventBus.on('connect.end', 500, function (e) {\n    // select the connect end target\n    // after a connect operation\n    if (e.context.canExecute && e.context.target) {\n      selection.select(e.context.target);\n    }\n  });\n  eventBus.on('shape.move.end', 500, function (e) {\n    var previousSelection = e.previousSelection || [];\n    var shape = elementRegistry.get(e.context.shape.id); // make sure at least the main moved element is being\n    // selected after a move operation\n\n    var inSelection = find(previousSelection, function (selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!inSelection) {\n      selection.select(shape);\n    }\n  }); // Shift + click selection\n\n  eventBus.on('element.click', function (event) {\n    var element = event.element; // do not select the root element\n    // or connections\n\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1; // mouse-event: SELECTION_KEY\n\n    var add = hasPrimaryModifier(event); // select OR deselect element in multi selection\n\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        return selection.deselect(element);\n      } else {\n        return selection.select(element);\n      }\n    } else if (!isSelected) {\n      selection.select(element, add);\n    } else {\n      selection.deselect(element);\n    }\n  });\n}\nSelectionBehavior.$inject = ['eventBus', 'selection', 'canvas', 'elementRegistry'];","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/features/selection/SelectionBehavior.js"],"names":["hasPrimaryModifier","find","SelectionBehavior","eventBus","selection","canvas","elementRegistry","on","e","context","canExecute","select","shape","target","previousSelection","get","id","inSelection","selectedShape","event","element","getRootElement","isSelected","isMultiSelect","length","add","deselect","$inject"],"mappings":"AAAA,SACEA,kBADF,QAEO,kBAFP;AAIA,SACEC,IADF,QAEO,UAFP;AAKA,eAAe,SAASC,iBAAT,CACXC,QADW,EACDC,SADC,EACUC,MADV,EAEXC,eAFW,EAEM;AAEnBH,EAAAA,QAAQ,CAACI,EAAT,CAAY,YAAZ,EAA0B,GAA1B,EAA+B,UAASC,CAAT,EAAY;AAEzC;AACA;AACA,QAAIA,CAAC,CAACC,OAAF,CAAUC,UAAd,EAA0B;AACxBN,MAAAA,SAAS,CAACO,MAAV,CAAiBH,CAAC,CAACC,OAAF,CAAUG,KAA3B;AACD;AACF,GAPD;AASAT,EAAAA,QAAQ,CAACI,EAAT,CAAY,aAAZ,EAA2B,GAA3B,EAAgC,UAASC,CAAT,EAAY;AAE1C;AACA;AACA,QAAIA,CAAC,CAACC,OAAF,CAAUC,UAAV,IAAwBF,CAAC,CAACC,OAAF,CAAUI,MAAtC,EAA8C;AAC5CT,MAAAA,SAAS,CAACO,MAAV,CAAiBH,CAAC,CAACC,OAAF,CAAUI,MAA3B;AACD;AACF,GAPD;AASAV,EAAAA,QAAQ,CAACI,EAAT,CAAY,gBAAZ,EAA8B,GAA9B,EAAmC,UAASC,CAAT,EAAY;AAC7C,QAAIM,iBAAiB,GAAGN,CAAC,CAACM,iBAAF,IAAuB,EAA/C;AAEA,QAAIF,KAAK,GAAGN,eAAe,CAACS,GAAhB,CAAoBP,CAAC,CAACC,OAAF,CAAUG,KAAV,CAAgBI,EAApC,CAAZ,CAH6C,CAK7C;AACA;;AACA,QAAIC,WAAW,GAAGhB,IAAI,CAACa,iBAAD,EAAoB,UAASI,aAAT,EAAwB;AAChE,aAAON,KAAK,CAACI,EAAN,KAAaE,aAAa,CAACF,EAAlC;AACD,KAFqB,CAAtB;;AAIA,QAAI,CAACC,WAAL,EAAkB;AAChBb,MAAAA,SAAS,CAACO,MAAV,CAAiBC,KAAjB;AACD;AACF,GAdD,EApBmB,CAoCnB;;AACAT,EAAAA,QAAQ,CAACI,EAAT,CAAY,eAAZ,EAA6B,UAASY,KAAT,EAAgB;AAE3C,QAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB,CAF2C,CAI3C;AACA;;AACA,QAAIA,OAAO,KAAKf,MAAM,CAACgB,cAAP,EAAhB,EAAyC;AACvCD,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAIE,UAAU,GAAGlB,SAAS,CAACkB,UAAV,CAAqBF,OAArB,CAAjB;AAAA,QACIG,aAAa,GAAGnB,SAAS,CAACW,GAAV,GAAgBS,MAAhB,GAAyB,CAD7C,CAV2C,CAa3C;;AACA,QAAIC,GAAG,GAAGzB,kBAAkB,CAACmB,KAAD,CAA5B,CAd2C,CAgB3C;;AACA,QAAIG,UAAU,IAAIC,aAAlB,EAAiC;AAC/B,UAAIE,GAAJ,EAAS;AACP,eAAOrB,SAAS,CAACsB,QAAV,CAAmBN,OAAnB,CAAP;AACD,OAFD,MAEO;AACL,eAAOhB,SAAS,CAACO,MAAV,CAAiBS,OAAjB,CAAP;AACD;AACF,KAND,MAOA,IAAI,CAACE,UAAL,EAAiB;AACflB,MAAAA,SAAS,CAACO,MAAV,CAAiBS,OAAjB,EAA0BK,GAA1B;AACD,KAFD,MAEO;AACLrB,MAAAA,SAAS,CAACsB,QAAV,CAAmBN,OAAnB;AACD;AACF,GA7BD;AA8BD;AAEDlB,iBAAiB,CAACyB,OAAlB,GAA4B,CAC1B,UAD0B,EAE1B,WAF0B,EAG1B,QAH0B,EAI1B,iBAJ0B,CAA5B","sourcesContent":["import {\n  hasPrimaryModifier\n} from '../../util/Mouse';\n\nimport {\n  find\n} from 'min-dash';\n\n\nexport default function SelectionBehavior(\n    eventBus, selection, canvas,\n    elementRegistry) {\n\n  eventBus.on('create.end', 500, function(e) {\n\n    // select the created shape after a\n    // successful create operation\n    if (e.context.canExecute) {\n      selection.select(e.context.shape);\n    }\n  });\n\n  eventBus.on('connect.end', 500, function(e) {\n\n    // select the connect end target\n    // after a connect operation\n    if (e.context.canExecute && e.context.target) {\n      selection.select(e.context.target);\n    }\n  });\n\n  eventBus.on('shape.move.end', 500, function(e) {\n    var previousSelection = e.previousSelection || [];\n\n    var shape = elementRegistry.get(e.context.shape.id);\n\n    // make sure at least the main moved element is being\n    // selected after a move operation\n    var inSelection = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!inSelection) {\n      selection.select(shape);\n    }\n  });\n\n  // Shift + click selection\n  eventBus.on('element.click', function(event) {\n\n    var element = event.element;\n\n    // do not select the root element\n    // or connections\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // mouse-event: SELECTION_KEY\n    var add = hasPrimaryModifier(event);\n\n    // select OR deselect element in multi selection\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        return selection.deselect(element);\n      } else {\n        return selection.select(element);\n      }\n    } else\n    if (!isSelected) {\n      selection.select(element, add);\n    } else {\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [\n  'eventBus',\n  'selection',\n  'canvas',\n  'elementRegistry'\n];\n"]},"metadata":{},"sourceType":"module"}