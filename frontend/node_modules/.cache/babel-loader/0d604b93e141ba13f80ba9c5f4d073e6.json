{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getBusinessObject = options.getBusinessObject;\n  var candidateStarterGroupsEntry = entryFactory.textField({\n    id: 'candidateStarterGroups',\n    label: translate('Candidate Starter Groups'),\n    modelProperty: 'candidateStarterGroups',\n    description: 'Specify more than one group as a comma separated list.',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      var candidateStarterGroups = bo.get('camunda:candidateStarterGroups');\n      return {\n        candidateStarterGroups: candidateStarterGroups ? candidateStarterGroups : ''\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:candidateStarterGroups': values.candidateStarterGroups || undefined\n      });\n    }\n  });\n  var candidateStarterUsersEntry = entryFactory.textField({\n    id: 'candidateStarterUsers',\n    label: translate('Candidate Starter Users'),\n    modelProperty: 'candidateStarterUsers',\n    description: 'Specify more than one user as a comma separated list.',\n    get: function (element, node) {\n      var bo = getBusinessObject(element);\n      var candidateStarterUsers = bo.get('camunda:candidateStarterUsers');\n      return {\n        candidateStarterUsers: candidateStarterUsers ? candidateStarterUsers : ''\n      };\n    },\n    set: function (element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:candidateStarterUsers': values.candidateStarterUsers || undefined\n      });\n    }\n  });\n  return [candidateStarterGroupsEntry, candidateStarterUsersEntry];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/CandidateStarter.js"],"names":["entryFactory","require","cmdHelper","module","exports","element","bpmnFactory","options","translate","getBusinessObject","candidateStarterGroupsEntry","textField","id","label","modelProperty","description","get","node","bo","candidateStarterGroups","set","values","updateBusinessObject","undefined","candidateStarterUsersEntry","candidateStarterUsers"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kCAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,8BAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,SAAxC,EAAmD;AAElE,MAAIC,iBAAiB,GAAGF,OAAO,CAACE,iBAAhC;AAEA,MAAIC,2BAA2B,GAAGV,YAAY,CAACW,SAAb,CAAuB;AACvDC,IAAAA,EAAE,EAAE,wBADmD;AAEvDC,IAAAA,KAAK,EAAEL,SAAS,CAAC,0BAAD,CAFuC;AAGvDM,IAAAA,aAAa,EAAE,wBAHwC;AAIvDC,IAAAA,WAAW,EAAE,wDAJ0C;AAMvDC,IAAAA,GAAG,EAAE,UAASX,OAAT,EAAkBY,IAAlB,EAAwB;AAC3B,UAAIC,EAAE,GAAGT,iBAAiB,CAACJ,OAAD,CAA1B;AACA,UAAIc,sBAAsB,GAAGD,EAAE,CAACF,GAAH,CAAO,gCAAP,CAA7B;AAEA,aAAO;AACLG,QAAAA,sBAAsB,EAAEA,sBAAsB,GAAGA,sBAAH,GAA4B;AADrE,OAAP;AAGD,KAbsD;AAevDC,IAAAA,GAAG,EAAE,UAASf,OAAT,EAAkBgB,MAAlB,EAA0B;AAC7B,UAAIH,EAAE,GAAGT,iBAAiB,CAACJ,OAAD,CAA1B;AACA,aAAOH,SAAS,CAACoB,oBAAV,CAA+BjB,OAA/B,EAAwCa,EAAxC,EAA4C;AACjD,0CAAkCG,MAAM,CAACF,sBAAP,IAAiCI;AADlB,OAA5C,CAAP;AAGD;AApBsD,GAAvB,CAAlC;AAwBA,MAAIC,0BAA0B,GAAGxB,YAAY,CAACW,SAAb,CAAuB;AACtDC,IAAAA,EAAE,EAAE,uBADkD;AAEtDC,IAAAA,KAAK,EAAEL,SAAS,CAAC,yBAAD,CAFsC;AAGtDM,IAAAA,aAAa,EAAE,uBAHuC;AAItDC,IAAAA,WAAW,EAAE,uDAJyC;AAMtDC,IAAAA,GAAG,EAAE,UAASX,OAAT,EAAkBY,IAAlB,EAAwB;AAC3B,UAAIC,EAAE,GAAGT,iBAAiB,CAACJ,OAAD,CAA1B;AACA,UAAIoB,qBAAqB,GAAGP,EAAE,CAACF,GAAH,CAAO,+BAAP,CAA5B;AAEA,aAAO;AACLS,QAAAA,qBAAqB,EAAEA,qBAAqB,GAAGA,qBAAH,GAA2B;AADlE,OAAP;AAGD,KAbqD;AAetDL,IAAAA,GAAG,EAAE,UAASf,OAAT,EAAkBgB,MAAlB,EAA0B;AAC7B,UAAIH,EAAE,GAAGT,iBAAiB,CAACJ,OAAD,CAA1B;AACA,aAAOH,SAAS,CAACoB,oBAAV,CAA+BjB,OAA/B,EAAwCa,EAAxC,EAA4C;AACjD,yCAAiCG,MAAM,CAACI,qBAAP,IAAgCF;AADhB,OAA5C,CAAP;AAGD;AApBqD,GAAvB,CAAjC;AAwBA,SAAO,CACLb,2BADK,EAELc,0BAFK,CAAP;AAID,CAxDD","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../../factory/EntryFactory');\n\nvar cmdHelper = require('../../../../helper/CmdHelper');\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getBusinessObject = options.getBusinessObject;\n\n  var candidateStarterGroupsEntry = entryFactory.textField({\n    id: 'candidateStarterGroups',\n    label: translate('Candidate Starter Groups'),\n    modelProperty: 'candidateStarterGroups',\n    description: 'Specify more than one group as a comma separated list.',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      var candidateStarterGroups = bo.get('camunda:candidateStarterGroups');\n\n      return {\n        candidateStarterGroups: candidateStarterGroups ? candidateStarterGroups : ''\n      };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:candidateStarterGroups': values.candidateStarterGroups || undefined\n      });\n    }\n\n  });\n\n  var candidateStarterUsersEntry = entryFactory.textField({\n    id: 'candidateStarterUsers',\n    label: translate('Candidate Starter Users'),\n    modelProperty: 'candidateStarterUsers',\n    description: 'Specify more than one user as a comma separated list.',\n\n    get: function(element, node) {\n      var bo = getBusinessObject(element);\n      var candidateStarterUsers = bo.get('camunda:candidateStarterUsers');\n\n      return {\n        candidateStarterUsers: candidateStarterUsers ? candidateStarterUsers : ''\n      };\n    },\n\n    set: function(element, values) {\n      var bo = getBusinessObject(element);\n      return cmdHelper.updateBusinessObject(element, bo, {\n        'camunda:candidateStarterUsers': values.candidateStarterUsers || undefined\n      });\n    }\n\n  });\n\n  return [\n    candidateStarterGroupsEntry,\n    candidateStarterUsersEntry\n  ];\n};\n"]},"metadata":{},"sourceType":"script"}