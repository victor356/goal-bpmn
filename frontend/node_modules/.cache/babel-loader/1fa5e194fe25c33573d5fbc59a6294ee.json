{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    cmdHelper = require('../helper/CmdHelper');\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\nvar checkbox = function (options, defaultParameters) {\n  var resource = defaultParameters,\n      label = options.label || resource.id,\n      canBeDisabled = !!options.disabled && typeof options.disabled === 'function',\n      canBeHidden = !!options.hidden && typeof options.hidden === 'function',\n      description = options.description;\n  resource.html = '<input id=\"camunda-' + resource.id + '\" ' + 'type=\"checkbox\" ' + 'name=\"' + options.modelProperty + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + ' />' + '<label for=\"camunda-' + resource.id + '\" ' + (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') + (canBeHidden ? 'data-show=\"isHidden\"' : '') + '>' + label + '</label>'; // add description below checkbox entry field\n\n  if (description) {\n    resource.html += entryFieldDescription(description);\n  }\n\n  resource.get = function (element) {\n    var bo = getBusinessObject(element),\n        res = {};\n    res[options.modelProperty] = bo.get(options.modelProperty);\n    return res;\n  };\n\n  resource.set = function (element, values) {\n    var res = {};\n    res[options.modelProperty] = !!values[options.modelProperty];\n    return cmdHelper.updateProperties(element, res);\n  };\n\n  if (typeof options.set === 'function') {\n    resource.set = options.set;\n  }\n\n  if (typeof options.get === 'function') {\n    resource.get = options.get;\n  }\n\n  if (canBeDisabled) {\n    resource.isDisabled = function () {\n      return options.disabled.apply(resource, arguments);\n    };\n  }\n\n  if (canBeHidden) {\n    resource.isHidden = function () {\n      return !options.hidden.apply(resource, arguments);\n    };\n  }\n\n  resource.cssClasses = ['bpp-checkbox'];\n  return resource;\n};\n\nmodule.exports = checkbox;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/factory/CheckboxEntryFactory.js"],"names":["getBusinessObject","require","cmdHelper","entryFieldDescription","checkbox","options","defaultParameters","resource","label","id","canBeDisabled","disabled","canBeHidden","hidden","description","html","modelProperty","get","element","bo","res","set","values","updateProperties","isDisabled","apply","arguments","isHidden","cssClasses","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    cmdHelper = require('../helper/CmdHelper');\n\nvar entryFieldDescription = require('./EntryFieldDescription');\n\n\nvar checkbox = function(options, defaultParameters) {\n  var resource = defaultParameters,\n      label = options.label || resource.id,\n      canBeDisabled = !!options.disabled && typeof options.disabled === 'function',\n      canBeHidden = !!options.hidden && typeof options.hidden === 'function',\n      description = options.description;\n\n  resource.html =\n    '<input id=\"camunda-' + resource.id + '\" ' +\n         'type=\"checkbox\" ' +\n         'name=\"' + options.modelProperty + '\" ' +\n         (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') +\n         (canBeHidden ? 'data-show=\"isHidden\"' : '') +\n         ' />' +\n    '<label for=\"camunda-' + resource.id + '\" ' +\n         (canBeDisabled ? 'data-disable=\"isDisabled\"' : '') +\n         (canBeHidden ? 'data-show=\"isHidden\"' : '') +\n         '>' + label + '</label>';\n\n  // add description below checkbox entry field\n  if (description) {\n    resource.html += entryFieldDescription(description);\n  }\n\n  resource.get = function(element) {\n    var bo = getBusinessObject(element),\n        res = {};\n\n    res[options.modelProperty] = bo.get(options.modelProperty);\n\n    return res;\n  };\n\n  resource.set = function(element, values) {\n    var res = {};\n\n    res[options.modelProperty] = !!values[options.modelProperty];\n\n    return cmdHelper.updateProperties(element, res);\n  };\n\n  if (typeof options.set === 'function') {\n    resource.set = options.set;\n  }\n\n  if (typeof options.get === 'function') {\n    resource.get = options.get;\n  }\n\n  if (canBeDisabled) {\n    resource.isDisabled = function() {\n      return options.disabled.apply(resource, arguments);\n    };\n  }\n\n  if (canBeHidden) {\n    resource.isHidden = function() {\n      return !options.hidden.apply(resource, arguments);\n    };\n  }\n\n  resource.cssClasses = ['bpp-checkbox'];\n\n  return resource;\n};\n\nmodule.exports = checkbox;\n"]},"metadata":{},"sourceType":"script"}