{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vittorio\\\\Documents\\\\GitHub\\\\SPM2021-MTV\\\\frontend\\\\src\\\\components\\\\bpmn\\\\bpmn.modeler.component.jsx\";\nimport React, { Component } from 'react';\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\nimport 'bpmn-js/dist/assets/diagram-js.css';\nimport 'bpmn-font/dist/css/bpmn-embedded.css';\nimport { emptyBpmn } from '../../assets/empty.bpmn';\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\nimport \"./bpmn.scss\";\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\nimport { ExternalLink } from 'react-external-link';\nimport { getCurrentUser } from '../util/APIUtils';\nimport $ from 'jquery'; // prova gatto\n\nimport resizeAllModule from '../../lib/resize-all-rules';\nimport colorPickerModule from '../../lib/color-picker';\nimport nyanDrawModule from '../../lib/nyan/draw';\nimport nyanPaletteModule from '../../lib/nyan/palette';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BpmnModelerComponent extends Component {\n  constructor(_props) {\n    // console.log('props.bpmnString', props.bpmnString)\n    super(_props);\n    this.modeler = null;\n    this.listaNomi = [];\n\n    this.componentDidMount = () => {\n      this.modeler = new BpmnModeler({\n        container: '#bpmnview',\n        keyboard: {\n          bindTo: window\n        },\n        propertiesPanel: {\n          parent: '#propview'\n        },\n        additionalModules: [propertiesPanelModule, propertiesProviderModule, // gatto\n        resizeAllModule, colorPickerModule, nyanDrawModule, nyanPaletteModule],\n        moddleExtensions: {\n          camunda: camundaModdleDescriptor\n        }\n      });\n      this.newBpmnDiagram();\n      this.loadCurrentlyLoggedInUser();\n    };\n\n    this.newBpmnDiagram = () => {\n      this.state.bpmn ? this.openBpmnDiagram(this.state.bpmnString) : this.openBpmnDiagram(emptyBpmn);\n    };\n\n    this.openBpmnDiagram = xml => {\n      this.modeler.importXML(xml, error => {\n        if (error) {\n          return console.log('fail import xml');\n        }\n\n        var canvas = this.modeler.get('canvas');\n        canvas.zoom('fit-viewport');\n      });\n    };\n\n    this.saveDiagram = done => {\n      this.modeler.saveXML({\n        format: true\n      }, function (err, xml) {\n        done(err, xml);\n      });\n    };\n\n    this.Validate = props => {\n      const name = this.getParameter();\n      this.saveDiagram(function (err, xml) {\n        const formData = new FormData();\n        const imgBlob = new Blob([xml], {\n          type: 'xml'\n        });\n        formData.append(\"file\", imgBlob, name);\n        formData.append(\"id\", props.id);\n        $.ajax({\n          method: 'POST',\n          url: \"http://localhost:8081/upload\",\n          data: formData,\n          processData: false,\n          contentType: false\n        }).done(function (result) {\n          // do something with the result now\n          console.log(result);\n        }).fail(function (a, b, c) {\n          alert(\"error\");\n        });\n      });\n    };\n\n    this.Download = () => {\n      this.modeler.saveXML({\n        format: true\n      }, function (err, xml) {\n        if (err) {\n          console.error(err);\n        } else {\n          var encodedData = err ? '' : encodeURIComponent(xml);\n          window.location.href = 'data:application/bpmn20-xml;charset=UTF-8,' + encodedData;\n        }\n      });\n    };\n\n    this.getParameter = () => {\n      const canvas = this.modeler.get('canvas');\n      const rootElement = canvas.getRootElement();\n      console.log('Process Id:', rootElement.id);\n      rootElement.businessObject.participants.map((item, index) => {\n        this.listaNomi[index] = item.processRef.id; // return console.log('item', this.listaNomi[index]);\n      });\n      const formData = new FormData();\n      formData.append('nameList', this.listaNomi);\n      var xhr = new XMLHttpRequest(); //xhr.open('POST', 'http://localhost:8081/uploadNames');\n      //xhr.onload = function (e) {\n      //    console.log(\"xhr onload function\");\n      //};\n      //xhr.send(formData);\n\n      return rootElement.id;\n    };\n\n    this.render = () => {\n      // console.log(\"this.state.currentUser\", this.state.currentUser);\n      // console.log('-> bpmnString: ', this.state.bpmnString)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bpmncontainer\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"propview\",\n          style: {\n            width: '25%',\n            height: '100%',\n            float: 'right',\n            maxHeight: '100%',\n            overflowX: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bpmnview\",\n          style: {\n            width: '75%',\n            height: '100%',\n            float: 'left'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modelerBPMN\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downloadButton\",\n            onClick: () => {\n              this.Validate(this.state.currentUser);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"http://localhost:8081/camunda/app/tasklist/\",\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"validateButton\",\n              onClick: () => {\n                this.Validate(this.state.currentUser);\n              },\n              children: \"Validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 103\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downloadButton\",\n            onClick: () => {\n              this.Download();\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      currentUser: null,\n      bpmn: _props.xml,\n      bpmnString: _props.bpmnString\n    };\n    this.loadCurrentlyLoggedInUser = this.loadCurrentlyLoggedInUser.bind(this);\n  }\n\n  loadCurrentlyLoggedInUser() {\n    getCurrentUser().then(response => {\n      this.setState({\n        currentUser: response\n      });\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }\n\n}\n\nexport default BpmnModelerComponent;","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/src/components/bpmn/bpmn.modeler.component.jsx"],"names":["React","Component","BpmnModeler","emptyBpmn","propertiesPanelModule","propertiesProviderModule","camundaModdleDescriptor","is","ExternalLink","getCurrentUser","$","resizeAllModule","colorPickerModule","nyanDrawModule","nyanPaletteModule","BpmnModelerComponent","constructor","props","modeler","listaNomi","componentDidMount","container","keyboard","bindTo","window","propertiesPanel","parent","additionalModules","moddleExtensions","camunda","newBpmnDiagram","loadCurrentlyLoggedInUser","state","bpmn","openBpmnDiagram","bpmnString","xml","importXML","error","console","log","canvas","get","zoom","saveDiagram","done","saveXML","format","err","Validate","name","getParameter","formData","FormData","imgBlob","Blob","type","append","id","ajax","method","url","data","processData","contentType","result","fail","a","b","c","alert","Download","encodedData","encodeURIComponent","location","href","rootElement","getRootElement","businessObject","participants","map","item","index","processRef","xhr","XMLHttpRequest","render","width","height","float","maxHeight","overflowX","currentUser","bind","then","response","setState","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport 'bpmn-js/dist/assets/diagram-js.css';\r\nimport 'bpmn-font/dist/css/bpmn-embedded.css';\r\nimport { emptyBpmn } from '../../assets/empty.bpmn';\r\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\r\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\r\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\r\nimport \"./bpmn.scss\";\r\nimport { is } from 'bpmn-js/lib/util/ModelUtil';\r\nimport { ExternalLink } from 'react-external-link';\r\nimport { getCurrentUser } from '../util/APIUtils';\r\nimport $ from 'jquery';\r\n\r\n// prova gatto\r\nimport resizeAllModule from '../../lib/resize-all-rules';\r\nimport colorPickerModule from '../../lib/color-picker';\r\nimport nyanDrawModule from '../../lib/nyan/draw';\r\nimport nyanPaletteModule from '../../lib/nyan/palette';\r\n\r\nclass BpmnModelerComponent extends Component {\r\n\r\n    modeler = null;\r\n\r\n    listaNomi = [];\r\n\r\n    constructor(props) {\r\n        // console.log('props.bpmnString', props.bpmnString)\r\n        super(props);\r\n        this.state = { currentUser: null, bpmn: props.xml, bpmnString: props.bpmnString }\r\n        this.loadCurrentlyLoggedInUser = this.loadCurrentlyLoggedInUser.bind(this);\r\n    }\r\n\r\n\r\n    loadCurrentlyLoggedInUser() {\r\n        getCurrentUser()\r\n            .then(response => {\r\n                this.setState({\r\n                    currentUser: response,\r\n                });\r\n            }).catch(error => {\r\n                console.log(\"error\", error);\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.modeler = new BpmnModeler({\r\n            container: '#bpmnview',\r\n            keyboard: {\r\n                bindTo: window\r\n            },\r\n            propertiesPanel: {\r\n                parent: '#propview'\r\n            },\r\n            additionalModules: [\r\n                propertiesPanelModule,\r\n                propertiesProviderModule,\r\n\r\n                // gatto\r\n                resizeAllModule,\r\n                colorPickerModule,\r\n                nyanDrawModule,\r\n                nyanPaletteModule\r\n            ],\r\n            moddleExtensions: {\r\n                camunda: camundaModdleDescriptor\r\n            }\r\n        });\r\n\r\n        this.newBpmnDiagram();\r\n        this.loadCurrentlyLoggedInUser();\r\n\r\n    }\r\n\r\n    newBpmnDiagram = () => {\r\n        this.state.bpmn\r\n            ? this.openBpmnDiagram(this.state.bpmnString)\r\n            : this.openBpmnDiagram(emptyBpmn)\r\n    }\r\n\r\n    openBpmnDiagram = (xml) => {\r\n        this.modeler.importXML(xml, (error) => {\r\n            if (error) {\r\n                return console.log('fail import xml');\r\n            }\r\n\r\n            var canvas = this.modeler.get('canvas');\r\n\r\n            canvas.zoom('fit-viewport');\r\n        });\r\n    }\r\n\r\n    saveDiagram = (done) => {\r\n\r\n        this.modeler.saveXML({ format: true }, function (err, xml) {\r\n            done(err, xml);\r\n        });\r\n    }\r\n    Validate = (props) => {\r\n        const name = this.getParameter();\r\n        this.saveDiagram(function (err, xml) {\r\n            const formData = new FormData();\r\n\r\n            const imgBlob = new Blob([xml], { type: 'xml' });\r\n            formData.append(\r\n                \"file\",\r\n                imgBlob,\r\n                name\r\n            );\r\n            formData.append(\"id\", props.id);\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: \"http://localhost:8081/upload\",\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false\r\n            }).done(function (result) {\r\n                // do something with the result now\r\n\r\n                console.log(result);\r\n            }).fail(function (a, b, c) {\r\n                alert(\"error\");\r\n            });\r\n        });\r\n    }\r\n\r\n    Download = () => {\r\n        this.modeler.saveXML({ format: true }, function (err, xml) {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                var encodedData = err ? '' : encodeURIComponent(xml);\r\n                window.location.href = 'data:application/bpmn20-xml;charset=UTF-8,' + encodedData;\r\n            }\r\n        });\r\n    }\r\n\r\n    getParameter = () => {\r\n\r\n        const canvas = this.modeler.get('canvas');\r\n\r\n        const rootElement = canvas.getRootElement();\r\n\r\n        console.log('Process Id:', rootElement.id);\r\n        rootElement.businessObject.participants.map((item, index) => {\r\n            this.listaNomi[index] = item.processRef.id\r\n            // return console.log('item', this.listaNomi[index]);\r\n        })\r\n\r\n\r\n        const formData = new FormData();\r\n        formData.append('nameList', this.listaNomi);\r\n        var xhr = new XMLHttpRequest();\r\n        //xhr.open('POST', 'http://localhost:8081/uploadNames');\r\n        //xhr.onload = function (e) {\r\n        //    console.log(\"xhr onload function\");\r\n        //};\r\n        //xhr.send(formData);\r\n        return rootElement.id;\r\n    }\r\n\r\n    render = () => {\r\n        // console.log(\"this.state.currentUser\", this.state.currentUser);\r\n        // console.log('-> bpmnString: ', this.state.bpmnString)\r\n\r\n        return (\r\n            <div id=\"bpmncontainer\" style={{ width: '100%', height: '100%' }} >\r\n                <div id=\"propview\" style={{ width: '25%', height: '100%', float: 'right', maxHeight: '100%', overflowX: 'auto' }}></div>\r\n                <div id=\"bpmnview\" style={{ width: '75%', height: '100%', float: 'left' }}></div>\r\n                <div className=\"modelerBPMN\">\r\n                    <button className=\"downloadButton\" onClick={() => { this.Validate(this.state.currentUser) }}>Save</button>\r\n                    <ExternalLink href=\"http://localhost:8081/camunda/app/tasklist/\" className=\"link\"><button className=\"validateButton\" onClick={() => { this.Validate(this.state.currentUser) }}>Validate</button></ExternalLink>\r\n                    <button className=\"downloadButton\" onClick={() => { this.Download() }}>Download</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BpmnModelerComponent;\r\n"]},"metadata":{},"sourceType":"module"}