{"ast":null,"code":"import { is } from 'bpmn-js/lib/util/ModelUtil';\n/**\r\n * A basic color picker implementation.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ContextPad} contextPad\r\n * @param {CommandStack} commandStack\r\n */\n\nexport default function ColorPicker(eventBus, contextPad, commandStack) {\n  contextPad.registerProvider(this);\n  commandStack.registerHandler('shape.updateColor', UpdateColorHandler);\n\n  function changeColor(event, element) {\n    var color = window.prompt('type a color code');\n    commandStack.execute('shape.updateColor', {\n      element: element,\n      color: color\n    });\n  }\n\n  this.getContextPadEntries = function (element) {\n    if (is(element, 'bpmn:Event')) {\n      return {\n        'changeColor': {\n          group: 'edit',\n          className: 'icon-red',\n          title: 'Change element color',\n          action: {\n            click: changeColor\n          }\n        }\n      };\n    }\n  };\n}\n/**\r\n * A handler updating an elements color.\r\n */\n\n_c = ColorPicker;\n\nfunction UpdateColorHandler() {\n  this.execute = function (context) {\n    context.oldColor = context.element.color;\n    context.element.color = context.color;\n    return context.element;\n  };\n\n  this.revert = function (context) {\n    context.element.color = context.oldColor;\n    return context.element;\n  };\n}\n\n_c2 = UpdateColorHandler;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorPicker\");\n$RefreshReg$(_c2, \"UpdateColorHandler\");","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/src/lib/color-picker/ColorPicker.js"],"names":["is","ColorPicker","eventBus","contextPad","commandStack","registerProvider","registerHandler","UpdateColorHandler","changeColor","event","element","color","window","prompt","execute","getContextPadEntries","group","className","title","action","click","context","oldColor","revert"],"mappings":"AAAA,SACEA,EADF,QAEO,4BAFP;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,UAA/B,EAA2CC,YAA3C,EAAyD;AAEtED,EAAAA,UAAU,CAACE,gBAAX,CAA4B,IAA5B;AAEAD,EAAAA,YAAY,CAACE,eAAb,CAA6B,mBAA7B,EAAkDC,kBAAlD;;AAEA,WAASC,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AAEnC,QAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,mBAAd,CAAZ;AAEAT,IAAAA,YAAY,CAACU,OAAb,CAAqB,mBAArB,EAA0C;AAAEJ,MAAAA,OAAO,EAAEA,OAAX;AAAoBC,MAAAA,KAAK,EAAEA;AAA3B,KAA1C;AACD;;AAGD,OAAKI,oBAAL,GAA4B,UAASL,OAAT,EAAkB;AAE5C,QAAIV,EAAE,CAACU,OAAD,EAAU,YAAV,CAAN,EAA+B;AAC7B,aAAO;AACL,uBAAe;AACbM,UAAAA,KAAK,EAAE,MADM;AAEbC,UAAAA,SAAS,EAAE,UAFE;AAGbC,UAAAA,KAAK,EAAE,sBAHM;AAIbC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAEZ;AADD;AAJK;AADV,OAAP;AAUD;AACF,GAdD;AAeD;AAID;AACA;AACA;;KAnCwBP,W;;AAoCxB,SAASM,kBAAT,GAA8B;AAE5B,OAAKO,OAAL,GAAe,UAASO,OAAT,EAAkB;AAC/BA,IAAAA,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACX,OAAR,CAAgBC,KAAnC;AACAU,IAAAA,OAAO,CAACX,OAAR,CAAgBC,KAAhB,GAAwBU,OAAO,CAACV,KAAhC;AAEA,WAAOU,OAAO,CAACX,OAAf;AACD,GALD;;AAOA,OAAKa,MAAL,GAAc,UAASF,OAAT,EAAkB;AAC9BA,IAAAA,OAAO,CAACX,OAAR,CAAgBC,KAAhB,GAAwBU,OAAO,CAACC,QAAhC;AAEA,WAAOD,OAAO,CAACX,OAAf;AACD,GAJD;AAMD;;MAfQH,kB","sourcesContent":["import {\r\n  is\r\n} from 'bpmn-js/lib/util/ModelUtil';\r\n\r\n\r\n/**\r\n * A basic color picker implementation.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ContextPad} contextPad\r\n * @param {CommandStack} commandStack\r\n */\r\nexport default function ColorPicker(eventBus, contextPad, commandStack) {\r\n\r\n  contextPad.registerProvider(this);\r\n\r\n  commandStack.registerHandler('shape.updateColor', UpdateColorHandler);\r\n\r\n  function changeColor(event, element) {\r\n\r\n    var color = window.prompt('type a color code');\r\n\r\n    commandStack.execute('shape.updateColor', { element: element, color: color });\r\n  }\r\n\r\n\r\n  this.getContextPadEntries = function(element) {\r\n\r\n    if (is(element, 'bpmn:Event')) {\r\n      return {\r\n        'changeColor': {\r\n          group: 'edit',\r\n          className: 'icon-red',\r\n          title: 'Change element color',\r\n          action: {\r\n            click: changeColor\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n/**\r\n * A handler updating an elements color.\r\n */\r\nfunction UpdateColorHandler() {\r\n\r\n  this.execute = function(context) {\r\n    context.oldColor = context.element.color;\r\n    context.element.color = context.color;\r\n\r\n    return context.element;\r\n  };\r\n\r\n  this.revert = function(context) {\r\n    context.element.color = context.oldColor;\r\n\r\n    return context.element;\r\n  };\r\n\r\n}"]},"metadata":{},"sourceType":"module"}