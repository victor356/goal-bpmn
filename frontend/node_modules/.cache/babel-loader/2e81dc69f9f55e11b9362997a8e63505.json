{"ast":null,"code":"'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    entryFactory = require('../../../factory/EntryFactory'),\n    participantHelper = require('../../../helper/ParticipantHelper'),\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    nameEntryFactory = require('./implementation/Name'),\n    utils = require('../../../Utils');\n\nmodule.exports = function (group, element, translate, options) {\n  var businessObject = getBusinessObject(element);\n  var processIdDescription = options && options.processIdDescription;\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && businessObject.get('processRef')) {\n    /**\n     * processId\n     */\n    if (is(element, 'bpmn:Participant')) {\n      var idEntry = entryFactory.validationAwareTextField({\n        id: 'process-id',\n        label: translate('Process Id'),\n        description: processIdDescription && translate(processIdDescription),\n        modelProperty: 'processId'\n      }); // in participants we have to change the default behavior of set and get\n\n      idEntry.get = function (element) {\n        var properties = participantHelper.getProcessBusinessObject(element, 'id');\n        return {\n          processId: properties.id\n        };\n      };\n\n      idEntry.set = function (element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'id', {\n          id: values.processId\n        });\n      };\n\n      idEntry.validate = function (element, values) {\n        var idValue = values.processId;\n        var bo = getBusinessObject(element);\n        var processIdError = utils.isIdValid(bo.processRef, idValue);\n        return processIdError ? {\n          processId: processIdError\n        } : {};\n      };\n\n      group.entries.push(idEntry);\n      /**\n       * process name\n       */\n\n      var processNameEntry = nameEntryFactory(element, {\n        id: 'process-name',\n        label: translate('Process Name')\n      })[0]; // in participants we have to change the default behavior of set and get\n\n      processNameEntry.get = function (element) {\n        return participantHelper.getProcessBusinessObject(element, 'name');\n      };\n\n      processNameEntry.set = function (element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'name', values);\n      };\n\n      group.entries.push(processNameEntry);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/bpmn/parts/ProcessProps.js"],"names":["is","require","entryFactory","participantHelper","getBusinessObject","nameEntryFactory","utils","module","exports","group","element","translate","options","businessObject","processIdDescription","get","idEntry","validationAwareTextField","id","label","description","modelProperty","properties","getProcessBusinessObject","processId","set","values","modifyProcessBusinessObject","validate","idValue","bo","processIdError","isIdValid","processRef","entries","push","processNameEntry"],"mappings":"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","sourcesContent":["'use strict';\n\nvar is = require('bpmn-js/lib/util/ModelUtil').is,\n    entryFactory = require('../../../factory/EntryFactory'),\n    participantHelper = require('../../../helper/ParticipantHelper'),\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    nameEntryFactory = require('./implementation/Name'),\n    utils = require('../../../Utils');\n\nmodule.exports = function(group, element, translate, options) {\n  var businessObject = getBusinessObject(element);\n\n  var processIdDescription = options && options.processIdDescription;\n\n  if (is(element, 'bpmn:Process') || (is(element, 'bpmn:Participant') && businessObject.get('processRef'))) {\n\n    /**\n     * processId\n     */\n    if (is(element, 'bpmn:Participant')) {\n      var idEntry = entryFactory.validationAwareTextField({\n        id: 'process-id',\n        label: translate('Process Id'),\n        description: processIdDescription && translate(processIdDescription),\n        modelProperty: 'processId'\n      });\n\n      // in participants we have to change the default behavior of set and get\n      idEntry.get = function(element) {\n        var properties = participantHelper.getProcessBusinessObject(element, 'id');\n        return { processId: properties.id };\n      };\n\n      idEntry.set = function(element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'id', { id: values.processId });\n      };\n\n      idEntry.validate = function(element, values) {\n        var idValue = values.processId;\n\n        var bo = getBusinessObject(element);\n\n        var processIdError = utils.isIdValid(bo.processRef, idValue);\n\n        return processIdError ? { processId: processIdError } : {};\n      };\n\n      group.entries.push(idEntry);\n\n\n      /**\n       * process name\n       */\n      var processNameEntry = nameEntryFactory(element, {\n        id: 'process-name',\n        label: translate('Process Name')\n      })[0];\n\n      // in participants we have to change the default behavior of set and get\n      processNameEntry.get = function(element) {\n        return participantHelper.getProcessBusinessObject(element, 'name');\n      };\n\n      processNameEntry.set = function(element, values) {\n        return participantHelper.modifyProcessBusinessObject(element, 'name', values);\n      };\n\n      group.entries.push(processNameEntry);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}