{"ast":null,"code":"import { getMid } from './LayoutUtil';\n/**\n * A base connection layouter implementation\n * that layouts the connection by directly connecting\n * mid(source) + mid(target).\n */\n\nexport default function BaseLayouter() {}\n/**\n * Return the new layouted waypoints for the given connection.\n *\n * The connection passed is still unchanged; you may figure out about\n * the new connection start / end via the layout hints provided.\n *\n * @param {djs.model.Connection} connection\n * @param {Object} [hints]\n * @param {Point} [hints.connectionStart]\n * @param {Point} [hints.connectionEnd]\n *\n * @return {Array<Point>} the layouted connection waypoints\n */\n\nBaseLayouter.prototype.layoutConnection = function (connection, hints) {\n  hints = hints || {};\n  return [hints.connectionStart || getMid(connection.source), hints.connectionEnd || getMid(connection.target)];\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/diagram-js/lib/layout/BaseLayouter.js"],"names":["getMid","BaseLayouter","prototype","layoutConnection","connection","hints","connectionStart","source","connectionEnd","target"],"mappings":"AAAA,SACEA,MADF,QAEO,cAFP;AAKA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,GAAwB,CAAE;AAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,YAAY,CAACC,SAAb,CAAuBC,gBAAvB,GAA0C,UAASC,UAAT,EAAqBC,KAArB,EAA4B;AAEpEA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,SAAO,CACLA,KAAK,CAACC,eAAN,IAAyBN,MAAM,CAACI,UAAU,CAACG,MAAZ,CAD1B,EAELF,KAAK,CAACG,aAAN,IAAuBR,MAAM,CAACI,UAAU,CAACK,MAAZ,CAFxB,CAAP;AAID,CARD","sourcesContent":["import {\n  getMid\n} from './LayoutUtil';\n\n\n/**\n * A base connection layouter implementation\n * that layouts the connection by directly connecting\n * mid(source) + mid(target).\n */\nexport default function BaseLayouter() {}\n\n\n/**\n * Return the new layouted waypoints for the given connection.\n *\n * The connection passed is still unchanged; you may figure out about\n * the new connection start / end via the layout hints provided.\n *\n * @param {djs.model.Connection} connection\n * @param {Object} [hints]\n * @param {Point} [hints.connectionStart]\n * @param {Point} [hints.connectionEnd]\n *\n * @return {Array<Point>} the layouted connection waypoints\n */\nBaseLayouter.prototype.layoutConnection = function(connection, hints) {\n\n  hints = hints || {};\n\n  return [\n    hints.connectionStart || getMid(connection.source),\n    hints.connectionEnd || getMid(connection.target)\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}