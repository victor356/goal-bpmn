{"ast":null,"code":"import { add as collectionAdd, indexOf as collectionIdx } from '../../../util/Collections';\n/**\n * A handler that implements reversible deletion of Connections.\n */\n\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nDeleteConnectionHandler.$inject = ['canvas', 'modeling'];\n\nDeleteConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n      parent = connection.parent;\n  context.parent = parent; // remember containment\n\n  context.parentIndex = collectionIdx(parent.children, connection);\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n  return connection;\n};\n/**\n * Command revert implementation.\n */\n\n\nDeleteConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n  connection.source = context.source;\n  connection.target = context.target; // restore containment\n\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js"],"names":["add","collectionAdd","indexOf","collectionIdx","DeleteConnectionHandler","canvas","modeling","_canvas","_modeling","$inject","prototype","execute","context","connection","parent","parentIndex","children","source","target","removeConnection","revert","addConnection"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aADT,EAEEC,OAAO,IAAIC,aAFb,QAGO,2BAHP;AAMA;AACA;AACA;;AACA,eAAe,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,QAAzC,EAAmD;AAChE,OAAKC,OAAL,GAAeF,MAAf;AACA,OAAKG,SAAL,GAAiBF,QAAjB;AACD;AAEDF,uBAAuB,CAACK,OAAxB,GAAkC,CAChC,QADgC,EAEhC,UAFgC,CAAlC;;AAMAL,uBAAuB,CAACM,SAAxB,CAAkCC,OAAlC,GAA4C,UAASC,OAAT,EAAkB;AAE5D,MAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,MACIC,MAAM,GAAGD,UAAU,CAACC,MADxB;AAGAF,EAAAA,OAAO,CAACE,MAAR,GAAiBA,MAAjB,CAL4D,CAO5D;;AACAF,EAAAA,OAAO,CAACG,WAAR,GAAsBZ,aAAa,CAACW,MAAM,CAACE,QAAR,EAAkBH,UAAlB,CAAnC;AAEAD,EAAAA,OAAO,CAACK,MAAR,GAAiBJ,UAAU,CAACI,MAA5B;AACAL,EAAAA,OAAO,CAACM,MAAR,GAAiBL,UAAU,CAACK,MAA5B;;AAEA,OAAKX,OAAL,CAAaY,gBAAb,CAA8BN,UAA9B;;AAEAA,EAAAA,UAAU,CAACI,MAAX,GAAoB,IAApB;AACAJ,EAAAA,UAAU,CAACK,MAAX,GAAoB,IAApB;AAEA,SAAOL,UAAP;AACD,CAnBD;AAqBA;AACA;AACA;;;AACAT,uBAAuB,CAACM,SAAxB,CAAkCU,MAAlC,GAA2C,UAASR,OAAT,EAAkB;AAE3D,MAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,MACIC,MAAM,GAAGF,OAAO,CAACE,MADrB;AAAA,MAEIC,WAAW,GAAGH,OAAO,CAACG,WAF1B;AAIAF,EAAAA,UAAU,CAACI,MAAX,GAAoBL,OAAO,CAACK,MAA5B;AACAJ,EAAAA,UAAU,CAACK,MAAX,GAAoBN,OAAO,CAACM,MAA5B,CAP2D,CAS3D;;AACAjB,EAAAA,aAAa,CAACa,MAAM,CAACE,QAAR,EAAkBH,UAAlB,EAA8BE,WAA9B,CAAb;;AAEA,OAAKR,OAAL,CAAac,aAAb,CAA2BR,UAA3B,EAAuCC,MAAvC;;AAEA,SAAOD,UAAP;AACD,CAfD","sourcesContent":["import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteConnectionHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\nDeleteConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      parent = connection.parent;\n\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};\n"]},"metadata":{},"sourceType":"module"}