{"ast":null,"code":"'use strict';\n\nvar DEFAULT_PRIORITY = 1000;\n/**\n * A component that decides upon the visibility / editable\n * state of properties in the properties panel.\n *\n * Implementors must subclass this component and override\n * {@link PropertiesActivator#isEntryVisible} and\n * {@link PropertiesActivator#isPropertyEditable} to provide\n * custom behavior.\n *\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Number} [priority] at which priority to hook into the activation\n */\n\nfunction PropertiesActivator(eventBus, priority) {\n  var self = this;\n  priority = priority || DEFAULT_PRIORITY;\n  eventBus.on('propertiesPanel.isEntryVisible', priority, function (e) {\n    return self.isEntryVisible(e.entry, e.element);\n  });\n  eventBus.on('propertiesPanel.isPropertyEditable', priority, function (e) {\n    return self.isPropertyEditable(e.entry, e.propertyName, e.element);\n  });\n}\n\nPropertiesActivator.$inject = ['eventBus'];\nmodule.exports = PropertiesActivator;\n/**\n * Should the given entry be visible for the specified element.\n *\n * @method  PropertiesActivator#isEntryVisible\n *\n * @param {EntryDescriptor} entry\n * @param {ModdleElement} element\n *\n * @returns {Boolean}\n */\n\nPropertiesActivator.prototype.isEntryVisible = function (entry, element) {\n  return true;\n};\n/**\n * Should the given property be editable for the specified element\n *\n * @method  PropertiesActivator#isPropertyEditable\n *\n * @param {EntryDescriptor} entry\n * @param {String} propertyName\n * @param {ModdleElement} element\n *\n * @returns {Boolean}\n */\n\n\nPropertiesActivator.prototype.isPropertyEditable = function (entry, propertyName, element) {\n  return true;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/PropertiesActivator.js"],"names":["DEFAULT_PRIORITY","PropertiesActivator","eventBus","priority","self","on","e","isEntryVisible","entry","element","isPropertyEditable","propertyName","$inject","module","exports","prototype"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAG,IAAvB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,QAAvC,EAAiD;AAC/C,MAAIC,IAAI,GAAG,IAAX;AAEAD,EAAAA,QAAQ,GAAGA,QAAQ,IAAIH,gBAAvB;AAEAE,EAAAA,QAAQ,CAACG,EAAT,CAAY,gCAAZ,EAA8CF,QAA9C,EAAwD,UAASG,CAAT,EAAY;AAClE,WAAOF,IAAI,CAACG,cAAL,CAAoBD,CAAC,CAACE,KAAtB,EAA6BF,CAAC,CAACG,OAA/B,CAAP;AACD,GAFD;AAIAP,EAAAA,QAAQ,CAACG,EAAT,CAAY,oCAAZ,EAAkDF,QAAlD,EAA4D,UAASG,CAAT,EAAY;AACtE,WAAOF,IAAI,CAACM,kBAAL,CAAwBJ,CAAC,CAACE,KAA1B,EAAiCF,CAAC,CAACK,YAAnC,EAAiDL,CAAC,CAACG,OAAnD,CAAP;AACD,GAFD;AAGD;;AAEDR,mBAAmB,CAACW,OAApB,GAA8B,CAAE,UAAF,CAA9B;AAEAC,MAAM,CAACC,OAAP,GAAiBb,mBAAjB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,mBAAmB,CAACc,SAApB,CAA8BR,cAA9B,GAA+C,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACtE,SAAO,IAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,mBAAmB,CAACc,SAApB,CAA8BL,kBAA9B,GAAmD,UAASF,KAAT,EAAgBG,YAAhB,EAA8BF,OAA9B,EAAuC;AACxF,SAAO,IAAP;AACD,CAFD","sourcesContent":["'use strict';\n\nvar DEFAULT_PRIORITY = 1000;\n\n\n/**\n * A component that decides upon the visibility / editable\n * state of properties in the properties panel.\n *\n * Implementors must subclass this component and override\n * {@link PropertiesActivator#isEntryVisible} and\n * {@link PropertiesActivator#isPropertyEditable} to provide\n * custom behavior.\n *\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Number} [priority] at which priority to hook into the activation\n */\nfunction PropertiesActivator(eventBus, priority) {\n  var self = this;\n\n  priority = priority || DEFAULT_PRIORITY;\n\n  eventBus.on('propertiesPanel.isEntryVisible', priority, function(e) {\n    return self.isEntryVisible(e.entry, e.element);\n  });\n\n  eventBus.on('propertiesPanel.isPropertyEditable', priority, function(e) {\n    return self.isPropertyEditable(e.entry, e.propertyName, e.element);\n  });\n}\n\nPropertiesActivator.$inject = [ 'eventBus' ];\n\nmodule.exports = PropertiesActivator;\n\n\n/**\n * Should the given entry be visible for the specified element.\n *\n * @method  PropertiesActivator#isEntryVisible\n *\n * @param {EntryDescriptor} entry\n * @param {ModdleElement} element\n *\n * @returns {Boolean}\n */\nPropertiesActivator.prototype.isEntryVisible = function(entry, element) {\n  return true;\n};\n\n/**\n * Should the given property be editable for the specified element\n *\n * @method  PropertiesActivator#isPropertyEditable\n *\n * @param {EntryDescriptor} entry\n * @param {String} propertyName\n * @param {ModdleElement} element\n *\n * @returns {Boolean}\n */\nPropertiesActivator.prototype.isPropertyEditable = function(entry, propertyName, element) {\n  return true;\n};"]},"metadata":{},"sourceType":"script"}