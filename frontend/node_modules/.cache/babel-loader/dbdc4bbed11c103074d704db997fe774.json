{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getBusinessObject, is } from '../../../util/ModelUtil';\nimport { computeChildrenBBox } from 'diagram-js/lib/features/resize/ResizeUtil';\nvar LOW_PRIORITY = 500;\nexport default function ToggleElementCollapseBehaviour(eventBus, elementFactory, modeling, resize) {\n  CommandInterceptor.call(this, eventBus);\n\n  function hideEmptyLables(children) {\n    if (children.length) {\n      children.forEach(function (child) {\n        if (child.type === 'label' && !child.businessObject.name) {\n          child.hidden = true;\n        }\n      });\n    }\n  }\n\n  function expandedBounds(shape, defaultSize) {\n    var children = shape.children,\n        newBounds = defaultSize,\n        visibleElements,\n        visibleBBox;\n    visibleElements = filterVisible(children).concat([shape]);\n    visibleBBox = computeChildrenBBox(visibleElements);\n\n    if (visibleBBox) {\n      // center to visibleBBox with max(defaultSize, childrenBounds)\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\n    } else {\n      // center to collapsed shape with defaultSize\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\n    }\n\n    return newBounds;\n  }\n\n  function collapsedBounds(shape, defaultSize) {\n    return {\n      x: shape.x + (shape.width - defaultSize.width) / 2,\n      y: shape.y + (shape.height - defaultSize.height) / 2,\n      width: defaultSize.width,\n      height: defaultSize.height\n    };\n  }\n\n  this.executed(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var context = e.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!shape.collapsed) {\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLables(shape.children); // remove collapsed marker\n\n      getBusinessObject(shape).di.isExpanded = true;\n    } else {\n      // place collapsed marker\n      getBusinessObject(shape).di.isExpanded = false;\n    }\n  });\n  this.reverted(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var context = e.context;\n    var shape = context.shape; // revert removing/placing collapsed marker\n\n    if (!shape.collapsed) {\n      getBusinessObject(shape).di.isExpanded = true;\n    } else {\n      getBusinessObject(shape).di.isExpanded = false;\n    }\n  });\n  this.postExecuted(['shape.toggleCollapse'], LOW_PRIORITY, function (e) {\n    var shape = e.context.shape,\n        defaultSize = elementFactory._getDefaultSize(shape),\n        newBounds;\n\n    if (shape.collapsed) {\n      // resize to default size of collapsed shapes\n      newBounds = collapsedBounds(shape, defaultSize);\n    } else {\n      // resize to bounds of max(visible children, defaultSize)\n      newBounds = expandedBounds(shape, defaultSize);\n    }\n\n    modeling.resizeShape(shape, newBounds);\n  });\n}\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\nToggleElementCollapseBehaviour.$inject = ['eventBus', 'elementFactory', 'modeling']; // helpers //////////////////////\n\nfunction filterVisible(elements) {\n  return elements.filter(function (e) {\n    return !e.hidden;\n  });\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js/lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js"],"names":["inherits","CommandInterceptor","getBusinessObject","is","computeChildrenBBox","LOW_PRIORITY","ToggleElementCollapseBehaviour","eventBus","elementFactory","modeling","resize","call","hideEmptyLables","children","length","forEach","child","type","businessObject","name","hidden","expandedBounds","shape","defaultSize","newBounds","visibleElements","visibleBBox","filterVisible","concat","width","Math","max","height","x","y","collapsedBounds","executed","e","context","collapsed","di","isExpanded","reverted","postExecuted","_getDefaultSize","resizeShape","$inject","elements","filter"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  computeChildrenBBox\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\n\nvar LOW_PRIORITY = 500;\n\n\nexport default function ToggleElementCollapseBehaviour(\n    eventBus, elementFactory, modeling,\n    resize) {\n\n  CommandInterceptor.call(this, eventBus);\n\n\n  function hideEmptyLables(children) {\n    if (children.length) {\n      children.forEach(function(child) {\n        if (child.type === 'label' && !child.businessObject.name) {\n          child.hidden = true;\n        }\n      });\n    }\n  }\n\n  function expandedBounds(shape, defaultSize) {\n    var children = shape.children,\n        newBounds = defaultSize,\n        visibleElements,\n        visibleBBox;\n\n    visibleElements = filterVisible(children).concat([ shape ]);\n\n    visibleBBox = computeChildrenBBox(visibleElements);\n\n    if (visibleBBox) {\n      // center to visibleBBox with max(defaultSize, childrenBounds)\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\n\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\n    } else {\n      // center to collapsed shape with defaultSize\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\n    }\n\n    return newBounds;\n  }\n\n  function collapsedBounds(shape, defaultSize) {\n\n    return {\n      x: shape.x + (shape.width - defaultSize.width) / 2,\n      y: shape.y + (shape.height - defaultSize.height) / 2,\n      width: defaultSize.width,\n      height: defaultSize.height\n    };\n  }\n\n  this.executed([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shape = context.shape;\n\n    if (!is(shape, 'bpmn:SubProcess')) {\n      return;\n    }\n\n    if (!shape.collapsed) {\n      // all children got made visible through djs, hide empty labels\n      hideEmptyLables(shape.children);\n\n      // remove collapsed marker\n      getBusinessObject(shape).di.isExpanded = true;\n    } else {\n      // place collapsed marker\n      getBusinessObject(shape).di.isExpanded = false;\n    }\n  });\n\n  this.reverted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n\n    var context = e.context;\n    var shape = context.shape;\n\n\n    // revert removing/placing collapsed marker\n    if (!shape.collapsed) {\n      getBusinessObject(shape).di.isExpanded = true;\n\n    } else {\n      getBusinessObject(shape).di.isExpanded = false;\n    }\n  });\n\n  this.postExecuted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\n    var shape = e.context.shape,\n        defaultSize = elementFactory._getDefaultSize(shape),\n        newBounds;\n\n    if (shape.collapsed) {\n\n      // resize to default size of collapsed shapes\n      newBounds = collapsedBounds(shape, defaultSize);\n    } else {\n\n      // resize to bounds of max(visible children, defaultSize)\n      newBounds = expandedBounds(shape, defaultSize);\n    }\n\n    modeling.resizeShape(shape, newBounds);\n  });\n\n}\n\n\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\n\nToggleElementCollapseBehaviour.$inject = [\n  'eventBus',\n  'elementFactory',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction filterVisible(elements) {\n  return elements.filter(function(e) {\n    return !e.hidden;\n  });\n}"]},"metadata":{},"sourceType":"module"}