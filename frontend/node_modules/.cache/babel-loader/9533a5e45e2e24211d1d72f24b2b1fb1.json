{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar factory = require('../../../../factory/EntryFactory');\n\nvar elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper'),\n    utils = require('../../../../Utils');\n\nvar assign = require('lodash/assign'),\n    forEach = require('lodash/forEach'),\n    find = require('lodash/find');\n\nfunction generatePropertyId() {\n  return utils.nextId('Property_');\n}\n/**\n * Get all camunda:property objects for a specific business object\n *\n * @param  {ModdleElement} parent\n *\n * @return {Array<ModdleElement>} a list of camunda:property objects\n */\n\n\nfunction getPropertyValues(parent) {\n  var properties = parent && getPropertiesElement(parent);\n\n  if (properties && properties.values) {\n    return properties.values;\n  }\n\n  return [];\n}\n/**\n * Get all camunda:Properties object for a specific business object\n *\n * @param  {ModdleElement} parent\n *\n * @return {ModdleElement} a camunda:Properties object\n */\n\n\nfunction getPropertiesElement(element) {\n  if (!isExtensionElements(element)) {\n    return element.properties;\n  } else {\n    return getPropertiesElementInsideExtensionElements(element);\n  }\n}\n/**\n * Get first camunda:Properties object for a specific bpmn:ExtensionElements\n * business object.\n *\n * @param {ModdleElement} extensionElements\n *\n * @return {ModdleElement} a camunda:Properties object\n */\n\n\nfunction getPropertiesElementInsideExtensionElements(extensionElements) {\n  return find(extensionElements.values, function (elem) {\n    return is(elem, 'camunda:Properties');\n  });\n}\n/**\n * Returns true, if the given business object is a bpmn:ExtensionElements.\n *\n * @param {ModdleElement} element\n *\n * @return {boolean} a boolean value\n */\n\n\nfunction isExtensionElements(element) {\n  return is(element, 'bpmn:ExtensionElements');\n}\n/**\n * Create a camunda:property entry using tableEntryFactory\n *\n * @param  {djs.model.Base} element\n * @param  {BpmnFactory} bpmnFactory\n * @param  {Object} options\n * @param  {string} options.id\n * @param  {Array<string>} options.modelProperties\n * @param  {Array<string>} options.labels\n * @param  {function} options.getParent Gets the parent business object\n * @param  {function} options.show Indicate when the entry will be shown, should return boolean\n */\n\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var getParent = options.getParent;\n  var modelProperties = options.modelProperties,\n      createParent = options.createParent;\n  var bo = getBusinessObject(element);\n\n  if (is(element, 'bpmn:Participant')) {\n    bo = bo.get('processRef');\n  } // build properties group only when the participant have a processRef\n\n\n  if (!bo) {\n    return;\n  }\n\n  assign(options, {\n    addLabel: translate('Add Property'),\n    getElements: function (element, node) {\n      var parent = getParent(element, node, bo);\n      return getPropertyValues(parent);\n    },\n    addElement: function (element, node) {\n      var commands = [],\n          parent = getParent(element, node, bo);\n\n      if (!parent && typeof createParent === 'function') {\n        var result = createParent(element, bo);\n        parent = result.parent;\n        commands.push(result.cmd);\n      }\n\n      var properties = getPropertiesElement(parent);\n\n      if (!properties) {\n        properties = elementHelper.createElement('camunda:Properties', {}, parent, bpmnFactory);\n\n        if (!isExtensionElements(parent)) {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, {\n            'properties': properties\n          }));\n        } else {\n          commands.push(cmdHelper.addAndRemoveElementsFromList(element, parent, 'values', 'extensionElements', [properties], []));\n        }\n      }\n\n      var propertyProps = {};\n      forEach(modelProperties, function (prop) {\n        propertyProps[prop] = undefined;\n      }); // create id if necessary\n\n      if (modelProperties.indexOf('id') >= 0) {\n        propertyProps.id = generatePropertyId();\n      }\n\n      var property = elementHelper.createElement('camunda:Property', propertyProps, properties, bpmnFactory);\n      commands.push(cmdHelper.addElementsTolist(element, properties, 'values', [property]));\n      return commands;\n    },\n    updateElement: function (element, value, node, idx) {\n      var parent = getParent(element, node, bo),\n          property = getPropertyValues(parent)[idx];\n      forEach(modelProperties, function (prop) {\n        value[prop] = value[prop] || undefined;\n      });\n      return cmdHelper.updateBusinessObject(element, property, value);\n    },\n    validate: function (element, value, node, idx) {\n      // validate id if necessary\n      if (modelProperties.indexOf('id') >= 0) {\n        var parent = getParent(element, node, bo),\n            properties = getPropertyValues(parent),\n            property = properties[idx];\n\n        if (property) {\n          // check if id is valid\n          var validationError = utils.isIdValid(property, value.id);\n\n          if (validationError) {\n            return {\n              id: validationError\n            };\n          }\n        }\n      }\n    },\n    removeElement: function (element, node, idx) {\n      var commands = [],\n          parent = getParent(element, node, bo),\n          properties = getPropertiesElement(parent),\n          propertyValues = getPropertyValues(parent),\n          currentProperty = propertyValues[idx];\n      commands.push(cmdHelper.removeElementsFromList(element, properties, 'values', null, [currentProperty]));\n\n      if (propertyValues.length === 1) {\n        // remove camunda:properties if the last existing property has been removed\n        if (!isExtensionElements(parent)) {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, {\n            properties: undefined\n          }));\n        } else {\n          forEach(parent.values, function (value) {\n            if (is(value, 'camunda:Properties')) {\n              commands.push(extensionElementsHelper.removeEntry(bo, element, value));\n            }\n          });\n        }\n      }\n\n      return commands;\n    }\n  });\n  return factory.table(options);\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/Properties.js"],"names":["getBusinessObject","require","is","factory","elementHelper","extensionElementsHelper","cmdHelper","utils","assign","forEach","find","generatePropertyId","nextId","getPropertyValues","parent","properties","getPropertiesElement","values","element","isExtensionElements","getPropertiesElementInsideExtensionElements","extensionElements","elem","module","exports","bpmnFactory","options","translate","getParent","modelProperties","createParent","bo","get","addLabel","getElements","node","addElement","commands","result","push","cmd","createElement","updateBusinessObject","addAndRemoveElementsFromList","propertyProps","prop","undefined","indexOf","id","property","addElementsTolist","updateElement","value","idx","validate","validationError","isIdValid","removeElement","propertyValues","currentProperty","removeElementsFromList","length","removeEntry","table"],"mappings":"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","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,\n    is = require('bpmn-js/lib/util/ModelUtil').is;\n\nvar factory = require('../../../../factory/EntryFactory');\n\nvar elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper'),\n    utils = require('../../../../Utils');\n\nvar assign = require('lodash/assign'),\n    forEach = require('lodash/forEach'),\n    find = require('lodash/find');\n\nfunction generatePropertyId() {\n  return utils.nextId('Property_');\n}\n\n/**\n * Get all camunda:property objects for a specific business object\n *\n * @param  {ModdleElement} parent\n *\n * @return {Array<ModdleElement>} a list of camunda:property objects\n */\nfunction getPropertyValues(parent) {\n  var properties = parent && getPropertiesElement(parent);\n  if (properties && properties.values) {\n    return properties.values;\n  }\n  return [];\n}\n\n/**\n * Get all camunda:Properties object for a specific business object\n *\n * @param  {ModdleElement} parent\n *\n * @return {ModdleElement} a camunda:Properties object\n */\nfunction getPropertiesElement(element) {\n  if (!isExtensionElements(element)) {\n    return element.properties;\n  } else {\n    return getPropertiesElementInsideExtensionElements(element);\n  }\n}\n\n/**\n * Get first camunda:Properties object for a specific bpmn:ExtensionElements\n * business object.\n *\n * @param {ModdleElement} extensionElements\n *\n * @return {ModdleElement} a camunda:Properties object\n */\nfunction getPropertiesElementInsideExtensionElements(extensionElements) {\n  return find(extensionElements.values, function(elem) {\n    return is(elem, 'camunda:Properties');\n  });\n}\n\n/**\n * Returns true, if the given business object is a bpmn:ExtensionElements.\n *\n * @param {ModdleElement} element\n *\n * @return {boolean} a boolean value\n */\nfunction isExtensionElements(element) {\n  return is(element, 'bpmn:ExtensionElements');\n}\n\n/**\n * Create a camunda:property entry using tableEntryFactory\n *\n * @param  {djs.model.Base} element\n * @param  {BpmnFactory} bpmnFactory\n * @param  {Object} options\n * @param  {string} options.id\n * @param  {Array<string>} options.modelProperties\n * @param  {Array<string>} options.labels\n * @param  {function} options.getParent Gets the parent business object\n * @param  {function} options.show Indicate when the entry will be shown, should return boolean\n */\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var getParent = options.getParent;\n\n  var modelProperties = options.modelProperties,\n      createParent = options.createParent;\n\n  var bo = getBusinessObject(element);\n  if (is(element, 'bpmn:Participant')) {\n    bo = bo.get('processRef');\n  }\n\n  // build properties group only when the participant have a processRef\n  if (!bo) {\n    return;\n  }\n\n  assign(options, {\n    addLabel: translate('Add Property'),\n    getElements: function(element, node) {\n      var parent = getParent(element, node, bo);\n      return getPropertyValues(parent);\n    },\n    addElement: function(element, node) {\n      var commands = [],\n          parent = getParent(element, node, bo);\n\n      if (!parent && typeof createParent === 'function') {\n        var result = createParent(element, bo);\n        parent = result.parent;\n        commands.push(result.cmd);\n      }\n\n      var properties = getPropertiesElement(parent);\n      if (!properties) {\n        properties = elementHelper.createElement('camunda:Properties', {}, parent, bpmnFactory);\n\n        if (!isExtensionElements(parent)) {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, { 'properties': properties }));\n        } else {\n          commands.push(cmdHelper.addAndRemoveElementsFromList(\n            element,\n            parent,\n            'values',\n            'extensionElements',\n            [ properties ],\n            []\n          ));\n        }\n      }\n\n      var propertyProps = {};\n      forEach(modelProperties, function(prop) {\n        propertyProps[prop] = undefined;\n      });\n\n      // create id if necessary\n      if (modelProperties.indexOf('id') >= 0) {\n        propertyProps.id = generatePropertyId();\n      }\n\n      var property = elementHelper.createElement('camunda:Property', propertyProps, properties, bpmnFactory);\n      commands.push(cmdHelper.addElementsTolist(element, properties, 'values', [ property ]));\n\n      return commands;\n    },\n    updateElement: function(element, value, node, idx) {\n      var parent = getParent(element, node, bo),\n          property = getPropertyValues(parent)[idx];\n\n      forEach(modelProperties, function(prop) {\n        value[prop] = value[prop] || undefined;\n      });\n\n      return cmdHelper.updateBusinessObject(element, property, value);\n    },\n    validate: function(element, value, node, idx) {\n      // validate id if necessary\n      if (modelProperties.indexOf('id') >= 0) {\n\n        var parent = getParent(element, node, bo),\n            properties = getPropertyValues(parent),\n            property = properties[idx];\n\n        if (property) {\n          // check if id is valid\n          var validationError = utils.isIdValid(property, value.id);\n\n          if (validationError) {\n            return { id: validationError };\n          }\n        }\n      }\n    },\n    removeElement: function(element, node, idx) {\n      var commands = [],\n          parent = getParent(element, node, bo),\n          properties = getPropertiesElement(parent),\n          propertyValues = getPropertyValues(parent),\n          currentProperty = propertyValues[idx];\n\n      commands.push(cmdHelper.removeElementsFromList(element, properties, 'values', null, [ currentProperty ]));\n\n      if (propertyValues.length === 1) {\n        // remove camunda:properties if the last existing property has been removed\n        if (!isExtensionElements(parent)) {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, { properties: undefined }));\n        } else {\n          forEach(parent.values, function(value) {\n            if (is(value, 'camunda:Properties')) {\n              commands.push(extensionElementsHelper.removeEntry(bo, element, value));\n            }\n          });\n        }\n      }\n\n      return commands;\n    }\n  });\n\n  return factory.table(options);\n};\n"]},"metadata":{},"sourceType":"script"}