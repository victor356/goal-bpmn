{"ast":null,"code":"import { attr as svgAttr, create as svgCreate } from 'tiny-svg';\nexport function componentsToPath(elements) {\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\n}\nexport function toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; p = points[i]; i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\nexport function createLine(points, attrs) {\n  var line = svgCreate('polyline');\n  svgAttr(line, {\n    points: toSVGPoints(points)\n  });\n\n  if (attrs) {\n    svgAttr(line, attrs);\n  }\n\n  return line;\n}\nexport function updateLine(gfx, points) {\n  svgAttr(gfx, {\n    points: toSVGPoints(points)\n  });\n  return gfx;\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/diagram-js/lib/util/RenderUtil.js"],"names":["attr","svgAttr","create","svgCreate","componentsToPath","elements","join","replace","toSVGPoints","points","result","i","p","x","y","createLine","attrs","line","updateLine","gfx"],"mappings":"AAAA,SACEA,IAAI,IAAIC,OADV,EAEEC,MAAM,IAAIC,SAFZ,QAGO,UAHP;AAMA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAOA,QAAQ,CAACC,IAAT,CAAc,GAAd,EAAmBC,OAAnB,CAA2B,cAA3B,EAA2C,IAA3C,CAAP;AACD;AAED,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAClC,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAhB,EAAoBA,CAAC,GAAGH,MAAM,CAACE,CAAD,CAA9B,EAAoCA,CAAC,EAArC,EAAyC;AACvCD,IAAAA,MAAM,IAAIE,CAAC,CAACC,CAAF,GAAM,GAAN,GAAYD,CAAC,CAACE,CAAd,GAAkB,GAA5B;AACD;;AAED,SAAOJ,MAAP;AACD;AAED,OAAO,SAASK,UAAT,CAAoBN,MAApB,EAA4BO,KAA5B,EAAmC;AAExC,MAAIC,IAAI,GAAGd,SAAS,CAAC,UAAD,CAApB;AACAF,EAAAA,OAAO,CAACgB,IAAD,EAAO;AAAER,IAAAA,MAAM,EAAED,WAAW,CAACC,MAAD;AAArB,GAAP,CAAP;;AAEA,MAAIO,KAAJ,EAAW;AACTf,IAAAA,OAAO,CAACgB,IAAD,EAAOD,KAAP,CAAP;AACD;;AAED,SAAOC,IAAP;AACD;AAED,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyBV,MAAzB,EAAiC;AACtCR,EAAAA,OAAO,CAACkB,GAAD,EAAM;AAAEV,IAAAA,MAAM,EAAED,WAAW,CAACC,MAAD;AAArB,GAAN,CAAP;AAEA,SAAOU,GAAP;AACD","sourcesContent":["import {\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\n\nexport function componentsToPath(elements) {\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\n}\n\nexport function toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; (p = points[i]); i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\n\nexport function createLine(points, attrs) {\n\n  var line = svgCreate('polyline');\n  svgAttr(line, { points: toSVGPoints(points) });\n\n  if (attrs) {\n    svgAttr(line, attrs);\n  }\n\n  return line;\n}\n\nexport function updateLine(gfx, points) {\n  svgAttr(gfx, { points: toSVGPoints(points) });\n\n  return gfx;\n}\n"]},"metadata":{},"sourceType":"module"}