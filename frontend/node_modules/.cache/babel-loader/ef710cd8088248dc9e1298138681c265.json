{"ast":null,"code":"'use strict';\n\nvar ModelUtil = require('bpmn-js/lib/util/ModelUtil'),\n    is = ModelUtil.is,\n    getBusinessObject = ModelUtil.getBusinessObject;\n\nvar eventDefinitionHelper = require('./EventDefinitionHelper');\n\nvar extensionsElementHelper = require('./ExtensionElementsHelper');\n\nvar ImplementationTypeHelper = {};\nmodule.exports = ImplementationTypeHelper;\n/**\n * Returns 'true' if the given element is 'camunda:ServiceTaskLike'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\nImplementationTypeHelper.isServiceTaskLike = function (element) {\n  return is(element, 'camunda:ServiceTaskLike');\n};\n/**\n * Returns 'true' if the given element is 'camunda:DmnCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isDmnCapable = function (element) {\n  return is(element, 'camunda:DmnCapable');\n};\n/**\n * Returns 'true' if the given element is 'camunda:ExternalCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isExternalCapable = function (element) {\n  return is(element, 'camunda:ExternalCapable');\n};\n/**\n * Returns 'true' if the given element is 'camunda:TaskListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isTaskListener = function (element) {\n  return is(element, 'camunda:TaskListener');\n};\n/**\n * Returns 'true' if the given element is 'camunda:ExecutionListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isExecutionListener = function (element) {\n  return is(element, 'camunda:ExecutionListener');\n};\n/**\n * Returns 'true' if the given element is 'camunda:ExecutionListener' or\n * 'camunda:TaskListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isListener = function (element) {\n  return this.isTaskListener(element) || this.isExecutionListener(element);\n};\n/**\n * Returns 'true' if the given element is 'bpmn:SequenceFlow'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\n\n\nImplementationTypeHelper.isSequenceFlow = function (element) {\n  return is(element, 'bpmn:SequenceFlow');\n};\n/**\n * Get a 'camunda:ServiceTaskLike' business object.\n *\n * If the given element is not a 'camunda:ServiceTaskLike', then 'false'\n * is returned.\n *\n * @param {djs.model.Base} element\n *\n * @return {ModdleElement} the 'camunda:ServiceTaskLike' business object\n */\n\n\nImplementationTypeHelper.getServiceTaskLikeBusinessObject = function (element) {\n  if (is(element, 'bpmn:IntermediateThrowEvent') || is(element, 'bpmn:EndEvent')) {\n    // change business object to 'messageEventDefinition' when\n    // the element is a message intermediate throw event or message end event\n    // because the camunda extensions (e.g. camunda:class) are in the message\n    // event definition tag and not in the intermediate throw event or end event tag\n    var messageEventDefinition = eventDefinitionHelper.getMessageEventDefinition(element);\n\n    if (messageEventDefinition) {\n      element = messageEventDefinition;\n    }\n  }\n\n  return this.isServiceTaskLike(element) && getBusinessObject(element);\n};\n/**\n * Returns the implementation type of the given element.\n *\n * Possible implementation types are:\n * - dmn\n * - connector\n * - external\n * - class\n * - expression\n * - delegateExpression\n * - script\n * - or undefined, when no matching implementation type is found\n *\n * @param  {djs.model.Base} element\n *\n * @return {String} the implementation type\n */\n\n\nImplementationTypeHelper.getImplementationType = function (element) {\n  var bo = this.getServiceTaskLikeBusinessObject(element);\n\n  if (!bo) {\n    if (this.isListener(element)) {\n      bo = element;\n    } else {\n      return;\n    }\n  }\n\n  if (this.isDmnCapable(bo)) {\n    var decisionRef = bo.get('camunda:decisionRef');\n\n    if (typeof decisionRef !== 'undefined') {\n      return 'dmn';\n    }\n  }\n\n  if (this.isServiceTaskLike(bo)) {\n    var connectors = extensionsElementHelper.getExtensionElements(bo, 'camunda:Connector');\n\n    if (typeof connectors !== 'undefined') {\n      return 'connector';\n    }\n  }\n\n  if (this.isExternalCapable(bo)) {\n    var type = bo.get('camunda:type');\n\n    if (type === 'external') {\n      return 'external';\n    }\n  }\n\n  var cls = bo.get('camunda:class');\n\n  if (typeof cls !== 'undefined') {\n    return 'class';\n  }\n\n  var expression = bo.get('camunda:expression');\n\n  if (typeof expression !== 'undefined') {\n    return 'expression';\n  }\n\n  var delegateExpression = bo.get('camunda:delegateExpression');\n\n  if (typeof delegateExpression !== 'undefined') {\n    return 'delegateExpression';\n  }\n\n  if (this.isListener(bo)) {\n    var script = bo.get('script');\n\n    if (typeof script !== 'undefined') {\n      return 'script';\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/helper/ImplementationTypeHelper.js"],"names":["ModelUtil","require","is","getBusinessObject","eventDefinitionHelper","extensionsElementHelper","ImplementationTypeHelper","module","exports","isServiceTaskLike","element","isDmnCapable","isExternalCapable","isTaskListener","isExecutionListener","isListener","isSequenceFlow","getServiceTaskLikeBusinessObject","messageEventDefinition","getMessageEventDefinition","getImplementationType","bo","decisionRef","get","connectors","getExtensionElements","type","cls","expression","delegateExpression","script"],"mappings":"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","sourcesContent":["'use strict';\n\nvar ModelUtil = require('bpmn-js/lib/util/ModelUtil'),\n    is = ModelUtil.is,\n    getBusinessObject = ModelUtil.getBusinessObject;\n\nvar eventDefinitionHelper = require('./EventDefinitionHelper');\nvar extensionsElementHelper = require('./ExtensionElementsHelper');\n\nvar ImplementationTypeHelper = {};\n\nmodule.exports = ImplementationTypeHelper;\n\n/**\n * Returns 'true' if the given element is 'camunda:ServiceTaskLike'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isServiceTaskLike = function(element) {\n  return is(element, 'camunda:ServiceTaskLike');\n};\n\n/**\n * Returns 'true' if the given element is 'camunda:DmnCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isDmnCapable = function(element) {\n  return is(element, 'camunda:DmnCapable');\n};\n\n/**\n * Returns 'true' if the given element is 'camunda:ExternalCapable'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isExternalCapable = function(element) {\n  return is(element, 'camunda:ExternalCapable');\n};\n\n/**\n * Returns 'true' if the given element is 'camunda:TaskListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isTaskListener = function(element) {\n  return is(element, 'camunda:TaskListener');\n};\n\n/**\n * Returns 'true' if the given element is 'camunda:ExecutionListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isExecutionListener = function(element) {\n  return is(element, 'camunda:ExecutionListener');\n};\n\n/**\n * Returns 'true' if the given element is 'camunda:ExecutionListener' or\n * 'camunda:TaskListener'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isListener = function(element) {\n  return this.isTaskListener(element) || this.isExecutionListener(element);\n};\n\n/**\n * Returns 'true' if the given element is 'bpmn:SequenceFlow'\n *\n * @param {djs.model.Base} element\n *\n * @return {boolean} a boolean value\n */\nImplementationTypeHelper.isSequenceFlow = function(element) {\n  return is(element, 'bpmn:SequenceFlow');\n};\n\n/**\n * Get a 'camunda:ServiceTaskLike' business object.\n *\n * If the given element is not a 'camunda:ServiceTaskLike', then 'false'\n * is returned.\n *\n * @param {djs.model.Base} element\n *\n * @return {ModdleElement} the 'camunda:ServiceTaskLike' business object\n */\nImplementationTypeHelper.getServiceTaskLikeBusinessObject = function(element) {\n\n  if (is(element, 'bpmn:IntermediateThrowEvent') || is(element, 'bpmn:EndEvent')) {\n\n    // change business object to 'messageEventDefinition' when\n    // the element is a message intermediate throw event or message end event\n    // because the camunda extensions (e.g. camunda:class) are in the message\n    // event definition tag and not in the intermediate throw event or end event tag\n    var messageEventDefinition = eventDefinitionHelper.getMessageEventDefinition(element);\n    if (messageEventDefinition) {\n      element = messageEventDefinition;\n    }\n  }\n\n  return this.isServiceTaskLike(element) && getBusinessObject(element);\n\n};\n\n/**\n * Returns the implementation type of the given element.\n *\n * Possible implementation types are:\n * - dmn\n * - connector\n * - external\n * - class\n * - expression\n * - delegateExpression\n * - script\n * - or undefined, when no matching implementation type is found\n *\n * @param  {djs.model.Base} element\n *\n * @return {String} the implementation type\n */\nImplementationTypeHelper.getImplementationType = function(element) {\n\n  var bo = this.getServiceTaskLikeBusinessObject(element);\n\n  if (!bo) {\n    if (this.isListener(element)) {\n      bo = element;\n    } else {\n      return;\n    }\n  }\n\n  if (this.isDmnCapable(bo)) {\n    var decisionRef = bo.get('camunda:decisionRef');\n    if (typeof decisionRef !== 'undefined') {\n      return 'dmn';\n    }\n  }\n\n  if (this.isServiceTaskLike(bo)) {\n    var connectors = extensionsElementHelper.getExtensionElements(bo, 'camunda:Connector');\n    if (typeof connectors !== 'undefined') {\n      return 'connector';\n    }\n  }\n\n  if (this.isExternalCapable(bo)) {\n    var type = bo.get('camunda:type');\n    if (type === 'external') {\n      return 'external';\n    }\n  }\n\n  var cls = bo.get('camunda:class');\n  if (typeof cls !== 'undefined') {\n    return 'class';\n  }\n\n  var expression = bo.get('camunda:expression');\n  if (typeof expression !== 'undefined') {\n    return 'expression';\n  }\n\n  var delegateExpression = bo.get('camunda:delegateExpression');\n  if (typeof delegateExpression !== 'undefined') {\n    return 'delegateExpression';\n  }\n\n  if (this.isListener(bo)) {\n    var script = bo.get('script');\n    if (typeof script !== 'undefined') {\n      return 'script';\n    }\n  }\n\n};\n"]},"metadata":{},"sourceType":"script"}