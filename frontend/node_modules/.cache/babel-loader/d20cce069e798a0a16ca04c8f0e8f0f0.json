{"ast":null,"code":"'use strict';\n\nvar entryFactory = require('../../../factory/EntryFactory'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nmodule.exports = function (group, element, translate) {\n  var bo = getBusinessObject(element);\n\n  if (!bo) {\n    return;\n  }\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && bo.get('processRef')) {\n    var versionTagEntry = entryFactory.textField({\n      id: 'versionTag',\n      label: translate('Version Tag'),\n      modelProperty: 'versionTag'\n    }); // in participants we have to change the default behavior of set and get\n\n    if (is(element, 'bpmn:Participant')) {\n      versionTagEntry.get = function (element) {\n        var processBo = bo.get('processRef');\n        return {\n          versionTag: processBo.get('camunda:versionTag')\n        };\n      };\n\n      versionTagEntry.set = function (element, values) {\n        var processBo = bo.get('processRef');\n        return cmdHelper.updateBusinessObject(element, processBo, {\n          'camunda:versionTag': values.versionTag || undefined\n        });\n      };\n    }\n\n    group.entries.push(versionTagEntry);\n  }\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/VersionTagProps.js"],"names":["entryFactory","require","cmdHelper","is","getBusinessObject","module","exports","group","element","translate","bo","get","versionTagEntry","textField","id","label","modelProperty","processBo","versionTag","set","values","updateBusinessObject","undefined","entries","push"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,+BAAD,CAA1B;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,2BAAD,CADvB;AAAA,IAEIE,EAAE,GAAGF,OAAO,CAAC,4BAAD,CAAP,CAAsCE,EAF/C;AAAA,IAGIC,iBAAiB,GAAGH,OAAO,CAAC,4BAAD,CAAP,CAAsCG,iBAH9D;;AAKAC,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,SAAzB,EAAoC;AAEnD,MAAIC,EAAE,GAAGN,iBAAiB,CAACI,OAAD,CAA1B;;AAEA,MAAI,CAACE,EAAL,EAAS;AACP;AACD;;AAED,MAAIP,EAAE,CAACK,OAAD,EAAU,cAAV,CAAF,IAA+BL,EAAE,CAACK,OAAD,EAAU,kBAAV,CAAF,IAAmCE,EAAE,CAACC,GAAH,CAAO,YAAP,CAAtE,EAA4F;AAC1F,QAAIC,eAAe,GAAGZ,YAAY,CAACa,SAAb,CAAuB;AAC3CC,MAAAA,EAAE,EAAE,YADuC;AAE3CC,MAAAA,KAAK,EAAEN,SAAS,CAAC,aAAD,CAF2B;AAG3CO,MAAAA,aAAa,EAAE;AAH4B,KAAvB,CAAtB,CAD0F,CAO1F;;AACA,QAAIb,EAAE,CAACK,OAAD,EAAU,kBAAV,CAAN,EAAqC;AACnCI,MAAAA,eAAe,CAACD,GAAhB,GAAsB,UAASH,OAAT,EAAkB;AACtC,YAAIS,SAAS,GAAGP,EAAE,CAACC,GAAH,CAAO,YAAP,CAAhB;AAEA,eAAO;AACLO,UAAAA,UAAU,EAAED,SAAS,CAACN,GAAV,CAAc,oBAAd;AADP,SAAP;AAGD,OAND;;AAQAC,MAAAA,eAAe,CAACO,GAAhB,GAAsB,UAASX,OAAT,EAAkBY,MAAlB,EAA0B;AAC9C,YAAIH,SAAS,GAAGP,EAAE,CAACC,GAAH,CAAO,YAAP,CAAhB;AAEA,eAAOT,SAAS,CAACmB,oBAAV,CAA+Bb,OAA/B,EAAwCS,SAAxC,EAAmD;AACxD,gCAAsBG,MAAM,CAACF,UAAP,IAAqBI;AADa,SAAnD,CAAP;AAGD,OAND;AAOD;;AAEDf,IAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmBZ,eAAnB;AAED;AACF,CArCD","sourcesContent":["'use strict';\n\nvar entryFactory = require('../../../factory/EntryFactory'),\n    cmdHelper = require('../../../helper/CmdHelper'),\n    is = require('bpmn-js/lib/util/ModelUtil').is,\n    getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nmodule.exports = function(group, element, translate) {\n\n  var bo = getBusinessObject(element);\n\n  if (!bo) {\n    return;\n  }\n\n  if (is(element, 'bpmn:Process') || is(element, 'bpmn:Participant') && bo.get('processRef')) {\n    var versionTagEntry = entryFactory.textField({\n      id: 'versionTag',\n      label: translate('Version Tag'),\n      modelProperty: 'versionTag'\n    });\n\n    // in participants we have to change the default behavior of set and get\n    if (is(element, 'bpmn:Participant')) {\n      versionTagEntry.get = function(element) {\n        var processBo = bo.get('processRef');\n\n        return {\n          versionTag: processBo.get('camunda:versionTag')\n        };\n      };\n\n      versionTagEntry.set = function(element, values) {\n        var processBo = bo.get('processRef');\n\n        return cmdHelper.updateBusinessObject(element, processBo, {\n          'camunda:versionTag': values.versionTag || undefined\n        });\n      };\n    }\n\n    group.entries.push(versionTagEntry);\n\n  }\n};\n"]},"metadata":{},"sourceType":"script"}