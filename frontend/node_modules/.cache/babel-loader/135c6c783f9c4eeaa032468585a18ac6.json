{"ast":null,"code":"'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    inputOutputHelper = require('../../../../helper/InputOutputHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nvar extensionElementsEntry = require('./ExtensionElements');\n\nfunction getInputOutput(element, insideConnector) {\n  return inputOutputHelper.getInputOutput(element, insideConnector);\n}\n\nfunction getConnector(element) {\n  return inputOutputHelper.getConnector(element);\n}\n\nfunction getInputParameters(element, insideConnector) {\n  return inputOutputHelper.getInputParameters(element, insideConnector);\n}\n\nfunction getOutputParameters(element, insideConnector) {\n  return inputOutputHelper.getOutputParameters(element, insideConnector);\n}\n\nfunction getInputParameter(element, insideConnector, idx) {\n  return inputOutputHelper.getInputParameter(element, insideConnector, idx);\n}\n\nfunction getOutputParameter(element, insideConnector, idx) {\n  return inputOutputHelper.getOutputParameter(element, insideConnector, idx);\n}\n\nfunction createElement(type, parent, factory, properties) {\n  return elementHelper.createElement(type, properties, parent, factory);\n}\n\nfunction createInputOutput(parent, bpmnFactory, properties) {\n  return createElement('camunda:InputOutput', parent, bpmnFactory, properties);\n}\n\nfunction createParameter(type, parent, bpmnFactory, properties) {\n  return createElement(type, parent, bpmnFactory, properties);\n}\n\nfunction ensureInputOutputSupported(element, insideConnector) {\n  return inputOutputHelper.isInputOutputSupported(element, insideConnector);\n}\n\nfunction ensureOutparameterSupported(element, insideConnector) {\n  return inputOutputHelper.areOutputParametersSupported(element, insideConnector);\n}\n\nmodule.exports = function (element, bpmnFactory, options, translate) {\n  var TYPE_LABEL = {\n    'camunda:Map': translate('Map'),\n    'camunda:List': translate('List'),\n    'camunda:Script': translate('Script')\n  };\n  options = options || {};\n  var insideConnector = !!options.insideConnector,\n      idPrefix = options.idPrefix || '';\n\n  var getSelected = function (element, node) {\n    var selection = inputEntry && inputEntry.getSelected(element, node) || {\n      idx: -1\n    };\n    var parameter = getInputParameter(element, insideConnector, selection.idx);\n\n    if (!parameter && outputEntry) {\n      selection = outputEntry.getSelected(element, node);\n      parameter = getOutputParameter(element, insideConnector, selection.idx);\n    }\n\n    return parameter;\n  };\n\n  var result = {\n    getSelectedParameter: getSelected\n  };\n  var entries = result.entries = [];\n\n  if (!ensureInputOutputSupported(element)) {\n    return result;\n  }\n\n  var newElement = function (type, prop, factory) {\n    return function (element, extensionElements, value) {\n      var commands = [];\n      var inputOutput = getInputOutput(element, insideConnector);\n\n      if (!inputOutput) {\n        var parent = !insideConnector ? extensionElements : getConnector(element);\n        inputOutput = createInputOutput(parent, bpmnFactory, {\n          inputParameters: [],\n          outputParameters: []\n        });\n\n        if (!insideConnector) {\n          commands.push(cmdHelper.addAndRemoveElementsFromList(element, extensionElements, 'values', 'extensionElements', [inputOutput], []));\n        } else {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, {\n            inputOutput: inputOutput\n          }));\n        }\n      }\n\n      var newElem = createParameter(type, inputOutput, bpmnFactory, {\n        name: value\n      });\n      commands.push(cmdHelper.addElementsTolist(element, inputOutput, prop, [newElem]));\n      return commands;\n    };\n  };\n\n  var removeElement = function (getter, prop, otherProp) {\n    return function (element, extensionElements, value, idx) {\n      var inputOutput = getInputOutput(element, insideConnector);\n      var parameter = getter(element, insideConnector, idx);\n      var commands = [];\n      commands.push(cmdHelper.removeElementsFromList(element, inputOutput, prop, null, [parameter]));\n      var firstLength = inputOutput.get(prop).length - 1;\n      var secondLength = (inputOutput.get(otherProp) || []).length;\n\n      if (!firstLength && !secondLength) {\n        if (!insideConnector) {\n          commands.push(extensionElementsHelper.removeEntry(getBusinessObject(element), element, inputOutput));\n        } else {\n          var connector = getConnector(element);\n          commands.push(cmdHelper.updateBusinessObject(element, connector, {\n            inputOutput: undefined\n          }));\n        }\n      }\n\n      return commands;\n    };\n  };\n\n  var setOptionLabelValue = function (getter) {\n    return function (element, node, option, property, value, idx) {\n      var parameter = getter(element, insideConnector, idx);\n      var suffix = 'Text';\n      var definition = parameter.get('definition');\n\n      if (typeof definition !== 'undefined') {\n        var type = definition.$type;\n        suffix = TYPE_LABEL[type];\n      }\n\n      option.text = (value || '') + ' : ' + suffix;\n    };\n  }; // input parameters ///////////////////////////////////////////////////////////////\n\n\n  var inputEntry = extensionElementsEntry(element, bpmnFactory, {\n    id: idPrefix + 'inputs',\n    label: translate('Input Parameters'),\n    modelProperty: 'name',\n    prefix: 'Input',\n    resizable: true,\n    createExtensionElement: newElement('camunda:InputParameter', 'inputParameters'),\n    removeExtensionElement: removeElement(getInputParameter, 'inputParameters', 'outputParameters'),\n    getExtensionElements: function (element) {\n      return getInputParameters(element, insideConnector);\n    },\n    onSelectionChange: function (element, node, event, scope) {\n      outputEntry && outputEntry.deselect(element, node);\n    },\n    setOptionLabelValue: setOptionLabelValue(getInputParameter)\n  });\n  entries.push(inputEntry); // output parameters ///////////////////////////////////////////////////////\n\n  if (ensureOutparameterSupported(element, insideConnector)) {\n    var outputEntry = extensionElementsEntry(element, bpmnFactory, {\n      id: idPrefix + 'outputs',\n      label: translate('Output Parameters'),\n      modelProperty: 'name',\n      prefix: 'Output',\n      resizable: true,\n      createExtensionElement: newElement('camunda:OutputParameter', 'outputParameters'),\n      removeExtensionElement: removeElement(getOutputParameter, 'outputParameters', 'inputParameters'),\n      getExtensionElements: function (element) {\n        return getOutputParameters(element, insideConnector);\n      },\n      onSelectionChange: function (element, node, event, scope) {\n        inputEntry.deselect(element, node);\n      },\n      setOptionLabelValue: setOptionLabelValue(getOutputParameter)\n    });\n    entries.push(outputEntry);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js-properties-panel/lib/provider/camunda/parts/implementation/InputOutput.js"],"names":["getBusinessObject","require","elementHelper","extensionElementsHelper","inputOutputHelper","cmdHelper","extensionElementsEntry","getInputOutput","element","insideConnector","getConnector","getInputParameters","getOutputParameters","getInputParameter","idx","getOutputParameter","createElement","type","parent","factory","properties","createInputOutput","bpmnFactory","createParameter","ensureInputOutputSupported","isInputOutputSupported","ensureOutparameterSupported","areOutputParametersSupported","module","exports","options","translate","TYPE_LABEL","idPrefix","getSelected","node","selection","inputEntry","parameter","outputEntry","result","getSelectedParameter","entries","newElement","prop","extensionElements","value","commands","inputOutput","inputParameters","outputParameters","push","addAndRemoveElementsFromList","updateBusinessObject","newElem","name","addElementsTolist","removeElement","getter","otherProp","removeElementsFromList","firstLength","get","length","secondLength","removeEntry","connector","undefined","setOptionLabelValue","option","property","suffix","definition","$type","text","id","label","modelProperty","prefix","resizable","createExtensionElement","removeExtensionElement","getExtensionElements","onSelectionChange","event","scope","deselect"],"mappings":"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","sourcesContent":["'use strict';\n\nvar getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject;\n\nvar elementHelper = require('../../../../helper/ElementHelper'),\n    extensionElementsHelper = require('../../../../helper/ExtensionElementsHelper'),\n    inputOutputHelper = require('../../../../helper/InputOutputHelper'),\n    cmdHelper = require('../../../../helper/CmdHelper');\n\nvar extensionElementsEntry = require('./ExtensionElements');\n\n\nfunction getInputOutput(element, insideConnector) {\n  return inputOutputHelper.getInputOutput(element, insideConnector);\n}\n\nfunction getConnector(element) {\n  return inputOutputHelper.getConnector(element);\n}\n\nfunction getInputParameters(element, insideConnector) {\n  return inputOutputHelper.getInputParameters(element, insideConnector);\n}\n\nfunction getOutputParameters(element, insideConnector) {\n  return inputOutputHelper.getOutputParameters(element, insideConnector);\n}\n\nfunction getInputParameter(element, insideConnector, idx) {\n  return inputOutputHelper.getInputParameter(element, insideConnector, idx);\n}\n\nfunction getOutputParameter(element, insideConnector, idx) {\n  return inputOutputHelper.getOutputParameter(element, insideConnector, idx);\n}\n\n\nfunction createElement(type, parent, factory, properties) {\n  return elementHelper.createElement(type, properties, parent, factory);\n}\n\nfunction createInputOutput(parent, bpmnFactory, properties) {\n  return createElement('camunda:InputOutput', parent, bpmnFactory, properties);\n}\n\nfunction createParameter(type, parent, bpmnFactory, properties) {\n  return createElement(type, parent, bpmnFactory, properties);\n}\n\n\nfunction ensureInputOutputSupported(element, insideConnector) {\n  return inputOutputHelper.isInputOutputSupported(element, insideConnector);\n}\n\nfunction ensureOutparameterSupported(element, insideConnector) {\n  return inputOutputHelper.areOutputParametersSupported(element, insideConnector);\n}\n\nmodule.exports = function(element, bpmnFactory, options, translate) {\n\n  var TYPE_LABEL = {\n    'camunda:Map': translate('Map'),\n    'camunda:List': translate('List'),\n    'camunda:Script': translate('Script')\n  };\n\n  options = options || {};\n\n  var insideConnector = !!options.insideConnector,\n      idPrefix = options.idPrefix || '';\n\n  var getSelected = function(element, node) {\n    var selection = (inputEntry && inputEntry.getSelected(element, node)) || { idx: -1 };\n\n    var parameter = getInputParameter(element, insideConnector, selection.idx);\n    if (!parameter && outputEntry) {\n      selection = outputEntry.getSelected(element, node);\n      parameter = getOutputParameter(element, insideConnector, selection.idx);\n    }\n    return parameter;\n  };\n\n  var result = {\n    getSelectedParameter: getSelected\n  };\n\n  var entries = result.entries = [];\n\n  if (!ensureInputOutputSupported(element)) {\n    return result;\n  }\n\n  var newElement = function(type, prop, factory) {\n\n    return function(element, extensionElements, value) {\n      var commands = [];\n\n      var inputOutput = getInputOutput(element, insideConnector);\n      if (!inputOutput) {\n        var parent = !insideConnector ? extensionElements : getConnector(element);\n        inputOutput = createInputOutput(parent, bpmnFactory, {\n          inputParameters: [],\n          outputParameters: []\n        });\n\n        if (!insideConnector) {\n          commands.push(cmdHelper.addAndRemoveElementsFromList(\n            element,\n            extensionElements,\n            'values',\n            'extensionElements',\n            [ inputOutput ],\n            []\n          ));\n        } else {\n          commands.push(cmdHelper.updateBusinessObject(element, parent, { inputOutput: inputOutput }));\n        }\n      }\n\n      var newElem = createParameter(type, inputOutput, bpmnFactory, { name: value });\n      commands.push(cmdHelper.addElementsTolist(element, inputOutput, prop, [ newElem ]));\n\n      return commands;\n    };\n  };\n\n  var removeElement = function(getter, prop, otherProp) {\n    return function(element, extensionElements, value, idx) {\n      var inputOutput = getInputOutput(element, insideConnector);\n      var parameter = getter(element, insideConnector, idx);\n\n      var commands = [];\n      commands.push(cmdHelper.removeElementsFromList(element, inputOutput, prop, null, [ parameter ]));\n\n      var firstLength = inputOutput.get(prop).length-1;\n      var secondLength = (inputOutput.get(otherProp) || []).length;\n\n      if (!firstLength && !secondLength) {\n\n        if (!insideConnector) {\n          commands.push(extensionElementsHelper.removeEntry(getBusinessObject(element), element, inputOutput));\n        } else {\n          var connector = getConnector(element);\n          commands.push(cmdHelper.updateBusinessObject(element, connector, { inputOutput: undefined }));\n        }\n\n      }\n\n      return commands;\n    };\n  };\n\n  var setOptionLabelValue = function(getter) {\n    return function(element, node, option, property, value, idx) {\n      var parameter = getter(element, insideConnector, idx);\n\n      var suffix = 'Text';\n\n      var definition = parameter.get('definition');\n      if (typeof definition !== 'undefined') {\n        var type = definition.$type;\n        suffix = TYPE_LABEL[type];\n      }\n\n      option.text = (value || '') + ' : ' + suffix;\n    };\n  };\n\n\n  // input parameters ///////////////////////////////////////////////////////////////\n\n  var inputEntry = extensionElementsEntry(element, bpmnFactory, {\n    id: idPrefix + 'inputs',\n    label: translate('Input Parameters'),\n    modelProperty: 'name',\n    prefix: 'Input',\n    resizable: true,\n\n    createExtensionElement: newElement('camunda:InputParameter', 'inputParameters'),\n    removeExtensionElement: removeElement(getInputParameter, 'inputParameters', 'outputParameters'),\n\n    getExtensionElements: function(element) {\n      return getInputParameters(element, insideConnector);\n    },\n\n    onSelectionChange: function(element, node, event, scope) {\n      outputEntry && outputEntry.deselect(element, node);\n    },\n\n    setOptionLabelValue: setOptionLabelValue(getInputParameter)\n\n  });\n  entries.push(inputEntry);\n\n\n  // output parameters ///////////////////////////////////////////////////////\n\n  if (ensureOutparameterSupported(element, insideConnector)) {\n    var outputEntry = extensionElementsEntry(element, bpmnFactory, {\n      id: idPrefix + 'outputs',\n      label: translate('Output Parameters'),\n      modelProperty: 'name',\n      prefix: 'Output',\n      resizable: true,\n\n      createExtensionElement: newElement('camunda:OutputParameter', 'outputParameters'),\n      removeExtensionElement: removeElement(getOutputParameter, 'outputParameters', 'inputParameters'),\n\n      getExtensionElements: function(element) {\n        return getOutputParameters(element, insideConnector);\n      },\n\n      onSelectionChange: function(element, node, event, scope) {\n        inputEntry.deselect(element, node);\n      },\n\n      setOptionLabelValue: setOptionLabelValue(getOutputParameter)\n\n    });\n    entries.push(outputEntry);\n  }\n\n  return result;\n\n};\n"]},"metadata":{},"sourceType":"script"}