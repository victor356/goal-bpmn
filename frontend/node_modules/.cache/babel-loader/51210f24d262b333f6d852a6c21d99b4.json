{"ast":null,"code":"import { forEach, isArray } from 'min-dash';\nvar NOT_REGISTERED_ERROR = 'is not a registered action',\n    IS_REGISTERED_ERROR = 'is already registered';\n/**\n * An interface that provides access to modeling actions by decoupling\n * the one who requests the action to be triggered and the trigger itself.\n *\n * It's possible to add new actions by registering them with ´registerAction´ and likewise\n * unregister existing ones with ´unregisterAction´.\n *\n */\n\nexport default function EditorActions(eventBus, commandStack, modeling, selection, zoomScroll, copyPaste, canvas, rules, mouseTracking) {\n  this._actions = {\n    undo: function () {\n      commandStack.undo();\n    },\n    redo: function () {\n      commandStack.redo();\n    },\n    copy: function () {\n      var selectedElements = selection.get();\n      copyPaste.copy(selectedElements);\n    },\n    paste: function () {\n      var context = mouseTracking.getHoverContext();\n      copyPaste.paste(context);\n    },\n    stepZoom: function (opts) {\n      zoomScroll.stepZoom(opts.value);\n    },\n    zoom: function (opts) {\n      canvas.zoom(opts.value);\n    },\n    removeSelection: function () {\n      var selectedElements = selection.get();\n\n      if (selectedElements.length) {\n        var allowed = rules.allowed('elements.delete', {\n          elements: selectedElements\n        }),\n            removableElements;\n\n        if (allowed === false) {\n          return;\n        } else if (isArray(allowed)) {\n          removableElements = allowed;\n        } else {\n          removableElements = selectedElements;\n        }\n\n        if (removableElements.length) {\n          modeling.removeElements(removableElements.slice());\n        }\n      }\n    },\n    moveCanvas: function (opts) {\n      var dx = 0,\n          dy = 0,\n          invertY = opts.invertY,\n          speed = opts.speed;\n      var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\n\n      switch (opts.direction) {\n        case 'left':\n          // Left\n          dx = actualSpeed;\n          break;\n\n        case 'up':\n          // Up\n          dy = actualSpeed;\n          break;\n\n        case 'right':\n          // Right\n          dx = -actualSpeed;\n          break;\n\n        case 'down':\n          // Down\n          dy = -actualSpeed;\n          break;\n      }\n\n      if (dy && invertY) {\n        dy = -dy;\n      }\n\n      canvas.scroll({\n        dx: dx,\n        dy: dy\n      });\n    }\n  };\n}\nEditorActions.$inject = ['eventBus', 'commandStack', 'modeling', 'selection', 'zoomScroll', 'copyPaste', 'canvas', 'rules', 'mouseTracking'];\n/**\n * Triggers a registered action\n *\n * @param  {String} action\n * @param  {Object} opts\n *\n * @return {Unknown} Returns what the registered listener returns\n */\n\nEditorActions.prototype.trigger = function (action, opts) {\n  if (!this._actions[action]) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  return this._actions[action](opts);\n};\n/**\n * Registers a collections of actions.\n * The key of the object will be the name of the action.\n *\n * @example\n * ´´´\n * var actions = {\n *   spaceTool: function() {\n *     spaceTool.activateSelection();\n *   },\n *   lassoTool: function() {\n *     lassoTool.activateSelection();\n *   }\n * ];\n *\n * editorActions.register(actions);\n *\n * editorActions.isRegistered('spaceTool'); // true\n * ´´´\n *\n * @param  {Object} actions\n */\n\n\nEditorActions.prototype.register = function (actions, listener) {\n  var self = this;\n\n  if (typeof actions === 'string') {\n    return this._registerAction(actions, listener);\n  }\n\n  forEach(actions, function (listener, action) {\n    self._registerAction(action, listener);\n  });\n};\n/**\n * Registers a listener to an action key\n *\n * @param  {String} action\n * @param  {Function} listener\n */\n\n\nEditorActions.prototype._registerAction = function (action, listener) {\n  if (this.isRegistered(action)) {\n    throw error(action, IS_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = listener;\n};\n/**\n * Unregister an existing action\n *\n * @param {String} action\n */\n\n\nEditorActions.prototype.unregister = function (action) {\n  if (!this.isRegistered(action)) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = undefined;\n};\n/**\n * Returns the number of actions that are currently registered\n *\n * @return {Number}\n */\n\n\nEditorActions.prototype.length = function () {\n  return Object.keys(this._actions).length;\n};\n/**\n * Checks wether the given action is registered\n *\n * @param {String} action\n *\n * @return {Boolean}\n */\n\n\nEditorActions.prototype.isRegistered = function (action) {\n  return !!this._actions[action];\n};\n\nfunction error(action, message) {\n  return new Error(action + ' ' + message);\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/SPM2021-MTV/frontend/node_modules/bpmn-js/node_modules/diagram-js/lib/features/editor-actions/EditorActions.js"],"names":["forEach","isArray","NOT_REGISTERED_ERROR","IS_REGISTERED_ERROR","EditorActions","eventBus","commandStack","modeling","selection","zoomScroll","copyPaste","canvas","rules","mouseTracking","_actions","undo","redo","copy","selectedElements","get","paste","context","getHoverContext","stepZoom","opts","value","zoom","removeSelection","length","allowed","elements","removableElements","removeElements","slice","moveCanvas","dx","dy","invertY","speed","actualSpeed","Math","min","sqrt","viewbox","scale","direction","scroll","$inject","prototype","trigger","action","error","register","actions","listener","self","_registerAction","isRegistered","unregister","undefined","Object","keys","message","Error"],"mappings":"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","sourcesContent":["import {\n  forEach,\n  isArray\n} from 'min-dash';\n\nvar NOT_REGISTERED_ERROR = 'is not a registered action',\n    IS_REGISTERED_ERROR = 'is already registered';\n\n\n/**\n * An interface that provides access to modeling actions by decoupling\n * the one who requests the action to be triggered and the trigger itself.\n *\n * It's possible to add new actions by registering them with ´registerAction´ and likewise\n * unregister existing ones with ´unregisterAction´.\n *\n */\nexport default function EditorActions(\n    eventBus, commandStack, modeling, selection,\n    zoomScroll, copyPaste, canvas, rules, mouseTracking) {\n\n  this._actions = {\n    undo: function() {\n      commandStack.undo();\n    },\n    redo: function() {\n      commandStack.redo();\n    },\n    copy: function() {\n      var selectedElements = selection.get();\n\n      copyPaste.copy(selectedElements);\n    },\n    paste: function() {\n      var context = mouseTracking.getHoverContext();\n\n      copyPaste.paste(context);\n    },\n    stepZoom: function(opts) {\n      zoomScroll.stepZoom(opts.value);\n    },\n    zoom: function(opts) {\n      canvas.zoom(opts.value);\n    },\n    removeSelection: function() {\n      var selectedElements = selection.get();\n\n      if (selectedElements.length) {\n        var allowed = rules.allowed('elements.delete', { elements: selectedElements }),\n            removableElements;\n\n        if (allowed === false) {\n          return;\n        }\n        else if (isArray(allowed)) {\n          removableElements = allowed;\n        }\n        else {\n          removableElements = selectedElements;\n        }\n\n        if (removableElements.length) {\n          modeling.removeElements(removableElements.slice());\n        }\n      }\n    },\n    moveCanvas: function(opts) {\n      var dx = 0,\n          dy = 0,\n          invertY = opts.invertY,\n          speed = opts.speed;\n\n      var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\n\n      switch (opts.direction) {\n      case 'left': // Left\n        dx = actualSpeed;\n        break;\n      case 'up': // Up\n        dy = actualSpeed;\n        break;\n      case 'right': // Right\n        dx = -actualSpeed;\n        break;\n      case 'down': // Down\n        dy = -actualSpeed;\n        break;\n      }\n\n      if (dy && invertY) {\n        dy = -dy;\n      }\n\n      canvas.scroll({ dx: dx, dy: dy });\n    }\n  };\n}\n\nEditorActions.$inject = [\n  'eventBus',\n  'commandStack',\n  'modeling',\n  'selection',\n  'zoomScroll',\n  'copyPaste',\n  'canvas',\n  'rules',\n  'mouseTracking'\n];\n\n\n/**\n * Triggers a registered action\n *\n * @param  {String} action\n * @param  {Object} opts\n *\n * @return {Unknown} Returns what the registered listener returns\n */\nEditorActions.prototype.trigger = function(action, opts) {\n  if (!this._actions[action]) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  return this._actions[action](opts);\n};\n\n\n/**\n * Registers a collections of actions.\n * The key of the object will be the name of the action.\n *\n * @example\n * ´´´\n * var actions = {\n *   spaceTool: function() {\n *     spaceTool.activateSelection();\n *   },\n *   lassoTool: function() {\n *     lassoTool.activateSelection();\n *   }\n * ];\n *\n * editorActions.register(actions);\n *\n * editorActions.isRegistered('spaceTool'); // true\n * ´´´\n *\n * @param  {Object} actions\n */\nEditorActions.prototype.register = function(actions, listener) {\n  var self = this;\n\n  if (typeof actions === 'string') {\n    return this._registerAction(actions, listener);\n  }\n\n  forEach(actions, function(listener, action) {\n    self._registerAction(action, listener);\n  });\n};\n\n/**\n * Registers a listener to an action key\n *\n * @param  {String} action\n * @param  {Function} listener\n */\nEditorActions.prototype._registerAction = function(action, listener) {\n  if (this.isRegistered(action)) {\n    throw error(action, IS_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = listener;\n};\n\n/**\n * Unregister an existing action\n *\n * @param {String} action\n */\nEditorActions.prototype.unregister = function(action) {\n  if (!this.isRegistered(action)) {\n    throw error(action, NOT_REGISTERED_ERROR);\n  }\n\n  this._actions[action] = undefined;\n};\n\n/**\n * Returns the number of actions that are currently registered\n *\n * @return {Number}\n */\nEditorActions.prototype.length = function() {\n  return Object.keys(this._actions).length;\n};\n\n/**\n * Checks wether the given action is registered\n *\n * @param {String} action\n *\n * @return {Boolean}\n */\nEditorActions.prototype.isRegistered = function(action) {\n  return !!this._actions[action];\n};\n\n\nfunction error(action, message) {\n  return new Error(action + ' ' + message);\n}\n"]},"metadata":{},"sourceType":"module"}