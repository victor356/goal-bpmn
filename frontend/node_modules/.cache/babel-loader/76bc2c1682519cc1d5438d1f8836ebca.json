{"ast":null,"code":"import { is, getBusinessObject } from './ModelUtil';\nimport { forEach } from 'min-dash';\nexport function isExpanded(element) {\n  if (is(element, 'bpmn:CallActivity')) {\n    return false;\n  }\n\n  if (is(element, 'bpmn:SubProcess')) {\n    return !!getBusinessObject(element).di.isExpanded;\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    return !!getBusinessObject(element).processRef;\n  }\n\n  return true;\n}\nexport function isInterrupting(element) {\n  return element && getBusinessObject(element).isInterrupting !== false;\n}\nexport function isEventSubProcess(element) {\n  return element && !!getBusinessObject(element).triggeredByEvent;\n}\nexport function hasEventDefinition(element, eventType) {\n  var bo = getBusinessObject(element),\n      hasEventDefinition = false;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function (event) {\n      if (is(event, eventType)) {\n        hasEventDefinition = true;\n      }\n    });\n  }\n\n  return hasEventDefinition;\n}\nexport function hasErrorEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\n}\nexport function hasEscalationEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\n}\nexport function hasCompensateEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}","map":{"version":3,"sources":["C:/Users/Vittorio/Documents/GitHub/goal-bpmn/frontend/node_modules/bpmn-js/lib/util/DiUtil.js"],"names":["is","getBusinessObject","forEach","isExpanded","element","di","processRef","isInterrupting","isEventSubProcess","triggeredByEvent","hasEventDefinition","eventType","bo","eventDefinitions","event","hasErrorEventDefinition","hasEscalationEventDefinition","hasCompensateEventDefinition"],"mappings":"AAAA,SACEA,EADF,EAEEC,iBAFF,QAGO,aAHP;AAKA,SACEC,OADF,QAEO,UAFP;AAKA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAElC,MAAIJ,EAAE,CAACI,OAAD,EAAU,mBAAV,CAAN,EAAsC;AACpC,WAAO,KAAP;AACD;;AAED,MAAIJ,EAAE,CAACI,OAAD,EAAU,iBAAV,CAAN,EAAoC;AAClC,WAAO,CAAC,CAACH,iBAAiB,CAACG,OAAD,CAAjB,CAA2BC,EAA3B,CAA8BF,UAAvC;AACD;;AAED,MAAIH,EAAE,CAACI,OAAD,EAAU,kBAAV,CAAN,EAAqC;AACnC,WAAO,CAAC,CAACH,iBAAiB,CAACG,OAAD,CAAjB,CAA2BE,UAApC;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,SAASC,cAAT,CAAwBH,OAAxB,EAAiC;AACtC,SAAOA,OAAO,IAAIH,iBAAiB,CAACG,OAAD,CAAjB,CAA2BG,cAA3B,KAA8C,KAAhE;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BJ,OAA3B,EAAoC;AACzC,SAAOA,OAAO,IAAI,CAAC,CAACH,iBAAiB,CAACG,OAAD,CAAjB,CAA2BK,gBAA/C;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BN,OAA5B,EAAqCO,SAArC,EAAgD;AACrD,MAAIC,EAAE,GAAGX,iBAAiB,CAACG,OAAD,CAA1B;AAAA,MACIM,kBAAkB,GAAG,KADzB;;AAGA,MAAIE,EAAE,CAACC,gBAAP,EAAyB;AACvBX,IAAAA,OAAO,CAACU,EAAE,CAACC,gBAAJ,EAAsB,UAASC,KAAT,EAAgB;AAC3C,UAAId,EAAE,CAACc,KAAD,EAAQH,SAAR,CAAN,EAA0B;AACxBD,QAAAA,kBAAkB,GAAG,IAArB;AACD;AACF,KAJM,CAAP;AAKD;;AAED,SAAOA,kBAAP;AACD;AAED,OAAO,SAASK,uBAAT,CAAiCX,OAAjC,EAA0C;AAC/C,SAAOM,kBAAkB,CAACN,OAAD,EAAU,2BAAV,CAAzB;AACD;AAED,OAAO,SAASY,4BAAT,CAAsCZ,OAAtC,EAA+C;AACpD,SAAOM,kBAAkB,CAACN,OAAD,EAAU,gCAAV,CAAzB;AACD;AAED,OAAO,SAASa,4BAAT,CAAsCb,OAAtC,EAA+C;AACpD,SAAOM,kBAAkB,CAACN,OAAD,EAAU,gCAAV,CAAzB;AACD","sourcesContent":["import {\n  is,\n  getBusinessObject\n} from './ModelUtil';\n\nimport {\n  forEach\n} from 'min-dash';\n\n\nexport function isExpanded(element) {\n\n  if (is(element, 'bpmn:CallActivity')) {\n    return false;\n  }\n\n  if (is(element, 'bpmn:SubProcess')) {\n    return !!getBusinessObject(element).di.isExpanded;\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    return !!getBusinessObject(element).processRef;\n  }\n\n  return true;\n}\n\nexport function isInterrupting(element) {\n  return element && getBusinessObject(element).isInterrupting !== false;\n}\n\nexport function isEventSubProcess(element) {\n  return element && !!getBusinessObject(element).triggeredByEvent;\n}\n\nexport function hasEventDefinition(element, eventType) {\n  var bo = getBusinessObject(element),\n      hasEventDefinition = false;\n\n  if (bo.eventDefinitions) {\n    forEach(bo.eventDefinitions, function(event) {\n      if (is(event, eventType)) {\n        hasEventDefinition = true;\n      }\n    });\n  }\n\n  return hasEventDefinition;\n}\n\nexport function hasErrorEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\n}\n\nexport function hasEscalationEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\n}\n\nexport function hasCompensateEventDefinition(element) {\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n"]},"metadata":{},"sourceType":"module"}